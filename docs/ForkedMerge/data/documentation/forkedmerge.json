{"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[[]]},"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"variants":[{"paths":["\/documentation\/forkedmerge"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"anchor":"Protocols","title":"Protocols","generated":true,"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger"]},{"title":"Structures","anchor":"Structures","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayMerger","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/DictionaryMerger","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/SetMerger","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/TextMerger"],"generated":true},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/merge(merger:dominant:subordinate:commonAncestor:)-1b2lu","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/merge(merger:dominant:subordinate:commonAncestor:)-4b4sb","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/merge(merger:dominant:subordinate:commonAncestor:)-4u2nh","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/merge(merger:dominant:subordinate:commonAncestor:)-6zwxs","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/merge(merger:dominant:subordinate:commonAncestor:)-au4q","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/merge(merger:dominant:subordinate:commonAncestor:)-hxhk"],"generated":true,"title":"Functions","anchor":"Functions"},{"title":"Enumerations","anchor":"Enumerations","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge"],"generated":true}],"identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"ForkedMerge"}],"role":"collection","externalID":"ForkedMerge","roleHeading":"Framework","title":"ForkedMerge","symbolKind":"module"},"primaryContentSections":[{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"ForkedMerge provides the core functionality for merging divergent data structures back into a consistent state.","type":"text"}]}]}],"references":{"doc://ForkedMerge/documentation/ForkedMerge":{"abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"title":"ForkedMerge","role":"collection","url":"\/documentation\/forkedmerge","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","kind":"symbol","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/merge(merger:dominant:subordinate:commonAncestor:)-6zwxs":{"kind":"symbol","abstract":[],"role":"symbol","title":"merge(merger:dominant:subordinate:commonAncestor:)","url":"\/documentation\/forkedmerge\/merge(merger:dominant:subordinate:commonancestor:)-6zwxs","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"merge"},{"kind":"text","text":"<"},{"text":"Element","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"merger"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11ForkedMerge25ArrayOfIdentifiableMergerV","text":"ArrayOfIdentifiableMerger","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"dominant"},{"text":": [","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"subordinate"},{"text":": [","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"commonAncestor","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":"]","kind":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/merge(merger:dominant:subordinate:commonAncestor:)-6zwxs","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/ArrayMerger":{"navigatorTitle":[{"text":"ArrayMerger","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Merges an array by treating the contained elements as values.","type":"text"}],"url":"\/documentation\/forkedmerge\/arraymerger","title":"ArrayMerger","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayMerger","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ArrayMerger","kind":"identifier"}]},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge":{"url":"\/documentation\/forkedmerge\/propertymerge","kind":"symbol","abstract":[{"text":"The algorithm used to merge changes to a property.","type":"text"},{"text":" ","type":"text"},{"text":"Some properties know how to merge themselves; they conform to ","type":"text"},{"type":"codeVoice","code":"Mergeable"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Other types have no intrinsic merge, but can be merged by a "},{"type":"codeVoice","code":"Merger"},{"text":".","type":"text"}],"title":"PropertyMerge","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PropertyMerge"}],"type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge","navigatorTitle":[{"kind":"identifier","text":"PropertyMerge"}],"role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/merge(merger:dominant:subordinate:commonAncestor:)-1b2lu":{"title":"merge(merger:dominant:subordinate:commonAncestor:)","type":"topic","url":"\/documentation\/forkedmerge\/merge(merger:dominant:subordinate:commonancestor:)-1b2lu","role":"symbol","kind":"symbol","abstract":[],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/merge(merger:dominant:subordinate:commonAncestor:)-1b2lu","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"merge"},{"text":"<","kind":"text"},{"text":"Key","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"merger","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11ForkedMerge16DictionaryMergerV","text":"DictionaryMerger"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Key"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"dominant","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Dictionary","preciseIdentifier":"s:SD"},{"text":"<","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"subordinate"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SD","text":"Dictionary"},{"kind":"text","text":"<"},{"text":"Key","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"commonAncestor"},{"text":": ","kind":"text"},{"text":"Dictionary","kind":"typeIdentifier","preciseIdentifier":"s:SD"},{"kind":"text","text":"<"},{"text":"Key","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Dictionary","preciseIdentifier":"s:SD","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}]},"doc://ForkedMerge/documentation/ForkedMerge/merge(merger:dominant:subordinate:commonAncestor:)-4b4sb":{"title":"merge(merger:dominant:subordinate:commonAncestor:)","role":"symbol","url":"\/documentation\/forkedmerge\/merge(merger:dominant:subordinate:commonancestor:)-4b4sb","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/merge(merger:dominant:subordinate:commonAncestor:)-4b4sb","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"merge","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Key","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Value"},{"text":">(","kind":"text"},{"text":"merger","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11ForkedMerge16DictionaryMergerV","kind":"typeIdentifier","text":"DictionaryMerger"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":", "},{"text":"Value","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"dominant"},{"kind":"text","text":": "},{"text":"Dictionary","preciseIdentifier":"s:SD","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Key"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"subordinate"},{"kind":"text","text":": "},{"text":"Dictionary","preciseIdentifier":"s:SD","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Key"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"commonAncestor"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Dictionary","preciseIdentifier":"s:SD"},{"text":"<","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Value","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SD","text":"Dictionary"},{"text":"<","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","abstract":[]},"doc://ForkedMerge/documentation/ForkedMerge/DictionaryMerger":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DictionaryMerger"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/DictionaryMerger","title":"DictionaryMerger","navigatorTitle":[{"text":"DictionaryMerger","kind":"identifier"}],"url":"\/documentation\/forkedmerge\/dictionarymerger","kind":"symbol","type":"topic","abstract":[{"text":"Merges an array by treating the contained elements as values.","type":"text"}],"role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray":{"navigatorTitle":[{"text":"MergeableArray","kind":"identifier"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Represents a CRDT for an array of values, such as characters in a string."},{"text":" ","type":"text"},{"type":"text","text":"The stress here is on values, because this array does not guarantee that uniqueness of"},{"text":" ","type":"text"},{"text":"elements is preserverd. After a merge, it is possible that multiple copies of the same element","type":"text"},{"type":"text","text":" "},{"text":"may be present. Think about merging changes to text: If the user types the same word on two","type":"text"},{"type":"text","text":" "},{"text":"devices at the same time, after the merge, you will have the same word twice — the value is","type":"text"},{"text":" ","type":"text"},{"text":"inserted twice, and there is no check that the value already exists in the array.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This type is typically useful for strings in collaborative environments, and less useful for"},{"text":" ","type":"text"},{"text":"storing identifiable objects, since you can end up with duplicates. If you use it for this purpose,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"you should dedupe after every merge."},{"type":"text","text":" "},{"type":"text","text":"This type represents the array internally as a tree, which generally leads to more intuitive merging"},{"type":"text","text":" "},{"type":"text","text":"of conflicting versions. You could use this as the basis of a basic collaborative editor."},{"text":" ","type":"text"},{"text":"Note that it contains a complete history of changes, including deletions, so it grows over time.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"If you need a more compact representation, consider using a merger instead."}],"url":"\/documentation\/forkedmerge\/mergeablearray","title":"MergeableArray","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MergeableArray","kind":"identifier"}]},"doc://ForkedMerge/documentation/ForkedMerge/TextMerger":{"abstract":[],"type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/TextMerger","role":"symbol","navigatorTitle":[{"text":"TextMerger","kind":"identifier"}],"title":"TextMerger","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TextMerger"}],"kind":"symbol","url":"\/documentation\/forkedmerge\/textmerger"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableDictionary":{"title":"MergeableDictionary","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MergeableDictionary"}],"type":"topic","abstract":[{"type":"text","text":"Represents a mergable type for a dictionary of values."},{"type":"text","text":" "},{"type":"text","text":"Uses a CRDT algorithm."}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary","navigatorTitle":[{"kind":"identifier","text":"MergeableDictionary"}],"url":"\/documentation\/forkedmerge\/mergeabledictionary","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/SetMerger":{"role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/SetMerger","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SetMerger","kind":"identifier"}],"abstract":[{"type":"text","text":"Merges a set by treating the contained elements as values."}],"title":"SetMerger","navigatorTitle":[{"text":"SetMerger","kind":"identifier"}],"type":"topic","url":"\/documentation\/forkedmerge\/setmerger"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableSet":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MergeableSet"}],"title":"MergeableSet","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"MergeableSet","kind":"identifier"}],"url":"\/documentation\/forkedmerge\/mergeableset","abstract":[{"type":"text","text":"Observed-Remove Set. Can add and remove like a normal set."},{"text":" ","type":"text"},{"type":"text","text":"Based on Convergent and commutative replicated data types by M Shapiro, N Preguiça, C Baquero, M Zawirski - 2011 - hal.inria.fr"}],"type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet","role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MergeableValue"}],"title":"MergeableValue","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue","role":"symbol","kind":"symbol","url":"\/documentation\/forkedmerge\/mergeablevalue","navigatorTitle":[{"kind":"identifier","text":"MergeableValue"}],"abstract":[{"text":"Implements Last-Writer-Wins Register. Whenever the contained value is updated, it stores a timestamp with it.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This allows the type to automatically merge simply by choosing the value that was written later."},{"type":"text","text":" "},{"type":"text","text":"Because there is a chance of timestamp collisions, a UUID is included to make collisions extremely unlikely."},{"type":"text","text":" "},{"type":"text","text":"Based on Convergent and commutative replicated data types by M Shapiro, N Preguiça, C Baquero, M Zawirski - 2011 - hal.inria.fr"}]},"doc://ForkedMerge/documentation/ForkedMerge/Merger":{"abstract":[{"type":"text","text":"A merger is a type that applies a merging algorithm to merge two values together."},{"type":"text","text":" "},{"type":"text","text":"The values are typically of a simple type. The algorithm could be anything, from a"},{"text":" ","type":"text"},{"type":"text","text":"simple most recent edit wins, to more advanced CRDT based approaches that use"},{"text":" ","type":"text"},{"text":"diffing against a common ancestor.","type":"text"}],"type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger","role":"symbol","navigatorTitle":[{"text":"Merger","kind":"identifier"}],"title":"Merger","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Merger"}],"kind":"symbol","url":"\/documentation\/forkedmerge\/merger"},"doc://ForkedMerge/documentation/ForkedMerge/merge(merger:dominant:subordinate:commonAncestor:)-au4q":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"merge"},{"text":"<","kind":"text"},{"text":"M","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"merger","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"M","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"dominant"},{"text":": ","kind":"text"},{"text":"M","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:11ForkedMerge6MergerP1TQa"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"subordinate"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"M"},{"kind":"text","text":"."},{"preciseIdentifier":"s:11ForkedMerge6MergerP1TQa","kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"externalParam","text":"commonAncestor"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"M"},{"kind":"text","text":"."},{"preciseIdentifier":"s:11ForkedMerge6MergerP1TQa","kind":"typeIdentifier","text":"T"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"M"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:11ForkedMerge6MergerP1TQa"}],"role":"symbol","type":"topic","abstract":[],"url":"\/documentation\/forkedmerge\/merge(merger:dominant:subordinate:commonancestor:)-au4q","kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/merge(merger:dominant:subordinate:commonAncestor:)-au4q","title":"merge(merger:dominant:subordinate:commonAncestor:)"},"doc://ForkedMerge/documentation/ForkedMerge/ArrayOfIdentifiableMerger":{"type":"topic","url":"\/documentation\/forkedmerge\/arrayofidentifiablemerger","role":"symbol","title":"ArrayOfIdentifiableMerger","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ArrayOfIdentifiableMerger","kind":"identifier"}],"navigatorTitle":[{"text":"ArrayOfIdentifiableMerger","kind":"identifier"}],"abstract":[{"type":"text","text":"Merges an array, ensuring that the result has elements with unqiue identifiers."}],"kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger"},"doc://ForkedMerge/documentation/ForkedMerge/merge(merger:dominant:subordinate:commonAncestor:)-4u2nh":{"role":"symbol","url":"\/documentation\/forkedmerge\/merge(merger:dominant:subordinate:commonancestor:)-4u2nh","abstract":[],"kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"merge","kind":"identifier"},{"text":"<","kind":"text"},{"text":"M","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"merger","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"M","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"dominant"},{"text":": ","kind":"text"},{"text":"M","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:11ForkedMerge6MergerP1TQa","text":"T","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"subordinate","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"M","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:11ForkedMerge6MergerP1TQa","text":"T"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"commonAncestor"},{"kind":"text","text":": "},{"text":"M","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:11ForkedMerge6MergerP1TQa"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"M"},{"kind":"text","text":"."},{"text":"T","preciseIdentifier":"s:11ForkedMerge6MergerP1TQa","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"merge(merger:dominant:subordinate:commonAncestor:)","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/merge(merger:dominant:subordinate:commonAncestor:)-4u2nh"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyBacking":{"abstract":[{"type":"text","text":"The storage used for a property. These storage types have built in"},{"type":"text","text":" "},{"text":"systems for merging. They maintain the information they need (eg history)","type":"text"},{"text":" ","type":"text"},{"text":"to properly merge even if with copies that have conflicting changes.","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PropertyBacking","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/forkedmerge\/propertybacking","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking","role":"symbol","title":"PropertyBacking","navigatorTitle":[{"text":"PropertyBacking","kind":"identifier"}]},"doc://ForkedMerge/documentation/ForkedMerge/merge(merger:dominant:subordinate:commonAncestor:)-hxhk":{"type":"topic","abstract":[],"kind":"symbol","role":"symbol","url":"\/documentation\/forkedmerge\/merge(merger:dominant:subordinate:commonancestor:)-hxhk","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/merge(merger:dominant:subordinate:commonAncestor:)-hxhk","title":"merge(merger:dominant:subordinate:commonAncestor:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"merge"},{"text":"<","kind":"text"},{"text":"Element","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"merger","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ArrayOfIdentifiableMerger","preciseIdentifier":"s:11ForkedMerge25ArrayOfIdentifiableMergerV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":">, ","kind":"text"},{"text":"dominant","kind":"externalParam"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":"], ","kind":"text"},{"text":"subordinate","kind":"externalParam"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Element"},{"text":"], ","kind":"text"},{"text":"commonAncestor","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"]","kind":"text"}]}}}