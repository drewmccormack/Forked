{"hierarchy":{"paths":[[]]},"abstract":[{"text":"Handles merging of forked data structures.","type":"text"}],"identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","interfaceLanguage":"swift"},"kind":"symbol","topicSections":[{"anchor":"Protocols","generated":true,"title":"Protocols","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger"]},{"title":"Structures","generated":true,"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayMerger","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/DictionaryMerger","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/SetMerger","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/TextMerger"],"anchor":"Structures"},{"generated":true,"title":"Functions","anchor":"Functions","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/merge(merger:dominant:subordinate:commonAncestor:)-1b2lu","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/merge(merger:dominant:subordinate:commonAncestor:)-4b4sb","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/merge(merger:dominant:subordinate:commonAncestor:)-4u2nh","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/merge(merger:dominant:subordinate:commonAncestor:)-6zwxs","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/merge(merger:dominant:subordinate:commonAncestor:)-au4q","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/merge(merger:dominant:subordinate:commonAncestor:)-hxhk"]},{"generated":true,"title":"Enumerations","anchor":"Enumerations","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge"]}],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"ForkedMerge provides the core functionality for merging divergent data structures back into a consistent state.","type":"text"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"externalID":"ForkedMerge","role":"collection","symbolKind":"module","title":"ForkedMerge","modules":[{"name":"ForkedMerge"}],"roleHeading":"Framework"},"variants":[{"paths":["\/documentation\/forkedmerge"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://ForkedMerge/documentation/ForkedMerge/TextMerger":{"title":"TextMerger","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TextMerger","kind":"identifier"}],"kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"TextMerger","kind":"identifier"}],"url":"\/documentation\/forkedmerge\/textmerger","abstract":[],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/TextMerger"},"doc://ForkedMerge/documentation/ForkedMerge/DictionaryMerger":{"url":"\/documentation\/forkedmerge\/dictionarymerger","type":"topic","title":"DictionaryMerger","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DictionaryMerger"}],"role":"symbol","abstract":[{"type":"text","text":"Merges an array by treating the contained elements as values."}],"navigatorTitle":[{"kind":"identifier","text":"DictionaryMerger"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/DictionaryMerger"},"doc://ForkedMerge/documentation/ForkedMerge/Merger":{"type":"topic","url":"\/documentation\/forkedmerge\/merger","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger","abstract":[{"type":"text","text":"A merger is a type that applies a merging algorithm to merge two values together."},{"type":"text","text":" "},{"text":"The values are typically of a simple type. The algorithm could be anything, from a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"simple most recent edit wins, to more advanced CRDT based approaches that use"},{"type":"text","text":" "},{"type":"text","text":"diffing against a common ancestor."}],"title":"Merger","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Merger"}],"navigatorTitle":[{"kind":"identifier","text":"Merger"}],"kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/merge(merger:dominant:subordinate:commonAncestor:)-4b4sb":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/merge(merger:dominant:subordinate:commonAncestor:)-4b4sb","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"merge"},{"kind":"text","text":"<"},{"text":"Key","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"merger"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11ForkedMerge16DictionaryMergerV","kind":"typeIdentifier","text":"DictionaryMerger"},{"text":"<","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"dominant","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Dictionary","preciseIdentifier":"s:SD"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"text":">, ","kind":"text"},{"text":"subordinate","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Dictionary","kind":"typeIdentifier","preciseIdentifier":"s:SD"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Key"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">, "},{"text":"commonAncestor","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SD","text":"Dictionary"},{"kind":"text","text":"<"},{"text":"Key","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:SD","text":"Dictionary","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Key"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"title":"merge(merger:dominant:subordinate:commonAncestor:)","type":"topic","url":"\/documentation\/forkedmerge\/merge(merger:dominant:subordinate:commonancestor:)-4b4sb","kind":"symbol","abstract":[]},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PropertyMerge","kind":"identifier"}],"abstract":[{"text":"The algorithm used to merge changes to a property.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Some properties know how to merge themselves; they conform to "},{"type":"codeVoice","code":"Mergeable"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Other types have no intrinsic merge, but can be merged by a ","type":"text"},{"type":"codeVoice","code":"Merger"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"PropertyMerge"}],"type":"topic","url":"\/documentation\/forkedmerge\/propertymerge","kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge","role":"symbol","title":"PropertyMerge"},"doc://ForkedMerge/documentation/ForkedMerge/SetMerger":{"title":"SetMerger","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/SetMerger","abstract":[{"type":"text","text":"Merges a set by treating the contained elements as values."}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SetMerger"}],"role":"symbol","navigatorTitle":[{"text":"SetMerger","kind":"identifier"}],"url":"\/documentation\/forkedmerge\/setmerger"},"doc://ForkedMerge/documentation/ForkedMerge/merge(merger:dominant:subordinate:commonAncestor:)-1b2lu":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/merge(merger:dominant:subordinate:commonAncestor:)-1b2lu","abstract":[],"url":"\/documentation\/forkedmerge\/merge(merger:dominant:subordinate:commonancestor:)-1b2lu","title":"merge(merger:dominant:subordinate:commonAncestor:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"merge","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Key"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Value"},{"text":">(","kind":"text"},{"text":"merger","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11ForkedMerge16DictionaryMergerV","text":"DictionaryMerger","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Key","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"dominant","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Dictionary","kind":"typeIdentifier","preciseIdentifier":"s:SD"},{"text":"<","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">, "},{"text":"subordinate","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Dictionary","preciseIdentifier":"s:SD","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"commonAncestor"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SD","text":"Dictionary","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Key"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">) "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SD","text":"Dictionary"},{"kind":"text","text":"<"},{"text":"Key","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"text":">","kind":"text"}],"type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/merge(merger:dominant:subordinate:commonAncestor:)-au4q":{"role":"symbol","abstract":[],"kind":"symbol","type":"topic","title":"merge(merger:dominant:subordinate:commonAncestor:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"merge","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"M"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"merger"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"M"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"dominant"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"M"},{"kind":"text","text":"."},{"preciseIdentifier":"s:11ForkedMerge6MergerP1TQa","kind":"typeIdentifier","text":"T"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"subordinate"},{"kind":"text","text":": "},{"text":"M","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:11ForkedMerge6MergerP1TQa","text":"T"},{"text":", ","kind":"text"},{"text":"commonAncestor","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"M","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:11ForkedMerge6MergerP1TQa","text":"T"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"M"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11ForkedMerge6MergerP1TQa","text":"T","kind":"typeIdentifier"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/merge(merger:dominant:subordinate:commonAncestor:)-au4q","url":"\/documentation\/forkedmerge\/merge(merger:dominant:subordinate:commonancestor:)-au4q"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableDictionary":{"title":"MergeableDictionary","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"MergeableDictionary","kind":"identifier"}],"navigatorTitle":[{"text":"MergeableDictionary","kind":"identifier"}],"role":"symbol","url":"\/documentation\/forkedmerge\/mergeabledictionary","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableDictionary","abstract":[{"text":"Represents a mergable type for a dictionary of values.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Uses a CRDT algorithm."}],"kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/merge(merger:dominant:subordinate:commonAncestor:)-6zwxs":{"title":"merge(merger:dominant:subordinate:commonAncestor:)","role":"symbol","type":"topic","url":"\/documentation\/forkedmerge\/merge(merger:dominant:subordinate:commonancestor:)-6zwxs","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"merge"},{"text":"<","kind":"text"},{"text":"Element","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"merger"},{"kind":"text","text":": "},{"text":"ArrayOfIdentifiableMerger","kind":"typeIdentifier","preciseIdentifier":"s:11ForkedMerge25ArrayOfIdentifiableMergerV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"dominant"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Element"},{"text":"], ","kind":"text"},{"text":"subordinate","kind":"externalParam"},{"kind":"text","text":": ["},{"text":"Element","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"commonAncestor","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ["},{"text":"Element","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"abstract":[],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/merge(merger:dominant:subordinate:commonAncestor:)-6zwxs","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray":{"kind":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray","role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"MergeableArray","kind":"identifier"}],"navigatorTitle":[{"text":"MergeableArray","kind":"identifier"}],"abstract":[{"type":"text","text":"Represents a CRDT for an array of values, such as characters in a string."},{"type":"text","text":" "},{"type":"text","text":"The stress here is on values, because this array does not guarantee that uniqueness of"},{"type":"text","text":" "},{"type":"text","text":"elements is preserverd. After a merge, it is possible that multiple copies of the same element"},{"text":" ","type":"text"},{"text":"may be present. Think about merging changes to text: If the user types the same word on two","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"devices at the same time, after the merge, you will have the same word twice — the value is"},{"text":" ","type":"text"},{"type":"text","text":"inserted twice, and there is no check that the value already exists in the array."},{"type":"text","text":" "},{"type":"text","text":"This type is typically useful for strings in collaborative environments, and less useful for"},{"text":" ","type":"text"},{"type":"text","text":"storing identifiable objects, since you can end up with duplicates. If you use it for this purpose,"},{"type":"text","text":" "},{"text":"you should dedupe after every merge.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This type represents the array internally as a tree, which generally leads to more intuitive merging"},{"text":" ","type":"text"},{"type":"text","text":"of conflicting versions. You could use this as the basis of a basic collaborative editor."},{"type":"text","text":" "},{"text":"Note that it contains a complete history of changes, including deletions, so it grows over time.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"If you need a more compact representation, consider using a merger instead."}],"title":"MergeableArray","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/ArrayOfIdentifiableMerger":{"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ArrayOfIdentifiableMerger"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger","role":"symbol","abstract":[{"text":"Merges an array, ensuring that the result has elements with unqiue identifiers.","type":"text"}],"url":"\/documentation\/forkedmerge\/arrayofidentifiablemerger","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArrayOfIdentifiableMerger"}],"title":"ArrayOfIdentifiableMerger"},"doc://ForkedMerge/documentation/ForkedMerge/merge(merger:dominant:subordinate:commonAncestor:)-4u2nh":{"kind":"symbol","url":"\/documentation\/forkedmerge\/merge(merger:dominant:subordinate:commonancestor:)-4u2nh","type":"topic","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"merge"},{"text":"<","kind":"text"},{"text":"M","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"merger"},{"text":": ","kind":"text"},{"text":"M","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"dominant"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"M"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11ForkedMerge6MergerP1TQa","kind":"typeIdentifier","text":"T"},{"text":"?, ","kind":"text"},{"text":"subordinate","kind":"externalParam"},{"kind":"text","text":": "},{"text":"M","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11ForkedMerge6MergerP1TQa","kind":"typeIdentifier","text":"T"},{"text":"?, ","kind":"text"},{"text":"commonAncestor","kind":"externalParam"},{"kind":"text","text":": "},{"text":"M","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:11ForkedMerge6MergerP1TQa"},{"text":"?) ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"M"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11ForkedMerge6MergerP1TQa","text":"T","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"merge(merger:dominant:subordinate:commonAncestor:)","role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/merge(merger:dominant:subordinate:commonAncestor:)-4u2nh"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableSet":{"abstract":[{"type":"text","text":"Observed-Remove Set. Can add and remove like a normal set."},{"type":"text","text":" "},{"type":"text","text":"Based on Convergent and commutative replicated data types by M Shapiro, N Preguiça, C Baquero, M Zawirski - 2011 - hal.inria.fr"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"MergeableSet","kind":"identifier"}],"title":"MergeableSet","kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableSet","role":"symbol","navigatorTitle":[{"text":"MergeableSet","kind":"identifier"}],"url":"\/documentation\/forkedmerge\/mergeableset","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/merge(merger:dominant:subordinate:commonAncestor:)-hxhk":{"title":"merge(merger:dominant:subordinate:commonAncestor:)","kind":"symbol","type":"topic","url":"\/documentation\/forkedmerge\/merge(merger:dominant:subordinate:commonancestor:)-hxhk","role":"symbol","abstract":[],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/merge(merger:dominant:subordinate:commonAncestor:)-hxhk","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"merge"},{"text":"<","kind":"text"},{"text":"Element","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"merger"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11ForkedMerge25ArrayOfIdentifiableMergerV","text":"ArrayOfIdentifiableMerger","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"dominant","kind":"externalParam"},{"kind":"text","text":": ["},{"text":"Element","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"subordinate","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"commonAncestor","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> [","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"text":"]","kind":"text"}]},"doc://ForkedMerge/documentation/ForkedMerge/ArrayMerger":{"url":"\/documentation\/forkedmerge\/arraymerger","abstract":[{"type":"text","text":"Merges an array by treating the contained elements as values."}],"kind":"symbol","title":"ArrayMerger","navigatorTitle":[{"text":"ArrayMerger","kind":"identifier"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayMerger","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArrayMerger"}],"role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyBacking":{"role":"symbol","url":"\/documentation\/forkedmerge\/propertybacking","kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyBacking","type":"topic","title":"PropertyBacking","abstract":[{"type":"text","text":"The storage used for a property. These storage types have built in"},{"text":" ","type":"text"},{"type":"text","text":"systems for merging. They maintain the information they need (eg history)"},{"text":" ","type":"text"},{"text":"to properly merge even if with copies that have conflicting changes.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PropertyBacking"}],"navigatorTitle":[{"text":"PropertyBacking","kind":"identifier"}]},"doc://ForkedMerge/documentation/ForkedMerge":{"abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"type":"topic","kind":"symbol","title":"ForkedMerge","role":"collection","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","url":"\/documentation\/forkedmerge"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue","navigatorTitle":[{"kind":"identifier","text":"MergeableValue"}],"type":"topic","abstract":[{"type":"text","text":"Implements Last-Writer-Wins Register. Whenever the contained value is updated, it stores a timestamp with it."},{"text":" ","type":"text"},{"type":"text","text":"This allows the type to automatically merge simply by choosing the value that was written later."},{"text":" ","type":"text"},{"text":"Because there is a chance of timestamp collisions, a UUID is included to make collisions extremely unlikely.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Based on Convergent and commutative replicated data types by M Shapiro, N Preguiça, C Baquero, M Zawirski - 2011 - hal.inria.fr"}],"role":"symbol","title":"MergeableValue","url":"\/documentation\/forkedmerge\/mergeablevalue","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MergeableValue"}]}}}