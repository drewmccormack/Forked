{"metadata":{"role":"symbol","title":"ArrayMerger","roleHeading":"Structure","externalID":"s:11ForkedMerge11ArrayMergerV","modules":[{"name":"ForkedMerge"}],"navigatorTitle":[{"text":"ArrayMerger","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ArrayMerger"}],"symbolKind":"struct"},"abstract":[{"type":"text","text":"Merges an array by treating the contained elements as values."}],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ArrayMerger","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Element","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SQ","text":"Equatable"}],"platforms":["macOS"],"languages":["swift"]}]}],"sections":[],"variants":[{"paths":["\/documentation\/forkedmerge\/arraymerger"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayMerger","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge"]]},"topicSections":[{"title":"Initializers","generated":true,"anchor":"Initializers","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayMerger\/init()"]},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayMerger\/merge(_:withSubordinate:commonAncestor:)"],"title":"Instance Methods","anchor":"Instance-Methods","generated":true}],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://ForkedMerge/documentation/ForkedMerge/ArrayMerger/merge(_:withSubordinate:commonAncestor:)":{"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"merge"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"], "},{"text":"withSubordinate","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"commonAncestor","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> ["},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"title":"merge(_:withSubordinate:commonAncestor:)","abstract":[],"url":"\/documentation\/forkedmerge\/arraymerger\/merge(_:withsubordinate:commonancestor:)","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayMerger\/merge(_:withSubordinate:commonAncestor:)","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge":{"abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"title":"ForkedMerge","role":"collection","url":"\/documentation\/forkedmerge","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","kind":"symbol","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/ArrayMerger":{"navigatorTitle":[{"text":"ArrayMerger","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Merges an array by treating the contained elements as values.","type":"text"}],"url":"\/documentation\/forkedmerge\/arraymerger","title":"ArrayMerger","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayMerger","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ArrayMerger","kind":"identifier"}]},"doc://ForkedMerge/documentation/ForkedMerge/Merger":{"abstract":[{"type":"text","text":"A merger is a type that applies a merging algorithm to merge two values together."},{"type":"text","text":" "},{"type":"text","text":"The values are typically of a simple type. The algorithm could be anything, from a"},{"text":" ","type":"text"},{"type":"text","text":"simple most recent edit wins, to more advanced CRDT based approaches that use"},{"text":" ","type":"text"},{"text":"diffing against a common ancestor.","type":"text"}],"type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger","role":"symbol","navigatorTitle":[{"text":"Merger","kind":"identifier"}],"title":"Merger","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Merger"}],"kind":"symbol","url":"\/documentation\/forkedmerge\/merger"},"doc://ForkedMerge/documentation/ForkedMerge/ArrayMerger/init()":{"kind":"symbol","title":"init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayMerger\/init()","role":"symbol","type":"topic","abstract":[],"url":"\/documentation\/forkedmerge\/arraymerger\/init()"}}}