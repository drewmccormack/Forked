{"sections":[],"metadata":{"title":"Equatable Implementations","modules":[{"name":"ForkedMerge"}],"role":"collectionGroup","roleHeading":"API Collection"},"variants":[{"paths":["\/documentation\/forkedmerge\/mergeablevalue\/equatable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"article","identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Equatable-Implementations","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue"]]},"topicSections":[{"generated":true,"title":"Operators","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/!=(_:_:)"],"anchor":"Operators"}],"references":{"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue","navigatorTitle":[{"kind":"identifier","text":"MergeableValue"}],"type":"topic","abstract":[{"type":"text","text":"Implements Last-Writer-Wins Register. Whenever the contained value is updated, it stores a timestamp with it."},{"text":" ","type":"text"},{"type":"text","text":"This allows the type to automatically merge simply by choosing the value that was written later."},{"text":" ","type":"text"},{"text":"Because there is a chance of timestamp collisions, a UUID is included to make collisions extremely unlikely.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Based on Convergent and commutative replicated data types by M Shapiro, N PreguiÃ§a, C Baquero, M Zawirski - 2011 - hal.inria.fr"}],"role":"symbol","title":"MergeableValue","url":"\/documentation\/forkedmerge\/mergeablevalue","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MergeableValue"}]},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/!=(_:_:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/!=(_:_:)","title":"!=(_:_:)","url":"\/documentation\/forkedmerge\/mergeablevalue\/!=(_:_:)","abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"role":"symbol","kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge":{"abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"type":"topic","kind":"symbol","title":"ForkedMerge","role":"collection","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","url":"\/documentation\/forkedmerge"}}}