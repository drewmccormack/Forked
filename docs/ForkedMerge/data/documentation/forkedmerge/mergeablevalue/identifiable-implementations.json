{"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"modules":[{"name":"ForkedMerge"}],"roleHeading":"API Collection","role":"collectionGroup","title":"Identifiable Implementations"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/mergeablevalue\/identifiable-implementations"]}],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue"]]},"identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Identifiable-Implementations","interfaceLanguage":"swift"},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/id"],"anchor":"Instance-Properties","generated":true}],"kind":"article","references":{"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/id":{"abstract":[],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Identifiable"},{"type":"text","text":"."}]},"url":"\/documentation\/forkedmerge\/mergeablevalue\/id","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"id"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":".","kind":"text"},{"text":"ID","kind":"typeIdentifier","preciseIdentifier":"s:s12IdentifiableP2IDQa"}],"title":"id","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/id","kind":"symbol","role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MergeableValue"}],"title":"MergeableValue","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue","role":"symbol","kind":"symbol","url":"\/documentation\/forkedmerge\/mergeablevalue","navigatorTitle":[{"kind":"identifier","text":"MergeableValue"}],"abstract":[{"text":"Implements Last-Writer-Wins Register. Whenever the contained value is updated, it stores a timestamp with it.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This allows the type to automatically merge simply by choosing the value that was written later."},{"type":"text","text":" "},{"type":"text","text":"Because there is a chance of timestamp collisions, a UUID is included to make collisions extremely unlikely."},{"type":"text","text":" "},{"type":"text","text":"Based on Convergent and commutative replicated data types by M Shapiro, N Pregui√ßa, C Baquero, M Zawirski - 2011 - hal.inria.fr"}]},"doc://ForkedMerge/documentation/ForkedMerge":{"abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"title":"ForkedMerge","role":"collection","url":"\/documentation\/forkedmerge","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","kind":"symbol","type":"topic"}}}