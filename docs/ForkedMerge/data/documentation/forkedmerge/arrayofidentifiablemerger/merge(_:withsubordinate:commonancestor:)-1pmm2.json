{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"merge","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"value","kind":"internalParam"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"withSubordinate"},{"text":" ","kind":"text"},{"text":"other","kind":"internalParam"},{"kind":"text","text":": ["},{"text":"Element","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"commonAncestor","kind":"externalParam"},{"kind":"text","text":": ["},{"text":"Element","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> [","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"sections":[],"metadata":{"modules":[{"name":"ForkedMerge"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Mergeable"},{"type":"text","text":" and "},{"code":"Identifiable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"externalID":"s:11ForkedMerge25ArrayOfIdentifiableMergerVAA0A09MergeableRzrlE5merge_15withSubordinate14commonAncestorSayxGAI_A2ItKF","extendedModule":"ForkedMerge","roleHeading":"Instance Method","role":"symbol","title":"merge(_:withSubordinate:commonAncestor:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"merge"},{"kind":"text","text":"(["},{"text":"Element","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"withSubordinate"},{"kind":"text","text":": ["},{"text":"Element","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"commonAncestor","kind":"externalParam"},{"kind":"text","text":": ["},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"]) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ["},{"text":"Element","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"symbolKind":"method"},"identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger\/merge(_:withSubordinate:commonAncestor:)-1pmm2","interfaceLanguage":"swift"},"abstract":[{"text":"This function merges two arrays of elements that are identifiable and mergeable.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The result is different to merging where the elements are not mergeable."},{"type":"text","text":" "},{"text":"This call will recurse the merge.","type":"text"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/arrayofidentifiablemerger\/merge(_:withsubordinate:commonancestor:)-1pmm2"]}],"kind":"symbol","references":{"doc://ForkedMerge/documentation/ForkedMerge/ArrayOfIdentifiableMerger":{"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ArrayOfIdentifiableMerger"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger","role":"symbol","abstract":[{"text":"Merges an array, ensuring that the result has elements with unqiue identifiers.","type":"text"}],"url":"\/documentation\/forkedmerge\/arrayofidentifiablemerger","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArrayOfIdentifiableMerger"}],"title":"ArrayOfIdentifiableMerger"},"doc://ForkedMerge/documentation/ForkedMerge":{"abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"type":"topic","kind":"symbol","title":"ForkedMerge","role":"collection","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","url":"\/documentation\/forkedmerge"},"doc://ForkedMerge/documentation/ForkedMerge/ArrayOfIdentifiableMerger/merge(_:withSubordinate:commonAncestor:)-1pmm2":{"title":"merge(_:withSubordinate:commonAncestor:)","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger\/merge(_:withSubordinate:commonAncestor:)-1pmm2","kind":"symbol","url":"\/documentation\/forkedmerge\/arrayofidentifiablemerger\/merge(_:withsubordinate:commonancestor:)-1pmm2","type":"topic","role":"symbol","abstract":[{"type":"text","text":"This function merges two arrays of elements that are identifiable and mergeable."},{"text":" ","type":"text"},{"text":"The result is different to merging where the elements are not mergeable.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This call will recurse the merge."}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Mergeable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Identifiable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"merge"},{"text":"([","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"withSubordinate"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Element"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"commonAncestor"},{"text":": [","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ["},{"text":"Element","kind":"typeIdentifier"},{"text":"]","kind":"text"}]}}}