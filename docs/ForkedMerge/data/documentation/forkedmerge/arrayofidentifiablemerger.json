{"metadata":{"roleHeading":"Structure","title":"ArrayOfIdentifiableMerger","externalID":"s:11ForkedMerge25ArrayOfIdentifiableMergerV","role":"symbol","symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ArrayOfIdentifiableMerger"}],"modules":[{"name":"ForkedMerge"}],"navigatorTitle":[{"kind":"identifier","text":"ArrayOfIdentifiableMerger"}]},"abstract":[{"type":"text","text":"Merges an array, ensuring that the result has elements with unqiue identifiers."}],"sections":[],"topicSections":[{"anchor":"Initializers","generated":true,"title":"Initializers","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger\/init()"]},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger\/merge(_:withSubordinate:commonAncestor:)-1pmm2"],"anchor":"Instance-Methods","title":"Instance Methods","generated":true},{"anchor":"Default-Implementations","title":"Default Implementations","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger\/Merger-Implementations"],"generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ArrayOfIdentifiableMerger","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Element","kind":"genericParameter"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Equatable","kind":"typeIdentifier","preciseIdentifier":"s:SQ"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" : "},{"text":"Identifiable","preciseIdentifier":"s:s12IdentifiableP","kind":"typeIdentifier"}],"languages":["swift"]}]}],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge"]]},"variants":[{"paths":["\/documentation\/forkedmerge\/arrayofidentifiablemerger"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger"},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger"],"title":"Conforms To","type":"conformsTo"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","references":{"doc://ForkedMerge/documentation/ForkedMerge/ArrayOfIdentifiableMerger/init()":{"abstract":[],"title":"init()","url":"\/documentation\/forkedmerge\/arrayofidentifiablemerger\/init()","role":"symbol","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger\/init()","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"()","kind":"text"}]},"doc://ForkedMerge/documentation/ForkedMerge":{"abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"type":"topic","kind":"symbol","title":"ForkedMerge","role":"collection","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","url":"\/documentation\/forkedmerge"},"doc://ForkedMerge/documentation/ForkedMerge/ArrayOfIdentifiableMerger/Merger-Implementations":{"abstract":[],"kind":"article","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger\/Merger-Implementations","url":"\/documentation\/forkedmerge\/arrayofidentifiablemerger\/merger-implementations","role":"collectionGroup","title":"Merger Implementations"},"doc://ForkedMerge/documentation/ForkedMerge/ArrayOfIdentifiableMerger/merge(_:withSubordinate:commonAncestor:)-1pmm2":{"title":"merge(_:withSubordinate:commonAncestor:)","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger\/merge(_:withSubordinate:commonAncestor:)-1pmm2","kind":"symbol","url":"\/documentation\/forkedmerge\/arrayofidentifiablemerger\/merge(_:withsubordinate:commonancestor:)-1pmm2","type":"topic","role":"symbol","abstract":[{"type":"text","text":"This function merges two arrays of elements that are identifiable and mergeable."},{"text":" ","type":"text"},{"text":"The result is different to merging where the elements are not mergeable.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This call will recurse the merge."}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Mergeable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Identifiable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"merge"},{"text":"([","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"withSubordinate"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Element"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"commonAncestor"},{"text":": [","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ["},{"text":"Element","kind":"typeIdentifier"},{"text":"]","kind":"text"}]},"doc://ForkedMerge/documentation/ForkedMerge/Merger":{"type":"topic","url":"\/documentation\/forkedmerge\/merger","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/Merger","abstract":[{"type":"text","text":"A merger is a type that applies a merging algorithm to merge two values together."},{"type":"text","text":" "},{"text":"The values are typically of a simple type. The algorithm could be anything, from a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"simple most recent edit wins, to more advanced CRDT based approaches that use"},{"type":"text","text":" "},{"type":"text","text":"diffing against a common ancestor."}],"title":"Merger","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Merger"}],"navigatorTitle":[{"kind":"identifier","text":"Merger"}],"kind":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/ArrayOfIdentifiableMerger":{"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ArrayOfIdentifiableMerger"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/ArrayOfIdentifiableMerger","role":"symbol","abstract":[{"text":"Merges an array, ensuring that the result has elements with unqiue identifiers.","type":"text"}],"url":"\/documentation\/forkedmerge\/arrayofidentifiablemerger","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArrayOfIdentifiableMerger"}],"title":"ArrayOfIdentifiableMerger"}}}