{"abstract":[{"text":"The algorithm used to merge changes to a property.","type":"text"},{"type":"text","text":" "},{"text":"Some properties know how to merge themselves; they conform to ","type":"text"},{"type":"codeVoice","code":"Mergeable"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Other types have no intrinsic merge, but can be merged by a ","type":"text"},{"code":"Merger","type":"codeVoice"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge"]]},"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayOfIdentifiableMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/dictionaryMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/mergeableProtocol","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/setMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/textMerge"],"anchor":"Enumeration-Cases","generated":true},{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/init(rawValue:)"],"generated":true,"title":"Initializers","anchor":"Initializers"},{"generated":true,"anchor":"Default-Implementations","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/Equatable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/RawRepresentable-Implementations"],"title":"Default Implementations"}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/ForkedMerge\/SQ","doc:\/\/ForkedMerge\/SH","doc:\/\/ForkedMerge\/SY"],"kind":"relationships","type":"conformsTo"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/propertymerge"]}],"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PropertyMerge"}]}]}],"metadata":{"title":"PropertyMerge","externalID":"s:11ForkedMerge08PropertyB0O","navigatorTitle":[{"kind":"identifier","text":"PropertyMerge"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PropertyMerge","kind":"identifier"}],"symbolKind":"enum","role":"symbol","roleHeading":"Enumeration","modules":[{"name":"ForkedMerge"}]},"references":{"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/init(rawValue:)":{"kind":"symbol","type":"topic","role":"symbol","abstract":[],"url":"\/documentation\/forkedmerge\/propertymerge\/init(rawvalue:)","fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"kind":"externalParam","text":"rawValue"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":")","kind":"text"}],"title":"init(rawValue:)","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/init(rawValue:)"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/arrayMerge":{"type":"topic","abstract":[{"type":"text","text":"Will merge as an array of values. Elements must be Equatable."},{"text":" ","type":"text"},{"text":"When there is a conflict, it will","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"determine the changes made to each version, and merge with an"},{"type":"text","text":" "},{"type":"text","text":"algorithm that keeps related changes together (eg editing a word)."},{"text":" ","type":"text"},{"type":"text","text":"Does not guarantee uniqueness of elements after merge:"},{"type":"text","text":" "},{"type":"text","text":"there can be duplicates created, so it is more suitable to value types"},{"type":"text","text":" "},{"type":"text","text":"like characters in a string. than it is to identifiable types."}],"kind":"symbol","title":"PropertyMerge.arrayMerge","role":"symbol","url":"\/documentation\/forkedmerge\/propertymerge\/arraymerge","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"arrayMerge","kind":"identifier"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayMerge"},"doc://ForkedMerge/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/ForkedMerge\/SQ"},"doc://ForkedMerge/SH":{"title":"Swift.Hashable","type":"unresolvable","identifier":"doc:\/\/ForkedMerge\/SH"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/mergeableProtocol":{"title":"PropertyMerge.mergeableProtocol","role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/mergeableProtocol","type":"topic","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"mergeableProtocol"}],"abstract":[{"text":"The property must be a ","type":"text"},{"code":"Mergeable","type":"codeVoice"},{"type":"text","text":" type, and will be merged accordingly"},{"type":"text","text":" "},{"type":"text","text":"to the "},{"code":"Mergeable","type":"codeVoice"},{"type":"text","text":" protocol."},{"text":" ","type":"text"},{"type":"text","text":"This is the default algorithm if "},{"type":"codeVoice","code":"@Merged"},{"text":" has been applied with no","type":"text"},{"type":"text","text":" "},{"text":"algorithm stated.","type":"text"}],"kind":"symbol","url":"\/documentation\/forkedmerge\/propertymerge\/mergeableprotocol"},"doc://ForkedMerge/documentation/ForkedMerge":{"abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"type":"topic","kind":"symbol","title":"ForkedMerge","role":"collection","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","url":"\/documentation\/forkedmerge"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/RawRepresentable-Implementations":{"type":"topic","abstract":[],"kind":"article","title":"RawRepresentable Implementations","role":"collectionGroup","url":"\/documentation\/forkedmerge\/propertymerge\/rawrepresentable-implementations","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/RawRepresentable-Implementations"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/arrayOfIdentifiableMerge":{"title":"PropertyMerge.arrayOfIdentifiableMerge","role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/arrayOfIdentifiableMerge","type":"topic","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"arrayOfIdentifiableMerge"}],"abstract":[{"text":"Will merge as an array of values. Elements must be Equatable and","type":"text"},{"type":"text","text":" "},{"text":"Identifiable. It will ensure that there are no duplicated identifiers following","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a merge. When there is a conflict, it will"},{"text":" ","type":"text"},{"type":"text","text":"determine the changes made to each version, and merge with an"},{"text":" ","type":"text"},{"type":"text","text":"algorithm that keeps related changes together (eg editing a word)."},{"type":"text","text":" "},{"type":"text","text":"Guarantees uniqueness of identifiers after merge, but does not"},{"text":" ","type":"text"},{"text":"enforce uniqueness of identifiers through updates made directly to the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"property."}],"kind":"symbol","url":"\/documentation\/forkedmerge\/propertymerge\/arrayofidentifiablemerge"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/setMerge":{"type":"topic","abstract":[{"type":"text","text":"Will merge sets of values. When there is a conflict, it will handle"},{"type":"text","text":" "},{"text":"it using a MergeableSet for each set of changes.","type":"text"}],"kind":"symbol","title":"PropertyMerge.setMerge","role":"symbol","url":"\/documentation\/forkedmerge\/propertymerge\/setmerge","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setMerge","kind":"identifier"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/setMerge"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PropertyMerge","kind":"identifier"}],"abstract":[{"text":"The algorithm used to merge changes to a property.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Some properties know how to merge themselves; they conform to "},{"type":"codeVoice","code":"Mergeable"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Other types have no intrinsic merge, but can be merged by a ","type":"text"},{"type":"codeVoice","code":"Merger"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"PropertyMerge"}],"type":"topic","url":"\/documentation\/forkedmerge\/propertymerge","kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge","role":"symbol","title":"PropertyMerge"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/textMerge":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/textMerge","type":"topic","abstract":[{"type":"text","text":"Applies the "},{"type":"codeVoice","code":"array"},{"text":" merge algorithm to the characters in a string.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This is suitable for any type of shared text, which may"},{"type":"text","text":" "},{"type":"text","text":"have conflicting edits, like a collaborative editor."},{"text":" ","type":"text"},{"type":"text","text":"The variable must be a "},{"code":"String","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","title":"PropertyMerge.textMerge","url":"\/documentation\/forkedmerge\/propertymerge\/textmerge","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"textMerge"}]},"doc://ForkedMerge/SY":{"type":"unresolvable","title":"Swift.RawRepresentable","identifier":"doc:\/\/ForkedMerge\/SY"},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/dictionaryMerge":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/dictionaryMerge","type":"topic","abstract":[{"type":"text","text":"Merges dictionaries. When there is a conflict, it will merge using"},{"text":" ","type":"text"},{"text":"a MergeableDictionary for each dictionary. If the value type is","type":"text"},{"type":"text","text":" "},{"code":"Mergeable","type":"codeVoice"},{"type":"text","text":", the dictionary will be merged recursing into the values."}],"role":"symbol","title":"PropertyMerge.dictionaryMerge","url":"\/documentation\/forkedmerge\/propertymerge\/dictionarymerge","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"dictionaryMerge"}]},"doc://ForkedMerge/documentation/ForkedMerge/PropertyMerge/Equatable-Implementations":{"type":"topic","abstract":[],"kind":"article","title":"Equatable Implementations","role":"collectionGroup","url":"\/documentation\/forkedmerge\/propertymerge\/equatable-implementations","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/PropertyMerge\/Equatable-Implementations"}}}