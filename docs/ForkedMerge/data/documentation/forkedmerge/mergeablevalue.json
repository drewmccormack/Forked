{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"MergeableValue","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Equatable","preciseIdentifier":"s:SQ"}]}]}],"abstract":[{"text":"Implements Last-Writer-Wins Register. Whenever the contained value is updated, it stores a timestamp with it.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This allows the type to automatically merge simply by choosing the value that was written later."},{"text":" ","type":"text"},{"text":"Because there is a chance of timestamp collisions, a UUID is included to make collisions extremely unlikely.","type":"text"},{"type":"text","text":" "},{"text":"Based on Convergent and commutative replicated data types by M Shapiro, N Preguiça, C Baquero, M Zawirski - 2011 - hal.inria.fr","type":"text"}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue"},"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge"]]},"metadata":{"symbolKind":"struct","title":"MergeableValue","navigatorTitle":[{"text":"MergeableValue","kind":"identifier"}],"roleHeading":"Structure","externalID":"s:11ForkedMerge14MergeableValueV","modules":[{"name":"ForkedMerge"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"MergeableValue","kind":"identifier"}]},"topicSections":[{"anchor":"Initializers","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/init(_:)"],"title":"Initializers","generated":true},{"title":"Instance Properties","anchor":"Instance-Properties","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/value"],"generated":true},{"anchor":"Default-Implementations","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Decodable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Equatable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Identifiable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Mergeable-Implementations"],"title":"Default Implementations","generated":true}],"variants":[{"paths":["\/documentation\/forkedmerge\/mergeablevalue"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/ForkedMerge\/6Forked9MergeableP","doc:\/\/ForkedMerge\/s8CopyableP","doc:\/\/ForkedMerge\/Se","doc:\/\/ForkedMerge\/SE","doc:\/\/ForkedMerge\/SQ","doc:\/\/ForkedMerge\/SH","doc:\/\/ForkedMerge\/s12IdentifiableP","doc:\/\/ForkedMerge\/s8SendableP"],"kind":"relationships","title":"Conforms To"}],"references":{"doc://ForkedMerge/SE":{"type":"unresolvable","title":"Swift.Encodable","identifier":"doc:\/\/ForkedMerge\/SE"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/Equatable-Implementations":{"kind":"article","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Equatable-Implementations","role":"collectionGroup","abstract":[],"url":"\/documentation\/forkedmerge\/mergeablevalue\/equatable-implementations","title":"Equatable Implementations"},"doc://ForkedMerge/6Forked9MergeableP":{"type":"unresolvable","title":"Forked.Mergeable","identifier":"doc:\/\/ForkedMerge\/6Forked9MergeableP"},"doc://ForkedMerge/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/ForkedMerge\/SH"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue","navigatorTitle":[{"kind":"identifier","text":"MergeableValue"}],"type":"topic","abstract":[{"type":"text","text":"Implements Last-Writer-Wins Register. Whenever the contained value is updated, it stores a timestamp with it."},{"text":" ","type":"text"},{"type":"text","text":"This allows the type to automatically merge simply by choosing the value that was written later."},{"text":" ","type":"text"},{"text":"Because there is a chance of timestamp collisions, a UUID is included to make collisions extremely unlikely.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Based on Convergent and commutative replicated data types by M Shapiro, N Preguiça, C Baquero, M Zawirski - 2011 - hal.inria.fr"}],"role":"symbol","title":"MergeableValue","url":"\/documentation\/forkedmerge\/mergeablevalue","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MergeableValue"}]},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/init(_:)":{"kind":"symbol","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/init(_:)","role":"symbol","abstract":[],"url":"\/documentation\/forkedmerge\/mergeablevalue\/init(_:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"init(_:)"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/Mergeable-Implementations":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Mergeable-Implementations","type":"topic","abstract":[],"role":"collectionGroup","title":"Mergeable Implementations","url":"\/documentation\/forkedmerge\/mergeablevalue\/mergeable-implementations","kind":"article"},"doc://ForkedMerge/SQ":{"identifier":"doc:\/\/ForkedMerge\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://ForkedMerge/s12IdentifiableP":{"identifier":"doc:\/\/ForkedMerge\/s12IdentifiableP","type":"unresolvable","title":"Swift.Identifiable"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/value":{"role":"symbol","abstract":[],"type":"topic","kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/value","title":"value","url":"\/documentation\/forkedmerge\/mergeablevalue\/value","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"value"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"}]},"doc://ForkedMerge/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/ForkedMerge\/s8SendableP","type":"unresolvable"},"doc://ForkedMerge/s8CopyableP":{"title":"Swift.Copyable","identifier":"doc:\/\/ForkedMerge\/s8CopyableP","type":"unresolvable"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/Identifiable-Implementations":{"type":"topic","title":"Identifiable Implementations","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Identifiable-Implementations","role":"collectionGroup","kind":"article","abstract":[],"url":"\/documentation\/forkedmerge\/mergeablevalue\/identifiable-implementations"},"doc://ForkedMerge/documentation/ForkedMerge":{"abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"type":"topic","kind":"symbol","title":"ForkedMerge","role":"collection","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","url":"\/documentation\/forkedmerge"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/Decodable-Implementations":{"role":"collectionGroup","abstract":[],"type":"topic","kind":"article","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Decodable-Implementations","title":"Decodable Implementations","url":"\/documentation\/forkedmerge\/mergeablevalue\/decodable-implementations"},"doc://ForkedMerge/Se":{"type":"unresolvable","title":"Swift.Decodable","identifier":"doc:\/\/ForkedMerge\/Se"}}}