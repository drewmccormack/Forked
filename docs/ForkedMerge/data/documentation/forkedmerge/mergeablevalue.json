{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"MergeableValue","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Equatable","preciseIdentifier":"s:SQ","kind":"typeIdentifier"}],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge"]]},"kind":"symbol","sections":[],"metadata":{"role":"symbol","navigatorTitle":[{"text":"MergeableValue","kind":"identifier"}],"externalID":"s:11ForkedMerge14MergeableValueV","title":"MergeableValue","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MergeableValue"}],"roleHeading":"Structure","symbolKind":"struct","modules":[{"name":"ForkedMerge"}]},"variants":[{"paths":["\/documentation\/forkedmerge\/mergeablevalue"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"anchor":"Initializers","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/init(_:)"],"title":"Initializers","generated":true},{"title":"Instance Properties","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/value"],"generated":true,"anchor":"Instance-Properties"},{"generated":true,"title":"Default Implementations","anchor":"Default-Implementations","identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Decodable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Equatable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Identifiable-Implementations","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Mergeable-Implementations"]}],"abstract":[{"text":"Implements Last-Writer-Wins Register. Whenever the contained value is updated, it stores a timestamp with it.","type":"text"},{"text":" ","type":"text"},{"text":"This allows the type to automatically merge simply by choosing the value that was written later.","type":"text"},{"type":"text","text":" "},{"text":"Because there is a chance of timestamp collisions, a UUID is included to make collisions extremely unlikely.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Based on Convergent and commutative replicated data types by M Shapiro, N Preguiça, C Baquero, M Zawirski - 2011 - hal.inria.fr"}],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/ForkedMerge\/6Forked9MergeableP","doc:\/\/ForkedMerge\/s8CopyableP","doc:\/\/ForkedMerge\/Se","doc:\/\/ForkedMerge\/SE","doc:\/\/ForkedMerge\/SQ","doc:\/\/ForkedMerge\/SH","doc:\/\/ForkedMerge\/s12IdentifiableP","doc:\/\/ForkedMerge\/s8SendableP"]}],"identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue","interfaceLanguage":"swift"},"references":{"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/init(_:)":{"url":"\/documentation\/forkedmerge\/mergeablevalue\/init(_:)","kind":"symbol","title":"init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"abstract":[],"role":"symbol","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/init(_:)"},"doc://ForkedMerge/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/ForkedMerge\/s8SendableP","type":"unresolvable"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/Decodable-Implementations":{"url":"\/documentation\/forkedmerge\/mergeablevalue\/decodable-implementations","kind":"article","title":"Decodable Implementations","abstract":[],"role":"collectionGroup","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Decodable-Implementations"},"doc://ForkedMerge/SE":{"title":"Swift.Encodable","identifier":"doc:\/\/ForkedMerge\/SE","type":"unresolvable"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MergeableValue"}],"title":"MergeableValue","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue","role":"symbol","kind":"symbol","url":"\/documentation\/forkedmerge\/mergeablevalue","navigatorTitle":[{"kind":"identifier","text":"MergeableValue"}],"abstract":[{"text":"Implements Last-Writer-Wins Register. Whenever the contained value is updated, it stores a timestamp with it.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This allows the type to automatically merge simply by choosing the value that was written later."},{"type":"text","text":" "},{"type":"text","text":"Because there is a chance of timestamp collisions, a UUID is included to make collisions extremely unlikely."},{"type":"text","text":" "},{"type":"text","text":"Based on Convergent and commutative replicated data types by M Shapiro, N Preguiça, C Baquero, M Zawirski - 2011 - hal.inria.fr"}]},"doc://ForkedMerge/documentation/ForkedMerge":{"abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"title":"ForkedMerge","role":"collection","url":"\/documentation\/forkedmerge","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","kind":"symbol","type":"topic"},"doc://ForkedMerge/6Forked9MergeableP":{"title":"Forked.Mergeable","identifier":"doc:\/\/ForkedMerge\/6Forked9MergeableP","type":"unresolvable"},"doc://ForkedMerge/s12IdentifiableP":{"title":"Swift.Identifiable","identifier":"doc:\/\/ForkedMerge\/s12IdentifiableP","type":"unresolvable"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/Equatable-Implementations":{"url":"\/documentation\/forkedmerge\/mergeablevalue\/equatable-implementations","kind":"article","title":"Equatable Implementations","abstract":[],"role":"collectionGroup","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Equatable-Implementations"},"doc://ForkedMerge/Se":{"title":"Swift.Decodable","identifier":"doc:\/\/ForkedMerge\/Se","type":"unresolvable"},"doc://ForkedMerge/SH":{"title":"Swift.Hashable","identifier":"doc:\/\/ForkedMerge\/SH","type":"unresolvable"},"doc://ForkedMerge/s8CopyableP":{"title":"Swift.Copyable","identifier":"doc:\/\/ForkedMerge\/s8CopyableP","type":"unresolvable"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/Mergeable-Implementations":{"url":"\/documentation\/forkedmerge\/mergeablevalue\/mergeable-implementations","kind":"article","title":"Mergeable Implementations","abstract":[],"role":"collectionGroup","type":"topic","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Mergeable-Implementations"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/Identifiable-Implementations":{"title":"Identifiable Implementations","kind":"article","url":"\/documentation\/forkedmerge\/mergeablevalue\/identifiable-implementations","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/Identifiable-Implementations","type":"topic","abstract":[],"role":"collectionGroup"},"doc://ForkedMerge/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/ForkedMerge\/SQ","type":"unresolvable"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableValue/value":{"title":"value","role":"symbol","type":"topic","url":"\/documentation\/forkedmerge\/mergeablevalue\/value","abstract":[],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableValue\/value","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"value"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"}]}}}