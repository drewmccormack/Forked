{"metadata":{"title":"suffix(from:)","modules":[{"relatedModules":["Swift"],"name":"ForkedMerge"}],"role":"symbol","symbolKind":"method","extendedModule":"Swift","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"suffix","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa"}],"externalID":"s:SlsE6suffix4from11SubSequenceQz5IndexQz_tF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","roleHeading":"Instance Method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"suffix","kind":"identifier"},{"kind":"text","text":"("},{"text":"from","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"start","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl5IndexQa","kind":"typeIdentifier","text":"Index"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"SubSequence","kind":"typeIdentifier","preciseIdentifier":"s:Sl11SubSequenceQa"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The index at which to start the resulting subsequence."},{"type":"text","text":" "},{"code":"start","type":"codeVoice"},{"text":" must be a valid index of the collection.","type":"text"}]}],"name":"start"}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A subsequence starting at the "},{"type":"codeVoice","code":"start"},{"type":"text","text":" position."}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following example searches for the index of the number "},{"code":"40","type":"codeVoice"},{"type":"text","text":" in an"},{"text":" ","type":"text"},{"type":"text","text":"array of integers, and then prints the suffix of the array starting at"},{"text":" ","type":"text"},{"text":"that index:","type":"text"}]},{"syntax":null,"code":["let numbers = [10, 20, 30, 40, 50, 60]","if let i = numbers.firstIndex(of: 40) {","    print(numbers.suffix(from: i))","}","\/\/ Prints \"[40, 50, 60]\""],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Passing the collection’s "},{"code":"endIndex","type":"codeVoice"},{"type":"text","text":" as the "},{"type":"codeVoice","code":"start"},{"type":"text","text":" parameter results in"},{"text":" ","type":"text"},{"type":"text","text":"an empty subsequence."}]},{"code":["print(numbers.suffix(from: numbers.endIndex))","\/\/ Prints \"[]\""],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Using the ","type":"text"},{"type":"codeVoice","code":"suffix(from:)"},{"type":"text","text":" method is equivalent to using a partial range"},{"text":" ","type":"text"},{"type":"text","text":"from the index as the collection’s subscript. The subscript notation is"},{"text":" ","type":"text"},{"type":"text","text":"preferred over "},{"type":"codeVoice","code":"suffix(from:)"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":null,"code":["if let i = numbers.firstIndex(of: 40) {","    print(numbers[i...])","}","\/\/ Prints \"[40, 50, 60]\""]},{"name":"Complexity","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"O(1)","type":"text"}]}],"style":"note"}]}],"sections":[],"identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/suffix(from:)","interfaceLanguage":"swift"},"kind":"symbol","variants":[{"paths":["\/documentation\/forkedmerge\/mergeablearray\/suffix(from:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"Returns a subsequence from the specified position to the end of the"},{"text":" ","type":"text"},{"text":"collection.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray"]]},"references":{"doc://ForkedMerge/documentation/ForkedMerge":{"abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"title":"ForkedMerge","role":"collection","url":"\/documentation\/forkedmerge","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","kind":"symbol","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/suffix(from:)":{"type":"topic","title":"suffix(from:)","url":"\/documentation\/forkedmerge\/mergeablearray\/suffix(from:)","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/suffix(from:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"suffix"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"SubSequence","preciseIdentifier":"s:Sl11SubSequenceQa"}],"kind":"symbol","role":"symbol","abstract":[{"text":"Returns a subsequence from the specified position to the end of the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"collection."}]},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray":{"navigatorTitle":[{"text":"MergeableArray","kind":"identifier"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Represents a CRDT for an array of values, such as characters in a string."},{"text":" ","type":"text"},{"type":"text","text":"The stress here is on values, because this array does not guarantee that uniqueness of"},{"text":" ","type":"text"},{"text":"elements is preserverd. After a merge, it is possible that multiple copies of the same element","type":"text"},{"type":"text","text":" "},{"text":"may be present. Think about merging changes to text: If the user types the same word on two","type":"text"},{"type":"text","text":" "},{"text":"devices at the same time, after the merge, you will have the same word twice — the value is","type":"text"},{"text":" ","type":"text"},{"text":"inserted twice, and there is no check that the value already exists in the array.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This type is typically useful for strings in collaborative environments, and less useful for"},{"text":" ","type":"text"},{"text":"storing identifiable objects, since you can end up with duplicates. If you use it for this purpose,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"you should dedupe after every merge."},{"type":"text","text":" "},{"type":"text","text":"This type represents the array internally as a tree, which generally leads to more intuitive merging"},{"type":"text","text":" "},{"type":"text","text":"of conflicting versions. You could use this as the basis of a basic collaborative editor."},{"text":" ","type":"text"},{"text":"Note that it contains a complete history of changes, including deletions, so it grows over time.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"If you need a more compact representation, consider using a merger instead."}],"url":"\/documentation\/forkedmerge\/mergeablearray","title":"MergeableArray","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MergeableArray","kind":"identifier"}]}}}