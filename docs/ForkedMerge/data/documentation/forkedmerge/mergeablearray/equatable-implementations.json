{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/mergeablearray\/equatable-implementations"]}],"metadata":{"roleHeading":"API Collection","title":"Equatable Implementations","role":"collectionGroup","modules":[{"name":"ForkedMerge"}]},"topicSections":[{"identifiers":["doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/!=(_:_:)"],"title":"Operators","anchor":"Operators","generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Equatable-Implementations"},"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray"]]},"sections":[],"kind":"article","schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","navigatorTitle":[{"text":"MergeableArray","kind":"identifier"}],"title":"MergeableArray","abstract":[{"type":"text","text":"Represents a CRDT for an array of values, such as characters in a string."},{"type":"text","text":" "},{"type":"text","text":"The stress here is on values, because this array does not guarantee that uniqueness of"},{"text":" ","type":"text"},{"type":"text","text":"elements is preserverd. After a merge, it is possible that multiple copies of the same element"},{"type":"text","text":" "},{"text":"may be present. Think about merging changes to text: If the user types the same word on two","type":"text"},{"type":"text","text":" "},{"type":"text","text":"devices at the same time, after the merge, you will have the same word twice â€” the value is"},{"type":"text","text":" "},{"type":"text","text":"inserted twice, and there is no check that the value already exists in the array."},{"type":"text","text":" "},{"type":"text","text":"This type is typically useful for strings in collaborative environments, and less useful for"},{"type":"text","text":" "},{"type":"text","text":"storing identifiable objects, since you can end up with duplicates. If you use it for this purpose,"},{"type":"text","text":" "},{"text":"you should dedupe after every merge.","type":"text"},{"type":"text","text":" "},{"text":"This type represents the array internally as a tree, which generally leads to more intuitive merging","type":"text"},{"text":" ","type":"text"},{"text":"of conflicting versions. You could use this as the basis of a basic collaborative editor.","type":"text"},{"type":"text","text":" "},{"text":"Note that it contains a complete history of changes, including deletions, so it grows over time.","type":"text"},{"type":"text","text":" "},{"text":"If you need a more compact representation, consider using a merger instead.","type":"text"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MergeableArray"}],"url":"\/documentation\/forkedmerge\/mergeablearray"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/!=(_:_:)":{"role":"symbol","kind":"symbol","abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/!=(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"title":"!=(_:_:)","type":"topic","url":"\/documentation\/forkedmerge\/mergeablearray\/!=(_:_:)"},"doc://ForkedMerge/documentation/ForkedMerge":{"url":"\/documentation\/forkedmerge","role":"collection","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","title":"ForkedMerge","kind":"symbol","abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"type":"topic"}}}
