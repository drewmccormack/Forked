{"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","variants":[{"paths":["\/documentation\/forkedmerge\/mergeablearray\/lastindex(of:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"metadata":{"externalID":"s:SKsSQ7ElementRpzrlE9lastIndex2of0C0QzSgAB_tF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}]},"role":"symbol","title":"lastIndex(of:)","extendedModule":"Swift","modules":[{"name":"ForkedMerge","relatedModules":["Swift"]}],"roleHeading":"Instance Method","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lastIndex"},{"kind":"text","text":"("},{"kind":"externalParam","text":"of"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa","text":"Element"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"text":"?","kind":"text"}]},"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"lastIndex","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"of"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"element"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Index","kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa"},{"kind":"text","text":"?"}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An element to search for in the collection."}]}],"name":"element"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The last index where "},{"type":"codeVoice","code":"element"},{"text":" is found. If ","type":"text"},{"code":"element","type":"codeVoice"},{"text":" is not","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"found in the collection, this method returns "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}]}]},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"After using ","type":"text"},{"code":"lastIndex(of:)","type":"codeVoice"},{"type":"text","text":" to find the position of the last instance of"},{"text":" ","type":"text"},{"text":"a particular element in a collection, you can use it to access the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"element by subscripting. This example shows how you can modify one of"},{"type":"text","text":" "},{"type":"text","text":"the names in an array of students."}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["var students = [\"Ben\", \"Ivy\", \"Jordell\", \"Ben\", \"Maxime\"]","if let i = students.lastIndex(of: \"Ben\") {","    students[i] = \"Benjamin\"","}","print(students)","\/\/ Prints \"[\"Ben\", \"Ivy\", \"Jordell\", \"Benjamin\", \"Max\"]\""]},{"type":"aside","content":[{"inlineContent":[{"text":"O(","type":"text"},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"text":"), where ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":" is the length of the collection."}],"type":"paragraph"}],"style":"note","name":"Complexity"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/lastIndex(of:)"},"abstract":[{"type":"text","text":"Returns the last index where the specified value appears in the"},{"text":" ","type":"text"},{"type":"text","text":"collection."}],"references":{"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/lastIndex(of:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lastIndex","kind":"identifier"},{"kind":"text","text":"("},{"text":"of","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"kind":"text","text":"?"}],"type":"topic","title":"lastIndex(of:)","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/lastIndex(of:)","abstract":[{"type":"text","text":"Returns the last index where the specified value appears in the"},{"text":" ","type":"text"},{"text":"collection.","type":"text"}],"url":"\/documentation\/forkedmerge\/mergeablearray\/lastindex(of:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol","role":"symbol"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray":{"kind":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray","role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"MergeableArray","kind":"identifier"}],"navigatorTitle":[{"text":"MergeableArray","kind":"identifier"}],"abstract":[{"type":"text","text":"Represents a CRDT for an array of values, such as characters in a string."},{"type":"text","text":" "},{"type":"text","text":"The stress here is on values, because this array does not guarantee that uniqueness of"},{"type":"text","text":" "},{"type":"text","text":"elements is preserverd. After a merge, it is possible that multiple copies of the same element"},{"text":" ","type":"text"},{"text":"may be present. Think about merging changes to text: If the user types the same word on two","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"devices at the same time, after the merge, you will have the same word twice â€” the value is"},{"text":" ","type":"text"},{"type":"text","text":"inserted twice, and there is no check that the value already exists in the array."},{"type":"text","text":" "},{"type":"text","text":"This type is typically useful for strings in collaborative environments, and less useful for"},{"text":" ","type":"text"},{"type":"text","text":"storing identifiable objects, since you can end up with duplicates. If you use it for this purpose,"},{"type":"text","text":" "},{"text":"you should dedupe after every merge.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This type represents the array internally as a tree, which generally leads to more intuitive merging"},{"text":" ","type":"text"},{"type":"text","text":"of conflicting versions. You could use this as the basis of a basic collaborative editor."},{"type":"text","text":" "},{"text":"Note that it contains a complete history of changes, including deletions, so it grows over time.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"If you need a more compact representation, consider using a merger instead."}],"title":"MergeableArray","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge":{"abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"type":"topic","kind":"symbol","title":"ForkedMerge","role":"collection","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","url":"\/documentation\/forkedmerge"}}}