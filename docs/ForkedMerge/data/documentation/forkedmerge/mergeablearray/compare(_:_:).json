{"abstract":[{"type":"text","text":"If "},{"code":"lhs","type":"codeVoice"},{"type":"text","text":" is ordered before "},{"code":"rhs","type":"codeVoice"},{"text":" in the ordering described by the given","type":"text"},{"text":" ","type":"text"},{"text":"sequence of ","type":"text"},{"code":"SortComparator","type":"codeVoice"},{"type":"text","text":"s"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compare","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Comparator"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Comparator"},{"text":".","kind":"text"},{"text":"Compared","preciseIdentifier":"s:10Foundation14SortComparatorP8ComparedQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"text":"Comparator","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Compared","preciseIdentifier":"s:10Foundation14SortComparatorP8ComparedQa"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"c:@E@NSComparisonResult","kind":"typeIdentifier","text":"ComparisonResult"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Comparator","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation14SortComparatorP","text":"SortComparator"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Comparator"},{"text":" == ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:ST7ElementQa"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The first element of the sequence of comparators specifies the primary"},{"type":"text","text":" "},{"text":"comparator to be used in sorting the sequence’s elements. Any subsequent","type":"text"},{"type":"text","text":" "},{"type":"text","text":"comparators are used to further refine the order of elements with equal"},{"text":" ","type":"text"},{"type":"text","text":"values."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/compare(_:_:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/mergeablearray\/compare(_:_:)"]}],"metadata":{"roleHeading":"Instance Method","externalID":"s:ST10FoundationE7compareySo18NSComparisonResultV8ComparedQyd___AFtAA14SortComparatorRd__7ElementQzRsd__lF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","title":"compare(_:_:)","modules":[{"name":"ForkedMerge","relatedModules":["Swift"]}],"platforms":[{"name":"iOS","introducedAt":"15.0","beta":false,"unavailable":false,"deprecated":false},{"unavailable":false,"name":"macOS","beta":false,"deprecated":false,"introducedAt":"12.0"},{"name":"tvOS","deprecated":false,"beta":false,"introducedAt":"15.0","unavailable":false},{"introducedAt":"8.0","deprecated":false,"unavailable":false,"beta":false,"name":"watchOS"}],"extendedModule":"Swift","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compare"},{"kind":"text","text":"<"},{"text":"Comparator","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Comparator"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation14SortComparatorP8ComparedQa","text":"Compared"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Comparator"},{"kind":"text","text":"."},{"preciseIdentifier":"s:10Foundation14SortComparatorP8ComparedQa","text":"Compared","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"ComparisonResult","preciseIdentifier":"c:@E@NSComparisonResult"}],"symbolKind":"method"},"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Sequence-Implementations"]]},"references":{"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/Sequence-Implementations":{"abstract":[],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Sequence-Implementations","title":"Sequence Implementations","url":"\/documentation\/forkedmerge\/mergeablearray\/sequence-implementations","type":"topic","kind":"article","role":"collectionGroup"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/compare(_:_:)":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/compare(_:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compare","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Comparator","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Comparator","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10Foundation14SortComparatorP8ComparedQa","text":"Compared","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Comparator"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation14SortComparatorP8ComparedQa","text":"Compared"},{"text":") -> ","kind":"text"},{"text":"ComparisonResult","kind":"typeIdentifier","preciseIdentifier":"c:@E@NSComparisonResult"}],"url":"\/documentation\/forkedmerge\/mergeablearray\/compare(_:_:)","kind":"symbol","title":"compare(_:_:)","abstract":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"lhs"},{"type":"text","text":" is ordered before "},{"type":"codeVoice","code":"rhs"},{"text":" in the ordering described by the given","type":"text"},{"type":"text","text":" "},{"type":"text","text":"sequence of "},{"type":"codeVoice","code":"SortComparator"},{"text":"s","type":"text"}],"role":"symbol","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge":{"url":"\/documentation\/forkedmerge","role":"collection","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","title":"ForkedMerge","kind":"symbol","abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","navigatorTitle":[{"text":"MergeableArray","kind":"identifier"}],"title":"MergeableArray","abstract":[{"type":"text","text":"Represents a CRDT for an array of values, such as characters in a string."},{"type":"text","text":" "},{"type":"text","text":"The stress here is on values, because this array does not guarantee that uniqueness of"},{"text":" ","type":"text"},{"type":"text","text":"elements is preserverd. After a merge, it is possible that multiple copies of the same element"},{"type":"text","text":" "},{"text":"may be present. Think about merging changes to text: If the user types the same word on two","type":"text"},{"type":"text","text":" "},{"type":"text","text":"devices at the same time, after the merge, you will have the same word twice — the value is"},{"type":"text","text":" "},{"type":"text","text":"inserted twice, and there is no check that the value already exists in the array."},{"type":"text","text":" "},{"type":"text","text":"This type is typically useful for strings in collaborative environments, and less useful for"},{"type":"text","text":" "},{"type":"text","text":"storing identifiable objects, since you can end up with duplicates. If you use it for this purpose,"},{"type":"text","text":" "},{"text":"you should dedupe after every merge.","type":"text"},{"type":"text","text":" "},{"text":"This type represents the array internally as a tree, which generally leads to more intuitive merging","type":"text"},{"text":" ","type":"text"},{"text":"of conflicting versions. You could use this as the basis of a basic collaborative editor.","type":"text"},{"type":"text","text":" "},{"text":"Note that it contains a complete history of changes, including deletions, so it grows over time.","type":"text"},{"type":"text","text":" "},{"text":"If you need a more compact representation, consider using a merger instead.","type":"text"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MergeableArray"}],"url":"\/documentation\/forkedmerge\/mergeablearray"}}}
