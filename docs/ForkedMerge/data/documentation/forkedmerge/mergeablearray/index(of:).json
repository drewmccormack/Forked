{"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/index(of:)"},"metadata":{"externalID":"s:SlsSQ7ElementRpzrlE5index2of5IndexQzSgAB_tF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","symbolKind":"method","platforms":[],"title":"index(of:)","modules":[{"relatedModules":["Swift"],"name":"ForkedMerge"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"index","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"of"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"text":"?","kind":"text"}],"roleHeading":"Instance Method","role":"symbol","extendedModule":"Swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Collection-Implementations"]]},"abstract":[{"text":"Returns the first index where the specified value appears in the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"collection."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"index","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"of"},{"kind":"text","text":" "},{"text":"element","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier","text":"Element"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"languages":["swift"]}]}],"variants":[{"paths":["\/documentation\/forkedmerge\/mergeablearray\/index(of:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","navigatorTitle":[{"text":"MergeableArray","kind":"identifier"}],"title":"MergeableArray","abstract":[{"type":"text","text":"Represents a CRDT for an array of values, such as characters in a string."},{"type":"text","text":" "},{"type":"text","text":"The stress here is on values, because this array does not guarantee that uniqueness of"},{"text":" ","type":"text"},{"type":"text","text":"elements is preserverd. After a merge, it is possible that multiple copies of the same element"},{"type":"text","text":" "},{"text":"may be present. Think about merging changes to text: If the user types the same word on two","type":"text"},{"type":"text","text":" "},{"type":"text","text":"devices at the same time, after the merge, you will have the same word twice â€” the value is"},{"type":"text","text":" "},{"type":"text","text":"inserted twice, and there is no check that the value already exists in the array."},{"type":"text","text":" "},{"type":"text","text":"This type is typically useful for strings in collaborative environments, and less useful for"},{"type":"text","text":" "},{"type":"text","text":"storing identifiable objects, since you can end up with duplicates. If you use it for this purpose,"},{"type":"text","text":" "},{"text":"you should dedupe after every merge.","type":"text"},{"type":"text","text":" "},{"text":"This type represents the array internally as a tree, which generally leads to more intuitive merging","type":"text"},{"text":" ","type":"text"},{"text":"of conflicting versions. You could use this as the basis of a basic collaborative editor.","type":"text"},{"type":"text","text":" "},{"text":"Note that it contains a complete history of changes, including deletions, so it grows over time.","type":"text"},{"type":"text","text":" "},{"text":"If you need a more compact representation, consider using a merger instead.","type":"text"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MergeableArray"}],"url":"\/documentation\/forkedmerge\/mergeablearray"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/index(of:)":{"abstract":[{"type":"text","text":"Returns the first index where the specified value appears in the"},{"type":"text","text":" "},{"type":"text","text":"collection."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"index","kind":"identifier"},{"kind":"text","text":"("},{"text":"of","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:ST7ElementQa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Index","preciseIdentifier":"s:Sl5IndexQa"},{"kind":"text","text":"?"}],"url":"\/documentation\/forkedmerge\/mergeablearray\/index(of:)","deprecated":true,"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/index(of:)","title":"index(of:)","kind":"symbol","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge":{"url":"\/documentation\/forkedmerge","role":"collection","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","title":"ForkedMerge","kind":"symbol","abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/Collection-Implementations":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Collection-Implementations","role":"collectionGroup","type":"topic","title":"Collection Implementations","url":"\/documentation\/forkedmerge\/mergeablearray\/collection-implementations","abstract":[],"kind":"article"}}}
