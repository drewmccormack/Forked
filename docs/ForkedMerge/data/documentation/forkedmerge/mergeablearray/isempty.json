{"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/mergeablearray\/isempty"]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/isEmpty"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isEmpty"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}]}]},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"When you need to check whether your collection is empty, use the","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"isEmpty"},{"text":" property instead of checking that the ","type":"text"},{"code":"count","type":"codeVoice"},{"text":" property is","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"equal to zero. For collections that don’t conform to"},{"type":"text","text":" "},{"code":"RandomAccessCollection","type":"codeVoice"},{"type":"text","text":", accessing the "},{"type":"codeVoice","code":"count"},{"text":" property iterates","type":"text"},{"type":"text","text":" "},{"text":"through the elements of the collection.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let horseName = \"Silver\"","if horseName.isEmpty {","    print(\"My horse has no name.\")","} else {","    print(\"Hi ho, \\(horseName)!\")","}","\/\/ Prints \"Hi ho, Silver!\")"]},{"type":"aside","name":"Complexity","content":[{"type":"paragraph","inlineContent":[{"text":"O(1)","type":"text"}]}],"style":"note"}],"kind":"content"}],"kind":"symbol","metadata":{"symbolKind":"property","modules":[{"relatedModules":["Swift"],"name":"ForkedMerge"}],"roleHeading":"Instance Property","role":"symbol","externalID":"s:SlsE7isEmptySbvp::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"isEmpty","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"extendedModule":"Swift","title":"isEmpty"},"abstract":[{"type":"text","text":"A Boolean value indicating whether the collection is empty."}],"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray"]]},"references":{"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray":{"kind":"symbol","url":"\/documentation\/forkedmerge\/mergeablearray","role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"MergeableArray","kind":"identifier"}],"navigatorTitle":[{"text":"MergeableArray","kind":"identifier"}],"abstract":[{"type":"text","text":"Represents a CRDT for an array of values, such as characters in a string."},{"type":"text","text":" "},{"type":"text","text":"The stress here is on values, because this array does not guarantee that uniqueness of"},{"type":"text","text":" "},{"type":"text","text":"elements is preserverd. After a merge, it is possible that multiple copies of the same element"},{"text":" ","type":"text"},{"text":"may be present. Think about merging changes to text: If the user types the same word on two","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"devices at the same time, after the merge, you will have the same word twice — the value is"},{"text":" ","type":"text"},{"type":"text","text":"inserted twice, and there is no check that the value already exists in the array."},{"type":"text","text":" "},{"type":"text","text":"This type is typically useful for strings in collaborative environments, and less useful for"},{"text":" ","type":"text"},{"type":"text","text":"storing identifiable objects, since you can end up with duplicates. If you use it for this purpose,"},{"type":"text","text":" "},{"text":"you should dedupe after every merge.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This type represents the array internally as a tree, which generally leads to more intuitive merging"},{"text":" ","type":"text"},{"type":"text","text":"of conflicting versions. You could use this as the basis of a basic collaborative editor."},{"type":"text","text":" "},{"text":"Note that it contains a complete history of changes, including deletions, so it grows over time.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"If you need a more compact representation, consider using a merger instead."}],"title":"MergeableArray","type":"topic"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/isEmpty":{"url":"\/documentation\/forkedmerge\/mergeablearray\/isempty","kind":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/isEmpty","title":"isEmpty","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isEmpty","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"A Boolean value indicating whether the collection is empty."}]},"doc://ForkedMerge/documentation/ForkedMerge":{"abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"type":"topic","kind":"symbol","title":"ForkedMerge","role":"collection","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","url":"\/documentation\/forkedmerge"}}}