{"hierarchy":{"paths":[["doc:\/\/ForkedMerge\/documentation\/ForkedMerge","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Collection-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"indices"},{"kind":"text","text":"("},{"text":"of","kind":"externalParam"},{"kind":"text","text":" "},{"text":"element","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":") -> ","kind":"text"},{"text":"RangeSet","preciseIdentifier":"s:s8RangeSetV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"kind":"text","text":">"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"An element to look for in the collection."}],"type":"paragraph"}],"name":"element"}]},{"content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A set of the indices of the elements that are equal to"},{"text":" ","type":"text"},{"type":"codeVoice","code":"element"},{"type":"text","text":"."}]}],"kind":"content"},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"text":"For example, you can use this method to find all the places that a","type":"text"},{"type":"text","text":" "},{"text":"particular letter occurs in a string.","type":"text"}],"type":"paragraph"},{"code":["let str = \"Fresh cheese in a breeze\"","let allTheEs = str.indices(of: \"e\")","\/\/ str[allTheEs].count == 7"],"syntax":null,"type":"codeListing"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":"), where "},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":" is the length of the collection.","type":"text"}]}],"type":"aside","style":"note","name":"Complexity"}],"kind":"content"}],"identifier":{"url":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/indices(of:)","interfaceLanguage":"swift"},"metadata":{"symbolKind":"method","roleHeading":"Instance Method","externalID":"s:SlsSQ7ElementRpzrlE7indices2ofs8RangeSetVy5IndexQzGAB_tF::SYNTHESIZED::s:11ForkedMerge14MergeableArrayV","title":"indices(of:)","platforms":[{"unavailable":false,"introducedAt":"18.0","beta":false,"deprecated":false,"name":"iOS"},{"unavailable":false,"introducedAt":"15.0","name":"macOS","beta":false,"deprecated":false},{"deprecated":false,"beta":false,"introducedAt":"18.0","unavailable":false,"name":"tvOS"},{"name":"visionOS","beta":false,"introducedAt":"2.0","deprecated":false,"unavailable":false},{"beta":false,"unavailable":false,"deprecated":false,"name":"watchOS","introducedAt":"11.0"}],"extendedModule":"Swift","modules":[{"name":"ForkedMerge","relatedModules":["Swift"]}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"indices"},{"kind":"text","text":"("},{"text":"of","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":") -> ","kind":"text"},{"text":"RangeSet","kind":"typeIdentifier","preciseIdentifier":"s:s8RangeSetV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sl5IndexQa","text":"Index","kind":"typeIdentifier"},{"kind":"text","text":">"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}]}},"sections":[],"abstract":[{"type":"text","text":"Returns the indices of all the elements that are equal to the given"},{"text":" ","type":"text"},{"text":"element.","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forkedmerge\/mergeablearray\/indices(of:)"]}],"references":{"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray","navigatorTitle":[{"text":"MergeableArray","kind":"identifier"}],"title":"MergeableArray","abstract":[{"type":"text","text":"Represents a CRDT for an array of values, such as characters in a string."},{"type":"text","text":" "},{"type":"text","text":"The stress here is on values, because this array does not guarantee that uniqueness of"},{"text":" ","type":"text"},{"type":"text","text":"elements is preserverd. After a merge, it is possible that multiple copies of the same element"},{"type":"text","text":" "},{"text":"may be present. Think about merging changes to text: If the user types the same word on two","type":"text"},{"type":"text","text":" "},{"type":"text","text":"devices at the same time, after the merge, you will have the same word twice â€” the value is"},{"type":"text","text":" "},{"type":"text","text":"inserted twice, and there is no check that the value already exists in the array."},{"type":"text","text":" "},{"type":"text","text":"This type is typically useful for strings in collaborative environments, and less useful for"},{"type":"text","text":" "},{"type":"text","text":"storing identifiable objects, since you can end up with duplicates. If you use it for this purpose,"},{"type":"text","text":" "},{"text":"you should dedupe after every merge.","type":"text"},{"type":"text","text":" "},{"text":"This type represents the array internally as a tree, which generally leads to more intuitive merging","type":"text"},{"text":" ","type":"text"},{"text":"of conflicting versions. You could use this as the basis of a basic collaborative editor.","type":"text"},{"type":"text","text":" "},{"text":"Note that it contains a complete history of changes, including deletions, so it grows over time.","type":"text"},{"type":"text","text":" "},{"text":"If you need a more compact representation, consider using a merger instead.","type":"text"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MergeableArray"}],"url":"\/documentation\/forkedmerge\/mergeablearray"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/indices(of:)":{"url":"\/documentation\/forkedmerge\/mergeablearray\/indices(of:)","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"indices"},{"kind":"text","text":"("},{"kind":"externalParam","text":"of"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:ST7ElementQa"},{"text":") -> ","kind":"text"},{"text":"RangeSet","preciseIdentifier":"s:s8RangeSetV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl5IndexQa","text":"Index"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns the indices of all the elements that are equal to the given"},{"text":" ","type":"text"},{"type":"text","text":"element."}],"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/indices(of:)","type":"topic","title":"indices(of:)"},"doc://ForkedMerge/documentation/ForkedMerge/MergeableArray/Collection-Implementations":{"identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge\/MergeableArray\/Collection-Implementations","role":"collectionGroup","type":"topic","title":"Collection Implementations","url":"\/documentation\/forkedmerge\/mergeablearray\/collection-implementations","abstract":[],"kind":"article"},"doc://ForkedMerge/documentation/ForkedMerge":{"url":"\/documentation\/forkedmerge","role":"collection","identifier":"doc:\/\/ForkedMerge\/documentation\/ForkedMerge","title":"ForkedMerge","kind":"symbol","abstract":[{"type":"text","text":"Handles merging of forked data structures."}],"type":"topic"}}}
