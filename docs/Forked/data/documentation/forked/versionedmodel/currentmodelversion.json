{"identifier":{"url":"doc:\/\/Forked\/documentation\/Forked\/VersionedModel\/currentModelVersion","interfaceLanguage":"swift"},"sections":[],"metadata":{"symbolKind":"property","roleHeading":"Type Property","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"currentModelVersion","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"modules":[{"name":"Forked"}],"externalID":"s:6Forked14VersionedModelP07currentC7VersionSivpZ","required":true,"title":"currentModelVersion"},"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/VersionedModel"]]},"kind":"symbol","abstract":[{"type":"text","text":"The current version of the model for this resource (struct)."},{"text":" ","type":"text"},{"text":"It is generally best to start the current version at 0, and increase it by","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"one whenever a change is made to the properties of a struct."},{"type":"text","text":" "},{"text":"If you have not being using ","type":"text"},{"type":"codeVoice","code":"VersionedModel"},{"text":", and add","type":"text"},{"type":"text","text":" "},{"type":"text","text":"sync, you would use "},{"code":"0","type":"codeVoice"},{"text":" if your model is unchanged, and ","type":"text"},{"type":"codeVoice","code":"1"},{"type":"text","text":" if"},{"text":" ","type":"text"},{"type":"text","text":"it changed from the un-synced version. The old un-synced model"},{"type":"text","text":" "},{"type":"text","text":"will get a "},{"code":"modelVersion","type":"codeVoice"},{"text":" of ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":", which is treated as "},{"type":"codeVoice","code":"0"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Using "},{"type":"codeVoice","code":"1"},{"text":" will cause ","type":"text"},{"type":"codeVoice","code":"Forked"},{"type":"text","text":" to avoid merging the newer model"},{"type":"text","text":" "},{"type":"text","text":"into the old one."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"currentModelVersion","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}]}]}],"variants":[{"paths":["\/documentation\/forked\/versionedmodel\/currentmodelversion"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Forked/documentation/Forked/VersionedModel":{"kind":"symbol","url":"\/documentation\/forked\/versionedmodel","type":"topic","identifier":"doc:\/\/Forked\/documentation\/Forked\/VersionedModel","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"VersionedModel"}],"navigatorTitle":[{"kind":"identifier","text":"VersionedModel"}],"abstract":[{"type":"text","text":"Protocol to track the model version of a "},{"type":"codeVoice","code":"ForkedResource"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"This isn’t very important on a single device, but if syncing between"},{"type":"text","text":" "},{"text":"devices, it is important that a device that doesn’t yet have the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"latest version does not try to import data from that version."},{"type":"text","text":" "},{"text":"If it does, it won’t know how to handle it, and may lose data.","type":"text"}],"title":"VersionedModel"},"doc://Forked/documentation/Forked":{"identifier":"doc:\/\/Forked\/documentation\/Forked","kind":"symbol","type":"topic","role":"collection","title":"Forked","url":"\/documentation\/forked","abstract":[{"type":"text","text":"A framework for handling shared data with confidence in Swift."}]},"doc://Forked/documentation/Forked/VersionedModel/currentModelVersion":{"identifier":"doc:\/\/Forked\/documentation\/Forked\/VersionedModel\/currentModelVersion","required":true,"type":"topic","url":"\/documentation\/forked\/versionedmodel\/currentmodelversion","kind":"symbol","abstract":[{"text":"The current version of the model for this resource (struct).","type":"text"},{"type":"text","text":" "},{"type":"text","text":"It is generally best to start the current version at 0, and increase it by"},{"text":" ","type":"text"},{"text":"one whenever a change is made to the properties of a struct.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"If you have not being using "},{"code":"VersionedModel","type":"codeVoice"},{"text":", and add","type":"text"},{"type":"text","text":" "},{"type":"text","text":"sync, you would use "},{"type":"codeVoice","code":"0"},{"type":"text","text":" if your model is unchanged, and "},{"type":"codeVoice","code":"1"},{"type":"text","text":" if"},{"type":"text","text":" "},{"type":"text","text":"it changed from the un-synced version. The old un-synced model"},{"text":" ","type":"text"},{"type":"text","text":"will get a "},{"type":"codeVoice","code":"modelVersion"},{"type":"text","text":" of "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", which is treated as "},{"type":"codeVoice","code":"0"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"Using ","type":"text"},{"type":"codeVoice","code":"1"},{"type":"text","text":" will cause "},{"code":"Forked","type":"codeVoice"},{"text":" to avoid merging the newer model","type":"text"},{"text":" ","type":"text"},{"text":"into the old one.","type":"text"}],"title":"currentModelVersion","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"currentModelVersion","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}]}}}