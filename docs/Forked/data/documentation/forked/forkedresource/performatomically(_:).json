{"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"If you want to perform a series of calls as a single transaction,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"preventing other threads from changing anything between calls,"},{"type":"text","text":" "},{"type":"text","text":"use this to group the transaction of calls. Note that reentrance of this"},{"type":"text","text":" "},{"type":"text","text":"method from the same thread will lead to deadlock. It is best not to"},{"text":" ","type":"text"},{"type":"text","text":"execute long running code in the block, because all other interactions"},{"type":"text","text":" "},{"type":"text","text":"with the "},{"type":"codeVoice","code":"ForkedResource"},{"text":" will block waiting.","type":"text"}],"metadata":{"title":"performAtomically(_:)","roleHeading":"Instance Method","modules":[{"name":"Forked"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"performAtomically","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ReturnType"},{"text":">(() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"ReturnType"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ReturnType"}],"role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"RepositoryType"},{"text":" conforms to ","type":"text"},{"code":"Repository","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"RepositoryType.Resource","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"symbolKind":"method","externalID":"s:6Forked0A8ResourceC17performAtomicallyyqd__qd__yKXEKlF","extendedModule":"Forked"},"kind":"symbol","sections":[],"identifier":{"url":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/performAtomically(_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/ForkedResource"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forked\/forkedresource\/performatomically(_:)"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"performAtomically"},{"kind":"text","text":"<"},{"text":"ReturnType","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"block"},{"text":": () ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ReturnType","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ReturnType"}],"platforms":["macOS"]}],"kind":"declarations"}],"references":{"doc://Forked/documentation/Forked/ForkedResource":{"title":"ForkedResource","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ForkedResource","kind":"identifier"}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource","url":"\/documentation\/forked\/forkedresource","type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"ForkedResource","kind":"identifier"}],"abstract":[{"text":"This manages forks of a resource. It facilitiates concurrent changes to a single resource, and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"provides a systematic approach for merging changes, with support for 3-way merging."}]},"doc://Forked/documentation/Forked/ForkedResource/performAtomically(_:)":{"title":"performAtomically(_:)","url":"\/documentation\/forked\/forkedresource\/performatomically(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"performAtomically"},{"text":"<","kind":"text"},{"text":"ReturnType","kind":"genericParameter"},{"kind":"text","text":">(() "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ReturnType","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"text":"ReturnType","kind":"typeIdentifier"}],"type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"RepositoryType"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Repository"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RepositoryType.Resource"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol","abstract":[{"type":"text","text":"If you want to perform a series of calls as a single transaction,"},{"text":" ","type":"text"},{"text":"preventing other threads from changing anything between calls,","type":"text"},{"type":"text","text":" "},{"text":"use this to group the transaction of calls. Note that reentrance of this","type":"text"},{"type":"text","text":" "},{"type":"text","text":"method from the same thread will lead to deadlock. It is best not to"},{"text":" ","type":"text"},{"text":"execute long running code in the block, because all other interactions","type":"text"},{"type":"text","text":" "},{"text":"with the ","type":"text"},{"type":"codeVoice","code":"ForkedResource"},{"type":"text","text":" will block waiting."}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/performAtomically(_:)","role":"symbol"},"doc://Forked/documentation/Forked":{"identifier":"doc:\/\/Forked\/documentation\/Forked","kind":"symbol","type":"topic","role":"collection","title":"Forked","url":"\/documentation\/forked","abstract":[{"type":"text","text":"A framework for handling shared data with confidence in Swift."}]}}}