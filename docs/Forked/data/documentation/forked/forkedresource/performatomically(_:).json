{"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/performAtomically(_:)","interfaceLanguage":"swift"},"metadata":{"externalID":"s:6Forked0A8ResourceC17performAtomicallyyqd__qd__yKXEKlF","role":"symbol","modules":[{"name":"Forked"}],"conformance":{"constraints":[{"type":"codeVoice","code":"RepositoryType"},{"type":"text","text":" conforms to "},{"code":"Repository","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RepositoryType.Resource"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"performAtomically"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ReturnType"},{"kind":"text","text":">(() "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ReturnType"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"ReturnType","kind":"typeIdentifier"}],"title":"performAtomically(_:)","extendedModule":"Forked","symbolKind":"method","roleHeading":"Instance Method"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"performAtomically","kind":"identifier"},{"kind":"text","text":"<"},{"text":"ReturnType","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"block"},{"kind":"text","text":": () "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"ReturnType"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"ReturnType"}]}]}],"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/ForkedResource"]]},"abstract":[{"text":"If you want to perform a series of calls as a single transaction,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"preventing other threads from changing anything between calls,"},{"text":" ","type":"text"},{"text":"use this to group the transaction of calls. Note that reentrance of this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"method from the same thread will lead to deadlock. It is best not to"},{"type":"text","text":" "},{"type":"text","text":"execute long running code in the block, because all other interactions"},{"text":" ","type":"text"},{"text":"with the ","type":"text"},{"code":"ForkedResource","type":"codeVoice"},{"type":"text","text":" will block waiting."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forked\/forkedresource\/performatomically(_:)"]}],"kind":"symbol","references":{"doc://Forked/documentation/Forked":{"title":"Forked","url":"\/documentation\/forked","abstract":[{"text":"A framework for handling shared data with confidence in Swift.","type":"text"}],"kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/Forked\/documentation\/Forked"},"doc://Forked/documentation/Forked/ForkedResource/performAtomically(_:)":{"identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/performAtomically(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"performAtomically"},{"text":"<","kind":"text"},{"text":"ReturnType","kind":"genericParameter"},{"kind":"text","text":">(() "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"ReturnType"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"ReturnType"}],"role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"RepositoryType"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Repository"},{"type":"text","text":" and "},{"code":"RepositoryType.Resource","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","kind":"symbol","title":"performAtomically(_:)","abstract":[{"type":"text","text":"If you want to perform a series of calls as a single transaction,"},{"type":"text","text":" "},{"type":"text","text":"preventing other threads from changing anything between calls,"},{"text":" ","type":"text"},{"type":"text","text":"use this to group the transaction of calls. Note that reentrance of this"},{"type":"text","text":" "},{"type":"text","text":"method from the same thread will lead to deadlock. It is best not to"},{"type":"text","text":" "},{"type":"text","text":"execute long running code in the block, because all other interactions"},{"type":"text","text":" "},{"text":"with the ","type":"text"},{"type":"codeVoice","code":"ForkedResource"},{"type":"text","text":" will block waiting."}],"url":"\/documentation\/forked\/forkedresource\/performatomically(_:)"},"doc://Forked/documentation/Forked/ForkedResource":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ForkedResource"}],"abstract":[{"text":"This manages forks of a resource. It facilitiates concurrent changes to a single resource, and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"provides a systematic approach for merging changes, with support for 3-way merging."}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"ForkedResource","kind":"identifier"}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource","title":"ForkedResource","url":"\/documentation\/forked\/forkedresource","role":"symbol"}}}