{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/ForkedResource"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"convenience","kind":"keyword"},{"kind":"text","text":" "},{"text":"init","kind":"keyword"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"initialValue","kind":"externalParam"},{"kind":"text","text":": "},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"forkNames"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"] = []) "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"RepositoryType","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"preciseIdentifier":"s:6Forked16AtomicRepositoryC","kind":"typeIdentifier","identifier":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository","text":"AtomicRepository"},{"text":"<","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":" : ","kind":"text"},{"text":"Equatable","kind":"typeIdentifier","preciseIdentifier":"s:SQ"},{"kind":"text","text":", "},{"text":"R","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}],"languages":["swift"]}]}],"metadata":{"symbolKind":"init","extendedModule":"Forked","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"text":">(","kind":"text"},{"text":"initialValue","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":"?, ","kind":"text"},{"text":"forkNames","kind":"externalParam"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":"])"}],"modules":[{"name":"Forked"}],"title":"init(initialValue:forkNames:)","roleHeading":"Initializer","role":"symbol","externalID":"s:6Forked0A8ResourceC12initialValue9forkNamesACyAA16AtomicRepositoryCyqd__GGqd__Sg_SaySSGtcAHRszSQRd__s8SendableRd__lufc","conformance":{"constraints":[{"type":"codeVoice","code":"RepositoryType"},{"type":"text","text":" conforms to "},{"code":"Repository","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RepositoryType.Resource"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"sections":[],"variants":[{"paths":["\/documentation\/forked\/forkedresource\/init(initialvalue:forknames:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Convenience for creating simple forked resource for in-memory use.","type":"text"},{"type":"text","text":" "},{"text":"Create an in-memory ForkedResource with the given fork names, and initial value.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The setup ensures that all forks are synced up with the initial value — if there is one —"},{"type":"text","text":" "},{"type":"text","text":"which is different to the default behavior when you first create a ForkedResource. (In a forked resource,"},{"type":"text","text":" "},{"type":"text","text":"a new fork is initially empty, and may not be in sync with the main fork until merged.)"}],"identifier":{"url":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/init(initialValue:forkNames:)","interfaceLanguage":"swift"},"references":{"doc://Forked/documentation/Forked/ForkedResource/init(initialValue:forkNames:)":{"fragments":[{"text":"convenience","kind":"keyword"},{"kind":"text","text":" "},{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"initialValue"},{"kind":"text","text":": "},{"text":"R","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"forkNames"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"])","kind":"text"}],"abstract":[{"text":"Convenience for creating simple forked resource for in-memory use.","type":"text"},{"type":"text","text":" "},{"text":"Create an in-memory ForkedResource with the given fork names, and initial value.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The setup ensures that all forks are synced up with the initial value — if there is one —"},{"type":"text","text":" "},{"type":"text","text":"which is different to the default behavior when you first create a ForkedResource. (In a forked resource,"},{"type":"text","text":" "},{"text":"a new fork is initially empty, and may not be in sync with the main fork until merged.)","type":"text"}],"kind":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"RepositoryType"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Repository"},{"type":"text","text":" and "},{"code":"RepositoryType.Resource","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/init(initialValue:forkNames:)","url":"\/documentation\/forked\/forkedresource\/init(initialvalue:forknames:)","type":"topic","title":"init(initialValue:forkNames:)","role":"symbol"},"doc://Forked/documentation/Forked/ForkedResource":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ForkedResource"}],"abstract":[{"text":"This manages forks of a resource. It facilitiates concurrent changes to a single resource, and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"provides a systematic approach for merging changes, with support for 3-way merging."}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"ForkedResource","kind":"identifier"}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource","title":"ForkedResource","url":"\/documentation\/forked\/forkedresource","role":"symbol"},"doc://Forked/documentation/Forked":{"title":"Forked","url":"\/documentation\/forked","abstract":[{"text":"A framework for handling shared data with confidence in Swift.","type":"text"}],"kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/Forked\/documentation\/Forked"},"doc://Forked/documentation/Forked/AtomicRepository":{"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AtomicRepository"}],"title":"AtomicRepository","url":"\/documentation\/forked\/atomicrepository","type":"topic","identifier":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicRepository","kind":"identifier"}],"abstract":[{"text":"An atomic repository is one that gets loaded completely into memory.","type":"text"},{"type":"text","text":" "},{"text":"If the ","type":"text"},{"code":"Resource","type":"codeVoice"},{"text":" it contains conforms to ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":", the "},{"code":"AtomicRepository","type":"codeVoice"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"also "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":", and can be converted to a serialized form and saved as a file."},{"type":"text","text":" "},{"type":"text","text":"Saving and loading are atomic, that is, the whole repository is loaded from file, and the whole"},{"type":"text","text":" "},{"type":"text","text":"file is written to disk."}]}}}