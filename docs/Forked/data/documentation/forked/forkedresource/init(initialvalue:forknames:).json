{"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"metadata":{"extendedModule":"Forked","roleHeading":"Initializer","externalID":"s:6Forked0A8ResourceC12initialValue9forkNamesACyAA16AtomicRepositoryCyqd__GGqd__Sg_SaySSGtcAHRszSQRd__s8SendableRd__lufc","conformance":{"constraints":[{"code":"RepositoryType","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Repository","type":"codeVoice"},{"type":"text","text":" and "},{"code":"RepositoryType.Resource","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"modules":[{"name":"Forked"}],"symbolKind":"init","role":"symbol","title":"init(initialValue:forkNames:)","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"initialValue"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"forkNames","kind":"externalParam"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"])"}]},"kind":"symbol","abstract":[{"type":"text","text":"Convenience for creating simple forked resource for in-memory use."},{"text":" ","type":"text"},{"text":"Create an in-memory ForkedResource with the given fork names, and initial value.","type":"text"},{"type":"text","text":" "},{"text":"The setup ensures that all forks are synced up with the initial value — if there is one —","type":"text"},{"text":" ","type":"text"},{"text":"which is different to the default behavior when you first create a ForkedResource. (In a forked resource,","type":"text"},{"type":"text","text":" "},{"text":"a new fork is initially empty, and may not be in sync with the main fork until merged.)","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"keyword"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"initialValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":"? = nil, ","kind":"text"},{"kind":"externalParam","text":"forkNames"},{"kind":"text","text":": ["},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"] = []) "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"RepositoryType"},{"text":" == ","kind":"text"},{"text":"AtomicRepository","preciseIdentifier":"s:6Forked16AtomicRepositoryC","kind":"typeIdentifier","identifier":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":">, ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":" : ","kind":"text"},{"text":"Equatable","preciseIdentifier":"s:SQ","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"R"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"}],"platforms":["macOS"]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/init(initialValue:forkNames:)"},"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/ForkedResource"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forked\/forkedresource\/init(initialvalue:forknames:)"]}],"references":{"doc://Forked/documentation/Forked/AtomicRepository":{"identifier":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository","url":"\/documentation\/forked\/atomicrepository","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AtomicRepository"}],"navigatorTitle":[{"text":"AtomicRepository","kind":"identifier"}],"abstract":[{"type":"text","text":"An atomic repository is one that gets loaded completely into memory."},{"text":" ","type":"text"},{"type":"text","text":"If the "},{"type":"codeVoice","code":"Resource"},{"type":"text","text":" it contains conforms to "},{"type":"codeVoice","code":"Codable"},{"text":", the ","type":"text"},{"type":"codeVoice","code":"AtomicRepository"},{"text":" is","type":"text"},{"type":"text","text":" "},{"type":"text","text":"also "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":", and can be converted to a serialized form and saved as a file."},{"text":" ","type":"text"},{"text":"Saving and loading are atomic, that is, the whole repository is loaded from file, and the whole","type":"text"},{"type":"text","text":" "},{"type":"text","text":"file is written to disk."}],"type":"topic","kind":"symbol","title":"AtomicRepository","role":"symbol"},"doc://Forked/documentation/Forked/ForkedResource/init(initialValue:forkNames:)":{"title":"init(initialValue:forkNames:)","fragments":[{"kind":"keyword","text":"convenience"},{"text":" ","kind":"text"},{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"initialValue"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"forkNames"},{"kind":"text","text":": ["},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"])","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/init(initialValue:forkNames:)","type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"RepositoryType"},{"text":" conforms to ","type":"text"},{"code":"Repository","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RepositoryType.Resource"},{"type":"text","text":" conforms to "},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"type":"text","text":"Convenience for creating simple forked resource for in-memory use."},{"text":" ","type":"text"},{"type":"text","text":"Create an in-memory ForkedResource with the given fork names, and initial value."},{"type":"text","text":" "},{"text":"The setup ensures that all forks are synced up with the initial value — if there is one —","type":"text"},{"type":"text","text":" "},{"type":"text","text":"which is different to the default behavior when you first create a ForkedResource. (In a forked resource,"},{"text":" ","type":"text"},{"text":"a new fork is initially empty, and may not be in sync with the main fork until merged.)","type":"text"}],"role":"symbol","url":"\/documentation\/forked\/forkedresource\/init(initialvalue:forknames:)"},"doc://Forked/documentation/Forked":{"identifier":"doc:\/\/Forked\/documentation\/Forked","kind":"symbol","type":"topic","role":"collection","title":"Forked","url":"\/documentation\/forked","abstract":[{"type":"text","text":"A framework for handling shared data with confidence in Swift."}]},"doc://Forked/documentation/Forked/ForkedResource":{"title":"ForkedResource","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ForkedResource","kind":"identifier"}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource","url":"\/documentation\/forked\/forkedresource","type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"ForkedResource","kind":"identifier"}],"abstract":[{"text":"This manages forks of a resource. It facilitiates concurrent changes to a single resource, and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"provides a systematic approach for merging changes, with support for 3-way merging."}]}}}