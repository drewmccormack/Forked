{"sections":[],"identifier":{"url":"doc:\/\/Forked\/documentation\/Forked\/Version\/_=(_:_:)-8ckx5","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"<=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"kind":"internalParam","text":"lhs"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"lhs","content":[{"inlineContent":[{"type":"text","text":"A value to compare."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Another value to compare.","type":"text"}]}],"name":"rhs"}]},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"text":"This is the default implementation of the less-than-or-equal-to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"operator ("},{"code":"<=","type":"codeVoice"},{"type":"text","text":") for any type that conforms to "},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"}],"abstract":[{"text":"Returns a Boolean value indicating whether the value of the first argument","type":"text"},{"type":"text","text":" "},{"text":"is less than or equal to that of the second argument.","type":"text"}],"variants":[{"paths":["\/documentation\/forked\/version\/_=(_:_:)-8ckx5"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"op","role":"symbol","externalID":"s:SLsE2leoiySbx_xtFZ::SYNTHESIZED::s:6Forked7VersionV","modules":[{"relatedModules":["Swift"],"name":"Forked"}],"extendedModule":"Swift","title":"<=(_:_:)","roleHeading":"Operator","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"<="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/Version"]]},"references":{"doc://Forked/documentation/Forked/Version/_=(_:_:)-8ckx5":{"identifier":"doc:\/\/Forked\/documentation\/Forked\/Version\/_=(_:_:)-8ckx5","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"<=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/forked\/version\/_=(_:_:)-8ckx5","type":"topic","kind":"symbol","title":"<=(_:_:)","role":"symbol","abstract":[{"text":"Returns a Boolean value indicating whether the value of the first argument","type":"text"},{"type":"text","text":" "},{"text":"is less than or equal to that of the second argument.","type":"text"}]},"doc://Forked/documentation/Forked":{"title":"Forked","url":"\/documentation\/forked","abstract":[{"text":"A framework for handling shared data with confidence in Swift.","type":"text"}],"kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/Forked\/documentation\/Forked"},"doc://Forked/documentation/Forked/Version":{"kind":"symbol","type":"topic","identifier":"doc:\/\/Forked\/documentation\/Forked\/Version","abstract":[{"text":"Used to chronologically order file versions. It is a standard lamport count.","type":"text"}],"url":"\/documentation\/forked\/version","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Version","kind":"identifier"}],"navigatorTitle":[{"text":"Version","kind":"identifier"}],"title":"Version","role":"symbol"}}}