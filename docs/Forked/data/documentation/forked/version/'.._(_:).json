{"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"..<","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"PartialRangeUpTo","kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"role":"symbol","extendedModule":"Swift","title":"..<(_:)","modules":[{"relatedModules":["Swift"],"name":"Forked"}],"externalID":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ::SYNTHESIZED::s:6Forked7VersionV","roleHeading":"Operator","symbolKind":"op"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"..<","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"maximum","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"PartialRangeUpTo","kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]}]},{"kind":"parameters","parameters":[{"name":"maximum","content":[{"inlineContent":[{"text":"The upper bound for the range.","type":"text"}],"type":"paragraph"}]}]},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"Use the prefix half-open range operator (prefix "},{"type":"codeVoice","code":"..<"},{"type":"text","text":") to create a"},{"type":"text","text":" "},{"type":"text","text":"partial range of any type that conforms to the "},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":" protocol."},{"text":" ","type":"text"},{"type":"text","text":"This example creates a "},{"type":"codeVoice","code":"PartialRangeUpTo<Double>"},{"text":" instance that includes","type":"text"},{"type":"text","text":" "},{"type":"text","text":"any value less than "},{"type":"codeVoice","code":"5.0"},{"type":"text","text":"."}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let upToFive = ..<5.0","","upToFive.contains(3.14)       \/\/ true","upToFive.contains(6.28)       \/\/ false","upToFive.contains(5.0)        \/\/ false"]},{"inlineContent":[{"type":"text","text":"You can use this type of partial range of a collection’s indices to"},{"type":"text","text":" "},{"type":"text","text":"represent the range from the start of the collection up to, but not"},{"text":" ","type":"text"},{"text":"including, the partial range’s upper bound.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let numbers = [10, 20, 30, 40, 50, 60, 70]","print(numbers[..<3])","\/\/ Prints \"[10, 20, 30]\""]},{"style":"note","type":"aside","name":"Precondition","content":[{"inlineContent":[{"type":"text","text":""},{"code":"maximum","type":"codeVoice"},{"type":"text","text":" must compare equal to itself (i.e. cannot be NaN)."}],"type":"paragraph"}]}],"kind":"content"}],"abstract":[{"text":"Returns a partial range up to, but not including, its upper bound.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/Version"]]},"sections":[],"variants":[{"paths":["\/documentation\/forked\/version\/'.._(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Forked\/documentation\/Forked\/Version\/.._(_:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","references":{"doc://Forked/documentation/Forked":{"title":"Forked","url":"\/documentation\/forked","abstract":[{"text":"A framework for handling shared data with confidence in Swift.","type":"text"}],"kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/Forked\/documentation\/Forked"},"doc://Forked/documentation/Forked/Version/.._(_:)":{"role":"symbol","url":"\/documentation\/forked\/version\/'.._(_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"..<"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"PartialRangeUpTo","kind":"typeIdentifier","preciseIdentifier":"s:s16PartialRangeUpToV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Returns a partial range up to, but not including, its upper bound."}],"type":"topic","identifier":"doc:\/\/Forked\/documentation\/Forked\/Version\/.._(_:)","kind":"symbol","title":"..<(_:)"},"doc://Forked/documentation/Forked/Version":{"kind":"symbol","type":"topic","identifier":"doc:\/\/Forked\/documentation\/Forked\/Version","abstract":[{"text":"Used to chronologically order file versions. It is a standard lamport count.","type":"text"}],"url":"\/documentation\/forked\/version","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Version","kind":"identifier"}],"navigatorTitle":[{"text":"Version","kind":"identifier"}],"title":"Version","role":"symbol"}}}