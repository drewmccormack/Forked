{"seeAlsoSections":[{"generated":true,"title":"Essentials","identifiers":["doc:\/\/Forked\/documentation\/Forked\/GettingStarted","doc:\/\/Forked\/documentation\/Forked\/ForkedResource","doc:\/\/Forked\/documentation\/Forked\/Repository"],"anchor":"Essentials"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Mergeable","kind":"identifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Equatable","preciseIdentifier":"s:SQ"}]}],"kind":"declarations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Forked\/documentation\/Forked\/Mergeable"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"Any type conforming to this can be used in a 3-way merge"}],"metadata":{"navigatorTitle":[{"text":"Mergeable","kind":"identifier"}],"modules":[{"name":"Forked"}],"symbolKind":"protocol","title":"Mergeable","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Mergeable","kind":"identifier"}],"externalID":"s:6Forked9MergeableP","roleHeading":"Protocol","role":"symbol"},"topicSections":[{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/Mergeable\/merged(withSubordinate:commonAncestor:)","doc:\/\/Forked\/documentation\/Forked\/Mergeable\/salvaging(from:)"],"anchor":"Instance-Methods","generated":true,"title":"Instance Methods"}],"sections":[],"relationshipsSections":[{"type":"inheritsFrom","identifiers":["doc:\/\/Forked\/SQ"],"title":"Inherits From","kind":"relationships"},{"kind":"relationships","identifiers":["doc:\/\/Forked\/documentation\/Forked\/Swift\/Optional"],"type":"conformingTypes","title":"Conforming Types"}],"variants":[{"paths":["\/documentation\/forked\/mergeable"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Forked/documentation/Forked/Repository":{"abstract":[{"type":"text","text":"This is storage for the "},{"type":"codeVoice","code":"ForkedResource"},{"type":"text","text":". It could"},{"type":"text","text":" "},{"text":"be persisted on disk, or just kept in memory.","type":"text"},{"type":"text","text":" "},{"text":"This type does not understand any of the mechanisms of forking","type":"text"},{"type":"text","text":" "},{"text":"and merging. That is all handled by the ","type":"text"},{"type":"codeVoice","code":"ForkedResource"},{"type":"text","text":", which also"},{"text":" ","type":"text"},{"type":"text","text":"ensures correct multi-threading behavior."},{"type":"text","text":" "},{"type":"text","text":"Classes conforming to this type simply have to setup a storage"},{"type":"text","text":" "},{"type":"text","text":"mechanism, and handle the requests, keeping commits assigned to forks."}],"role":"symbol","url":"\/documentation\/forked\/repository","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Repository"}],"navigatorTitle":[{"text":"Repository","kind":"identifier"}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/Repository","kind":"symbol","type":"topic","title":"Repository"},"doc://Forked/documentation/Forked/GettingStarted":{"url":"\/documentation\/forked\/gettingstarted","abstract":[{"type":"text","text":"Learn how to use Forked to manage shared data in your Swift applications."}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/GettingStarted","type":"topic","title":"Getting Started with Forked","kind":"article","role":"article"},"doc://Forked/documentation/Forked/Mergeable":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Mergeable","kind":"identifier"}],"title":"Mergeable","kind":"symbol","identifier":"doc:\/\/Forked\/documentation\/Forked\/Mergeable","role":"symbol","abstract":[{"type":"text","text":"Any type conforming to this can be used in a 3-way merge"}],"navigatorTitle":[{"text":"Mergeable","kind":"identifier"}],"url":"\/documentation\/forked\/mergeable","type":"topic"},"doc://Forked/SQ":{"identifier":"doc:\/\/Forked\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://Forked/documentation/Forked/Mergeable/salvaging(from:)":{"required":true,"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"salvaging","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"}],"title":"salvaging(from:)","role":"symbol","type":"topic","abstract":[{"text":"In general, 3-way merges are used in Forked. But when bootstrapping,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"there can be times when no common ancestor exists. Effectively we have"},{"text":" ","type":"text"},{"type":"text","text":"to merge together unrelated values. For example, if you install an app on"},{"type":"text","text":" "},{"type":"text","text":"two offline devices, insert some data on each, and then take them online to"},{"text":" ","type":"text"},{"text":"sync. In this scenario, there is no common ancestor,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"but it would be nice to keep the data entered on each device."},{"text":" ","type":"text"},{"text":"An even trickier case arises if two devices are fully synced up, but then the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"cloud data is reset. Effectively, the two data sets are now unrelated, and if you"},{"text":" ","type":"text"},{"type":"text","text":"start them syncing again, the history relating them is lost, and there is no common"},{"text":" ","type":"text"},{"text":"ancestor. You can choose one or the other, but just blindly merging the two will","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"lead to duplications (how often have we seen that in apps like Contacts?)"}],"kind":"symbol","identifier":"doc:\/\/Forked\/documentation\/Forked\/Mergeable\/salvaging(from:)","defaultImplementations":1,"url":"\/documentation\/forked\/mergeable\/salvaging(from:)"},"doc://Forked/documentation/Forked/Swift/Optional":{"fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"text":"Optional","kind":"identifier","preciseIdentifier":"s:Sq"}],"title":"Optional","identifier":"doc:\/\/Forked\/documentation\/Forked\/Swift\/Optional","kind":"symbol","role":"symbol","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Optional"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Wrapped"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Mergeable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/forked\/swift\/optional","type":"topic"},"doc://Forked/documentation/Forked/Mergeable/merged(withSubordinate:commonAncestor:)":{"identifier":"doc:\/\/Forked\/documentation\/Forked\/Mergeable\/merged(withSubordinate:commonAncestor:)","url":"\/documentation\/forked\/mergeable\/merged(withsubordinate:commonancestor:)","title":"merged(withSubordinate:commonAncestor:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"merged","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"withSubordinate"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"commonAncestor","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"required":true,"kind":"symbol","abstract":[{"type":"text","text":"Performs a 3-way merge, where "},{"type":"codeVoice","code":"self"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"other"},{"type":"text","text":" are the most recent versions,"},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"type":"codeVoice","code":"commonAncestor"},{"text":" is from a point in the past at which time the histories diverged.","type":"text"},{"text":" ","type":"text"},{"text":"By comparing the recent values to the ancestor, you can determine what changed in each fork,","type":"text"},{"text":" ","type":"text"},{"text":"and decide how to merge. Where it is not possible to merge changes from each, ","type":"text"},{"type":"codeVoice","code":"self"},{"type":"text","text":" should"},{"type":"text","text":" "},{"text":"be considered the ","type":"text"},{"type":"codeVoice","code":"dominant"},{"type":"text","text":" fork, and "},{"type":"codeVoice","code":"other"},{"type":"text","text":" subordinate. If you must choose, choose "},{"type":"codeVoice","code":"self"},{"type":"text","text":"."}]},"doc://Forked/documentation/Forked":{"identifier":"doc:\/\/Forked\/documentation\/Forked","kind":"symbol","type":"topic","role":"collection","title":"Forked","url":"\/documentation\/forked","abstract":[{"type":"text","text":"A framework for handling shared data with confidence in Swift."}]},"doc://Forked/documentation/Forked/ForkedResource":{"title":"ForkedResource","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ForkedResource","kind":"identifier"}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource","url":"\/documentation\/forked\/forkedresource","type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"ForkedResource","kind":"identifier"}],"abstract":[{"text":"This manages forks of a resource. It facilitiates concurrent changes to a single resource, and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"provides a systematic approach for merging changes, with support for 3-way merging."}]}}}