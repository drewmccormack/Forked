{"sections":[],"abstract":[{"text":"Any type conforming to this can be used in a 3-way merge","type":"text"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"seeAlsoSections":[{"generated":true,"anchor":"Essentials","identifiers":["doc:\/\/Forked\/documentation\/Forked\/GettingStarted","doc:\/\/Forked\/documentation\/Forked\/ForkedResource","doc:\/\/Forked\/documentation\/Forked\/Repository"],"title":"Essentials"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Forked\/documentation\/Forked\/Mergeable"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Mergeable","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Equatable","kind":"typeIdentifier","preciseIdentifier":"s:SQ"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forked\/mergeable"]}],"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked"]]},"relationshipsSections":[{"type":"inheritsFrom","identifiers":["doc:\/\/Forked\/SQ"],"kind":"relationships","title":"Inherits From"},{"kind":"relationships","title":"Conforming Types","identifiers":["doc:\/\/Forked\/documentation\/Forked\/Swift\/Optional"],"type":"conformingTypes"}],"topicSections":[{"generated":true,"anchor":"Instance-Methods","identifiers":["doc:\/\/Forked\/documentation\/Forked\/Mergeable\/merged(withSubordinate:commonAncestor:)","doc:\/\/Forked\/documentation\/Forked\/Mergeable\/salvaging(from:)"],"title":"Instance Methods"}],"metadata":{"navigatorTitle":[{"text":"Mergeable","kind":"identifier"}],"roleHeading":"Protocol","externalID":"s:6Forked9MergeableP","title":"Mergeable","modules":[{"name":"Forked"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Mergeable","kind":"identifier"}],"symbolKind":"protocol"},"kind":"symbol","references":{"doc://Forked/documentation/Forked/GettingStarted":{"abstract":[{"text":"Learn how to use Forked to manage shared data in your Swift applications.","type":"text"}],"kind":"article","role":"article","title":"Getting Started with Forked","identifier":"doc:\/\/Forked\/documentation\/Forked\/GettingStarted","url":"\/documentation\/forked\/gettingstarted","type":"topic"},"doc://Forked/SQ":{"identifier":"doc:\/\/Forked\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://Forked/documentation/Forked/Swift/Optional":{"abstract":[],"kind":"symbol","url":"\/documentation\/forked\/swift\/optional","conformance":{"constraints":[{"type":"codeVoice","code":"Wrapped"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Mergeable"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","title":"Optional","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Optional","preciseIdentifier":"s:Sq"}],"role":"symbol","identifier":"doc:\/\/Forked\/documentation\/Forked\/Swift\/Optional","navigatorTitle":[{"kind":"identifier","text":"Optional"}]},"doc://Forked/documentation/Forked/Mergeable/salvaging(from:)":{"required":true,"url":"\/documentation\/forked\/mergeable\/salvaging(from:)","identifier":"doc:\/\/Forked\/documentation\/Forked\/Mergeable\/salvaging(from:)","abstract":[{"type":"text","text":"In general, 3-way merges are used in Forked. But when bootstrapping,"},{"type":"text","text":" "},{"text":"there can be times when no common ancestor exists. Effectively we have","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to merge together unrelated values. For example, if you install an app on"},{"type":"text","text":" "},{"text":"two offline devices, insert some data on each, and then take them online to","type":"text"},{"type":"text","text":" "},{"text":"sync. In this scenario, there is no common ancestor,","type":"text"},{"text":" ","type":"text"},{"text":"but it would be nice to keep the data entered on each device.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"An even trickier case arises if two devices are fully synced up, but then the"},{"type":"text","text":" "},{"type":"text","text":"cloud data is reset. Effectively, the two data sets are now unrelated, and if you"},{"type":"text","text":" "},{"type":"text","text":"start them syncing again, the history relating them is lost, and there is no common"},{"type":"text","text":" "},{"type":"text","text":"ancestor. You can choose one or the other, but just blindly merging the two will"},{"type":"text","text":" "},{"type":"text","text":"lead to duplications (how often have we seen that in apps like Contacts?)"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"salvaging","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"defaultImplementations":1,"type":"topic","title":"salvaging(from:)","kind":"symbol"},"doc://Forked/documentation/Forked/Mergeable/merged(withSubordinate:commonAncestor:)":{"kind":"symbol","type":"topic","identifier":"doc:\/\/Forked\/documentation\/Forked\/Mergeable\/merged(withSubordinate:commonAncestor:)","role":"symbol","title":"merged(withSubordinate:commonAncestor:)","url":"\/documentation\/forked\/mergeable\/merged(withsubordinate:commonancestor:)","abstract":[{"type":"text","text":"Performs a 3-way merge, where "},{"type":"codeVoice","code":"self"},{"type":"text","text":" and "},{"type":"codeVoice","code":"other"},{"type":"text","text":" are the most recent versions,"},{"type":"text","text":" "},{"type":"text","text":"and "},{"code":"commonAncestor","type":"codeVoice"},{"type":"text","text":" is from a point in the past at which time the histories diverged."},{"type":"text","text":" "},{"text":"By comparing the recent values to the ancestor, you can determine what changed in each fork,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and decide how to merge. Where it is not possible to merge changes from each, "},{"type":"codeVoice","code":"self"},{"type":"text","text":" should"},{"text":" ","type":"text"},{"type":"text","text":"be considered the "},{"type":"codeVoice","code":"dominant"},{"text":" fork, and ","type":"text"},{"type":"codeVoice","code":"other"},{"type":"text","text":" subordinate. If you must choose, choose "},{"code":"self","type":"codeVoice"},{"type":"text","text":"."}],"required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"merged"},{"text":"(","kind":"text"},{"text":"withSubordinate","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"commonAncestor","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}]},"doc://Forked/documentation/Forked/ForkedResource":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ForkedResource"}],"abstract":[{"text":"This manages forks of a resource. It facilitiates concurrent changes to a single resource, and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"provides a systematic approach for merging changes, with support for 3-way merging."}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"ForkedResource","kind":"identifier"}],"identifier":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource","title":"ForkedResource","url":"\/documentation\/forked\/forkedresource","role":"symbol"},"doc://Forked/documentation/Forked/Repository":{"abstract":[{"type":"text","text":"This is storage for the "},{"code":"ForkedResource","type":"codeVoice"},{"type":"text","text":". It could"},{"type":"text","text":" "},{"type":"text","text":"be persisted on disk, or just kept in memory."},{"type":"text","text":" "},{"type":"text","text":"This type does not understand any of the mechanisms of forking"},{"type":"text","text":" "},{"type":"text","text":"and merging. That is all handled by the "},{"type":"codeVoice","code":"ForkedResource"},{"text":", which also","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"ensures correct multi-threading behavior."},{"text":" ","type":"text"},{"text":"Classes conforming to this type simply have to setup a storage","type":"text"},{"type":"text","text":" "},{"text":"mechanism, and handle the requests, keeping commits assigned to forks.","type":"text"}],"url":"\/documentation\/forked\/repository","identifier":"doc:\/\/Forked\/documentation\/Forked\/Repository","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Repository","kind":"identifier"}],"type":"topic","role":"symbol","title":"Repository","navigatorTitle":[{"text":"Repository","kind":"identifier"}],"kind":"symbol"},"doc://Forked/documentation/Forked/Mergeable":{"identifier":"doc:\/\/Forked\/documentation\/Forked\/Mergeable","abstract":[{"text":"Any type conforming to this can be used in a 3-way merge","type":"text"}],"title":"Mergeable","type":"topic","kind":"symbol","url":"\/documentation\/forked\/mergeable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Mergeable"}],"navigatorTitle":[{"text":"Mergeable","kind":"identifier"}],"role":"symbol"},"doc://Forked/documentation/Forked":{"title":"Forked","url":"\/documentation\/forked","abstract":[{"text":"A framework for handling shared data with confidence in Swift.","type":"text"}],"kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/Forked\/documentation\/Forked"}}}