{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Forked\/documentation\/Forked\/Mergeable\/merged(withSubordinate:commonAncestor:)"},"abstract":[{"type":"text","text":"Performs a 3-way merge, where "},{"code":"self","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"other"},{"text":" are the most recent versions,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and "},{"code":"commonAncestor","type":"codeVoice"},{"type":"text","text":" is from a point in the past at which time the histories diverged."},{"text":" ","type":"text"},{"text":"By comparing the recent values to the ancestor, you can determine what changed in each fork,","type":"text"},{"text":" ","type":"text"},{"text":"and decide how to merge. Where it is not possible to merge changes from each, ","type":"text"},{"code":"self","type":"codeVoice"},{"type":"text","text":" should"},{"type":"text","text":" "},{"text":"be considered the ","type":"text"},{"type":"codeVoice","code":"dominant"},{"type":"text","text":" fork, and "},{"type":"codeVoice","code":"other"},{"type":"text","text":" subordinate. If you must choose, choose "},{"code":"self","type":"codeVoice"},{"type":"text","text":"."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/forked\/mergeable\/merged(withsubordinate:commonancestor:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"merged","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"withSubordinate"},{"text":" ","kind":"text"},{"text":"other","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"commonAncestor","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"platforms":["macOS"]}]}],"metadata":{"modules":[{"name":"Forked"}],"required":true,"symbolKind":"method","title":"merged(withSubordinate:commonAncestor:)","externalID":"s:6Forked9MergeableP6merged15withSubordinate14commonAncestorxx_xtKF","roleHeading":"Instance Method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"merged","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"withSubordinate"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"externalParam","text":"commonAncestor"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}]},"hierarchy":{"paths":[["doc:\/\/Forked\/documentation\/Forked","doc:\/\/Forked\/documentation\/Forked\/Mergeable"]]},"sections":[],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://Forked/documentation/Forked/Mergeable":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Mergeable","kind":"identifier"}],"title":"Mergeable","kind":"symbol","identifier":"doc:\/\/Forked\/documentation\/Forked\/Mergeable","role":"symbol","abstract":[{"type":"text","text":"Any type conforming to this can be used in a 3-way merge"}],"navigatorTitle":[{"text":"Mergeable","kind":"identifier"}],"url":"\/documentation\/forked\/mergeable","type":"topic"},"doc://Forked/documentation/Forked/Mergeable/merged(withSubordinate:commonAncestor:)":{"identifier":"doc:\/\/Forked\/documentation\/Forked\/Mergeable\/merged(withSubordinate:commonAncestor:)","url":"\/documentation\/forked\/mergeable\/merged(withsubordinate:commonancestor:)","title":"merged(withSubordinate:commonAncestor:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"merged","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"withSubordinate"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"commonAncestor","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"required":true,"kind":"symbol","abstract":[{"type":"text","text":"Performs a 3-way merge, where "},{"type":"codeVoice","code":"self"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"other"},{"type":"text","text":" are the most recent versions,"},{"text":" ","type":"text"},{"text":"and ","type":"text"},{"type":"codeVoice","code":"commonAncestor"},{"text":" is from a point in the past at which time the histories diverged.","type":"text"},{"text":" ","type":"text"},{"text":"By comparing the recent values to the ancestor, you can determine what changed in each fork,","type":"text"},{"text":" ","type":"text"},{"text":"and decide how to merge. Where it is not possible to merge changes from each, ","type":"text"},{"type":"codeVoice","code":"self"},{"type":"text","text":" should"},{"type":"text","text":" "},{"text":"be considered the ","type":"text"},{"type":"codeVoice","code":"dominant"},{"type":"text","text":" fork, and "},{"type":"codeVoice","code":"other"},{"type":"text","text":" subordinate. If you must choose, choose "},{"type":"codeVoice","code":"self"},{"type":"text","text":"."}]},"doc://Forked/documentation/Forked":{"identifier":"doc:\/\/Forked\/documentation\/Forked","kind":"symbol","type":"topic","role":"collection","title":"Forked","url":"\/documentation\/forked","abstract":[{"type":"text","text":"A framework for handling shared data with confidence in Swift."}]}}}