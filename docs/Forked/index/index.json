{"includedArchiveIdentifiers":["Forked"],"interfaceLanguages":{"swift":[{"children":[{"title":"Essentials","type":"groupMarker"},{"path":"\/documentation\/forked\/gettingstarted","title":"Getting Started with Forked","type":"article"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/forked\/forkedresource\/init(initialvalue:forknames:)","title":"convenience init<R>(initialValue: R?, forkNames: [String])","type":"init"},{"path":"\/documentation\/forked\/forkedresource\/init(initialvalue:forks:)","title":"convenience init<R>(initialValue: R?, forks: [Fork])","type":"init"},{"path":"\/documentation\/forked\/forkedresource\/init(repository:)","title":"init(repository: RepositoryType) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/forked\/forkedresource\/changestream","title":"var changeStream: ChangeStream","type":"property"},{"path":"\/documentation\/forked\/forkedresource\/forkedversion","title":"let forkedVersion: Int","type":"property"},{"path":"\/documentation\/forked\/forkedresource\/forks","title":"var forks: [Fork]","type":"property"},{"path":"\/documentation\/forked\/forkedresource\/repository","title":"let repository: RepositoryType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/forked\/forkedresource\/commonancestor(of:)","title":"func commonAncestor(of: Fork) throws -> Commit<ForkedResource<RepositoryType>.ResourceType>","type":"method"},{"path":"\/documentation\/forked\/forkedresource\/content(of:)","title":"func content(of: Fork) throws -> CommitContent<ForkedResource<RepositoryType>.ResourceType>","type":"method"},{"path":"\/documentation\/forked\/forkedresource\/create(_:)","title":"func create(Fork) throws","type":"method"},{"path":"\/documentation\/forked\/forkedresource\/delete(_:)","title":"func delete(Fork) throws","type":"method"},{"path":"\/documentation\/forked\/forkedresource\/has(_:)","title":"func has(Fork) -> Bool","type":"method"},{"path":"\/documentation\/forked\/forkedresource\/hasunmergedcommitsformain(in:)","title":"func hasUnmergedCommitsForMain(in: Fork) throws -> Bool","type":"method"},{"path":"\/documentation\/forked\/forkedresource\/hasunmergedcommitsinmain(for:)","title":"func hasUnmergedCommitsInMain(for: Fork) throws -> Bool","type":"method"},{"path":"\/documentation\/forked\/forkedresource\/mainversion(differsfromversionin:)","title":"func mainVersion(differsFromVersionIn: Fork) throws -> Bool","type":"method"},{"path":"\/documentation\/forked\/forkedresource\/mainversion(issameasversionin:)","title":"func mainVersion(isSameAsVersionIn: Fork) throws -> Bool","type":"method"},{"path":"\/documentation\/forked\/forkedresource\/mergeallforks(into:)-30zos","title":"func mergeAllForks(into: Fork) throws","type":"method"},{"path":"\/documentation\/forked\/forkedresource\/mergeallforks(into:)-3bh6r","title":"func mergeAllForks(into: Fork) throws","type":"method"},{"path":"\/documentation\/forked\/forkedresource\/mergefrommain(into:)-5tynb","title":"func mergeFromMain(into: Fork) throws -> MergeAction","type":"method"},{"path":"\/documentation\/forked\/forkedresource\/mergefrommain(into:)-6o9f","title":"func mergeFromMain(into: Fork) throws -> MergeAction","type":"method"},{"path":"\/documentation\/forked\/forkedresource\/mergeintomain(from:)-352k5","title":"func mergeIntoMain(from: Fork) throws -> MergeAction","type":"method"},{"path":"\/documentation\/forked\/forkedresource\/mergeintomain(from:)-9wpr4","title":"func mergeIntoMain(from: Fork) throws -> MergeAction","type":"method"},{"path":"\/documentation\/forked\/forkedresource\/mostrecentcommit(of:)","title":"func mostRecentCommit(of: Fork) throws -> Commit<ForkedResource<RepositoryType>.ResourceType>","type":"method"},{"path":"\/documentation\/forked\/forkedresource\/mostrecentversion(of:)","title":"func mostRecentVersion(of: Fork) throws -> Version","type":"method"},{"path":"\/documentation\/forked\/forkedresource\/mostrecentversionofmain()","title":"func mostRecentVersionOfMain() throws -> Version","type":"method"},{"path":"\/documentation\/forked\/forkedresource\/performatomically(_:)","title":"func performAtomically<ReturnType>(() throws -> ReturnType) rethrows -> ReturnType","type":"method"},{"path":"\/documentation\/forked\/forkedresource\/removeallcontent()","title":"func removeAllContent() throws","type":"method"},{"path":"\/documentation\/forked\/forkedresource\/removecontent(from:)","title":"func removeContent(from: Fork) throws -> Version","type":"method"},{"path":"\/documentation\/forked\/forkedresource\/resource(of:)","title":"func resource(of: Fork) throws -> ForkedResource<RepositoryType>.ResourceType?","type":"method"},{"path":"\/documentation\/forked\/forkedresource\/restart(_:with:)","title":"func restart(Fork, with: ForkedResource<RepositoryType>.ResourceType) throws -> Version","type":"method"},{"path":"\/documentation\/forked\/forkedresource\/syncallforks()-88teh","title":"func syncAllForks() throws","type":"method"},{"path":"\/documentation\/forked\/forkedresource\/syncallforks()-9xz2c","title":"func syncAllForks() throws","type":"method"},{"path":"\/documentation\/forked\/forkedresource\/syncmain(with:)-18a6t","title":"func syncMain(with: [Fork]) throws","type":"method"},{"path":"\/documentation\/forked\/forkedresource\/syncmain(with:)-uing","title":"func syncMain(with: [Fork]) throws","type":"method"},{"path":"\/documentation\/forked\/forkedresource\/update(_:with:)","title":"func update(Fork, with: ForkedResource<RepositoryType>.ResourceType) throws -> Version","type":"method"},{"path":"\/documentation\/forked\/forkedresource\/value(in:)","title":"func value(in: Fork) throws -> ForkedResource<RepositoryType>.ResourceType?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/forked\/forkedresource\/resourcetype","title":"ForkedResource.ResourceType","type":"typealias"}],"path":"\/documentation\/forked\/forkedresource","title":"ForkedResource","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/forked\/mergeable\/merged(withsubordinate:commonancestor:)","title":"func merged(withSubordinate: Self, commonAncestor: Self) throws -> Self","type":"method"},{"path":"\/documentation\/forked\/mergeable\/salvaging(from:)","title":"func salvaging(from: Self) throws -> Self","type":"method"}],"path":"\/documentation\/forked\/mergeable","title":"Mergeable","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/forked\/repository\/resource","title":"Resource","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/forked\/repository\/forks","title":"var forks: [Fork]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/forked\/repository\/content(of:at:)","title":"func content(of: Fork, at: Version) throws -> CommitContent<Self.Resource>","type":"method"},{"path":"\/documentation\/forked\/repository\/create(_:withinitialcommit:)","title":"func create(Fork, withInitialCommit: Commit<Self.Resource>) throws","type":"method"},{"path":"\/documentation\/forked\/repository\/delete(_:)","title":"func delete(Fork) throws","type":"method"},{"path":"\/documentation\/forked\/repository\/removecommit(at:from:)","title":"func removeCommit(at: Version, from: Fork) throws","type":"method"},{"path":"\/documentation\/forked\/repository\/store(_:in:)","title":"func store(Commit<Self.Resource>, in: Fork) throws","type":"method"},{"path":"\/documentation\/forked\/repository\/versions(storedin:)","title":"func versions(storedIn: Fork) throws -> Set<Version>","type":"method"}],"path":"\/documentation\/forked\/repository","title":"Repository","type":"protocol"},{"title":"Working with Resources","type":"groupMarker"},{"path":"\/documentation\/forked\/quickfork","title":"QuickFork","type":"typealias"},{"path":"\/documentation\/forked\/forkedresource\/update(_:with:)","title":"func update(Fork, with: ForkedResource<RepositoryType>.ResourceType) throws -> Version","type":"method"},{"path":"\/documentation\/forked\/forkedresource\/value(in:)","title":"func value(in: Fork) throws -> ForkedResource<RepositoryType>.ResourceType?","type":"method"},{"title":"Merging and Conflict Resolution","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/forked\/mergeable\/merged(withsubordinate:commonancestor:)","title":"func merged(withSubordinate: Self, commonAncestor: Self) throws -> Self","type":"method"},{"path":"\/documentation\/forked\/mergeable\/salvaging(from:)","title":"func salvaging(from: Self) throws -> Self","type":"method"}],"path":"\/documentation\/forked\/mergeable","title":"Mergeable","type":"protocol"},{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/forked\/gettingstarted","title":"Getting Started with Forked","type":"article"},{"path":"\/documentation\/forked\/cloudkitintegration","title":"CloudKit Integration Guide","type":"article"},{"path":"\/documentation\/forked\/forkedinnards","title":"Forked Innards: Understanding the Architecture","type":"article"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/forked\/atomicrepository\/init()","title":"init()","type":"init"},{"path":"\/documentation\/forked\/atomicrepository\/init(managedfileurl:)","title":"init(managedFileURL: URL) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/forked\/atomicrepository\/forks","title":"var forks: [Fork]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/forked\/atomicrepository\/content(of:at:)","title":"func content(of: Fork, at: Version) throws -> CommitContent<Resource>","type":"method"},{"path":"\/documentation\/forked\/atomicrepository\/create(_:withinitialcommit:)","title":"func create(Fork, withInitialCommit: Commit<Resource>) throws","type":"method"},{"path":"\/documentation\/forked\/atomicrepository\/delete(_:)","title":"func delete(Fork) throws","type":"method"},{"path":"\/documentation\/forked\/atomicrepository\/removecommit(at:from:)","title":"func removeCommit(at: Version, from: Fork) throws","type":"method"},{"path":"\/documentation\/forked\/atomicrepository\/store(_:in:)","title":"func store(Commit<Resource>, in: Fork) throws","type":"method"},{"path":"\/documentation\/forked\/atomicrepository\/versions(storedin:)","title":"func versions(storedIn: Fork) throws -> Set<Version>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/forked\/atomicrepository\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/forked\/atomicrepository\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/forked\/atomicrepository\/load()","title":"func load() throws","type":"method"},{"path":"\/documentation\/forked\/atomicrepository\/persist()","title":"func persist() throws","type":"method"}],"path":"\/documentation\/forked\/atomicrepository\/persistent-implementations","title":"Persistent Implementations","type":"symbol"}],"path":"\/documentation\/forked\/atomicrepository","title":"AtomicRepository","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/forked\/filerepository\/init(rootdirectory:)","title":"init(rootDirectory: URL) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/forked\/filerepository\/forks","title":"var forks: [Fork]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/forked\/filerepository\/content(of:at:)","title":"func content(of: Fork, at: Version) throws -> CommitContent<Data>","type":"method"},{"path":"\/documentation\/forked\/filerepository\/create(_:withinitialcommit:)","title":"func create(Fork, withInitialCommit: Commit<Data>) throws","type":"method"},{"path":"\/documentation\/forked\/filerepository\/delete(_:)","title":"func delete(Fork) throws","type":"method"},{"path":"\/documentation\/forked\/filerepository\/removecommit(at:from:)","title":"func removeCommit(at: Version, from: Fork) throws","type":"method"},{"path":"\/documentation\/forked\/filerepository\/store(_:in:)","title":"func store(Commit<Data>, in: Fork) throws","type":"method"},{"path":"\/documentation\/forked\/filerepository\/versions(storedin:)","title":"func versions(storedIn: Fork) throws -> Set<Version>","type":"method"}],"path":"\/documentation\/forked\/filerepository","title":"FileRepository","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/forked\/persistent\/load()","title":"func load() throws","type":"method"},{"path":"\/documentation\/forked\/persistent\/persist()","title":"func persist() throws","type":"method"}],"path":"\/documentation\/forked\/persistent","title":"Persistent","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/forked\/versionedmodel\/canloadmodelversion","title":"var canLoadModelVersion: Bool","type":"property"},{"path":"\/documentation\/forked\/versionedmodel\/modelversion","title":"var modelVersion: Int?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/forked\/versionedmodel\/currentmodelversion","title":"static var currentModelVersion: Int","type":"property"}],"path":"\/documentation\/forked\/versionedmodel","title":"VersionedModel","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/forked\/commit\/==(_:_:)","title":"static func == (Commit<Resource>, Commit<Resource>) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/forked\/commit\/content","title":"var content: CommitContent<Resource>","type":"property"},{"path":"\/documentation\/forked\/commit\/version","title":"var version: Version","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/forked\/commit\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/forked\/commit\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/forked\/commit\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/forked\/commit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/forked\/commit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/forked\/commit","title":"Commit","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/forked\/fork\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/forked\/fork\/init(name:)","title":"init(name: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/forked\/fork\/isprotected","title":"var isProtected: Bool","type":"property"},{"path":"\/documentation\/forked\/fork\/name","title":"let name: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/forked\/fork\/main","title":"static let main: Fork","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/forked\/fork\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/forked\/fork\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/forked\/fork","title":"Fork","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/forked\/forkchange\/fork","title":"let fork: Fork","type":"property"},{"path":"\/documentation\/forked\/forkchange\/mergingfork","title":"let mergingFork: Fork?","type":"property"},{"path":"\/documentation\/forked\/forkchange\/version","title":"let version: Version","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/forked\/forkchange\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/forked\/forkchange\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/forked\/forkchange","title":"ForkChange","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/forked\/version\/==(_:_:)","title":"static func == (Version, Version) -> Bool","type":"op"},{"path":"\/documentation\/forked\/version\/_(_:_:)","title":"static func < (Version, Version) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/forked\/version\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/forked\/version\/count","title":"var count: UInt64","type":"property"},{"path":"\/documentation\/forked\/version\/timestamp","title":"var timestamp: Date","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/forked\/version\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"path":"\/documentation\/forked\/version\/next()","title":"func next() -> Version","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/forked\/version\/initialversion","title":"static let initialVersion: Version","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/forked\/version\/'...(_:)-1nziq","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/forked\/version\/'...(_:)-3z0z5","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/forked\/version\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/forked\/version\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/forked\/version\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/forked\/version\/_(_:_:)-2167f","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/forked\/version\/_=(_:_:)-8ckx5","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/forked\/version\/_=(_:_:)-9tu3k","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/forked\/version\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/forked\/version\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/forked\/version\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/forked\/version","title":"Version","type":"struct"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/forked\/forkedapiversion","title":"let forkedAPIVersion: Int","type":"var"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/forked\/changestream","title":"ChangeStream","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/forked\/commitcontent\/none","title":"case none","type":"case"},{"path":"\/documentation\/forked\/commitcontent\/resource(_:)","title":"case resource(Resource)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/forked\/commitcontent\/resource","title":"var resource: Resource?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/forked\/commitcontent\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/forked\/commitcontent\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/forked\/commitcontent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/forked\/commitcontent\/==(_:_:)","title":"static func == (CommitContent<Resource>, CommitContent<Resource>) -> Bool","type":"op"}],"path":"\/documentation\/forked\/commitcontent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/forked\/commitcontent","title":"CommitContent","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/forked\/error\/attempttoaccessnonexistentcommitinfork(_:)","title":"case attemptToAccessNonExistentCommitInFork(Fork)","type":"case"},{"path":"\/documentation\/forked\/error\/attempttoaccessnonexistentfork(_:)","title":"case attemptToAccessNonExistentFork(Fork)","type":"case"},{"path":"\/documentation\/forked\/error\/attempttoaccessnonexistentversion(_:_:)","title":"case attemptToAccessNonExistentVersion(Version, Fork)","type":"case"},{"path":"\/documentation\/forked\/error\/attempttocreateexistingfork(_:)","title":"case attemptToCreateExistingFork(Fork)","type":"case"},{"path":"\/documentation\/forked\/error\/attempttodeletealldatafrommainfork","title":"case attemptToDeleteAllDataFromMainFork","type":"case"},{"path":"\/documentation\/forked\/error\/attempttodeleteprotectedfork(_:)","title":"case attemptToDeleteProtectedFork(Fork)","type":"case"},{"path":"\/documentation\/forked\/error\/attempttoreplaceexistingversion(_:_:)","title":"case attemptToReplaceExistingVersion(Version, Fork)","type":"case"},{"path":"\/documentation\/forked\/error\/attempttorestartmainfork","title":"case attemptToRestartMainFork","type":"case"},{"path":"\/documentation\/forked\/error\/unexpectederror(_:)","title":"case unexpectedError(any Error)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/forked\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/forked\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/forked\/error","title":"Error","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/forked\/mergeaction\/fastforward","title":"case fastForward","type":"case"},{"path":"\/documentation\/forked\/mergeaction\/none","title":"case none","type":"case"},{"path":"\/documentation\/forked\/mergeaction\/resolveconflict","title":"case resolveConflict","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/forked\/mergeaction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/forked\/mergeaction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/forked\/mergeaction","title":"MergeAction","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/forked\/swift\/optional\/id","title":"var id: Wrapped.ID?","type":"property"}],"path":"\/documentation\/forked\/swift\/optional\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/forked\/swift\/optional\/merged(withsubordinate:commonancestor:)","title":"func merged(withSubordinate: Optional<Wrapped>, commonAncestor: Optional<Wrapped>) throws -> Optional<Wrapped>","type":"method"},{"path":"\/documentation\/forked\/swift\/optional\/salvaging(from:)","title":"func salvaging(from: Self) throws -> Self","type":"method"}],"path":"\/documentation\/forked\/swift\/optional\/mergeable-implementations","title":"Mergeable Implementations","type":"symbol"}],"path":"\/documentation\/forked\/swift\/optional","title":"Optional","type":"extension"}],"path":"\/documentation\/forked\/swift","title":"Swift","type":"extension"}],"path":"\/documentation\/forked","title":"Forked","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}