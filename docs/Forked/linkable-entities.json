[{"kind":"org.swift.docc.kind.initializer","availableLanguages":["swift"],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Fork\/init(name:)","taskGroups":[],"fragments":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"name","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Initialize a fork with a given unique name.","type":"text"}],"language":"swift","path":"\/documentation\/forked\/fork\/init(name:)","title":"init(name:)","usr":"s:6Forked4ForkV4nameACSS_tcfc"},{"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Version\/next()","availableLanguages":["swift"],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"next"},{"text":"() -> ","kind":"text"},{"text":"Version","kind":"typeIdentifier","preciseIdentifier":"s:6Forked7VersionV"}],"title":"next()","language":"swift","kind":"org.swift.docc.kind.instanceMethod","usr":"s:6Forked7VersionV4nextACyF","abstract":[{"text":"Increase the timestamp by 1","type":"text"}],"path":"\/documentation\/forked\/version\/next()","taskGroups":[]},{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"salvaging","kind":"identifier"},{"kind":"text","text":"("},{"text":"from","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"other"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"salvaging(from:)","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Mergeable\/salvaging(from:)","abstract":[{"text":"In general, 3-way merges are used in Forked. But when bootstrapping,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"there can be times when no common ancestor exists. Effectively we have"},{"type":"text","text":" "},{"type":"text","text":"to merge together unrelated values. For example, if you install an app on"},{"text":" ","type":"text"},{"text":"two offline devices, insert some data on each, and then take them online to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"sync. In this scenario, there is no common ancestor,"},{"text":" ","type":"text"},{"type":"text","text":"but it would be nice to keep the data entered on each device."},{"text":" ","type":"text"},{"type":"text","text":"An even trickier case arises if two devices are fully synced up, but then the"},{"type":"text","text":" "},{"type":"text","text":"cloud data is reset. Effectively, the two data sets are now unrelated, and if you"},{"type":"text","text":" "},{"text":"start them syncing again, the history relating them is lost, and there is no common","type":"text"},{"type":"text","text":" "},{"type":"text","text":"ancestor. You can choose one or the other, but just blindly merging the two will"},{"type":"text","text":" "},{"type":"text","text":"lead to duplications (how often have we seen that in apps like Contacts?)"}],"usr":"s:6Forked9MergeableP9salvaging4fromxx_tKF","availableLanguages":["swift"],"taskGroups":[],"kind":"org.swift.docc.kind.instanceMethod","path":"\/documentation\/forked\/mergeable\/salvaging(from:)","language":"swift"},{"language":"swift","kind":"org.swift.docc.kind.enumerationCase","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/MergeAction\/fastForward","abstract":[{"text":"The destination fork is behind, and it has no new commits itself.","type":"text"},{"text":" ","type":"text"},{"text":"So the destination fork version was simply made equal to the newer fork version.","type":"text"},{"text":" ","type":"text"},{"text":"This is known as a “fast forward”.","type":"text"}],"path":"\/documentation\/forked\/mergeaction\/fastforward","title":"MergeAction.fastForward","availableLanguages":["swift"],"taskGroups":[],"usr":"s:6Forked11MergeActionO11fastForwardyA2CmF","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"fastForward"}]},{"kind":"org.swift.docc.kind.operator","taskGroups":[],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"availableLanguages":["swift"],"path":"\/documentation\/forked\/mergeaction\/!=(_:_:)","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/MergeAction\/!=(_:_:)","language":"swift","usr":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:6Forked11MergeActionO","title":"!=(_:_:)","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}]},{"kind":"org.swift.docc.kind.instanceProperty","path":"\/documentation\/forked\/versionedmodel\/canloadmodelversion","taskGroups":[],"abstract":[{"type":"text","text":"If the "},{"code":"version","type":"codeVoice"},{"type":"text","text":" is less or equal to the "},{"type":"codeVoice","code":"currentVersion"},{"text":" ","type":"text"},{"type":"text","text":"it is considered to be known. Ie, it is a version from the past"},{"type":"text","text":" "},{"type":"text","text":"or a current version, and we can handle this version. It can"},{"text":" ","type":"text"},{"type":"text","text":"be properly migrated."}],"availableLanguages":["swift"],"usr":"s:6Forked14VersionedModelPAAE07canLoadC7VersionSbvp","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/VersionedModel\/canLoadModelVersion","title":"canLoadModelVersion","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"canLoadModelVersion","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"language":"swift"},{"kind":"org.swift.docc.kind.collectionGroup","availableLanguages":["swift"],"title":"Decodable Implementations","path":"\/documentation\/forked\/commitcontent\/decodable-implementations","language":"swift","taskGroups":[{"title":"Initializers","identifiers":["doc:\/\/Forked\/documentation\/Forked\/CommitContent\/init(from:)"]}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/CommitContent\/Decodable-Implementations"},{"taskGroups":[],"usr":"s:6Forked16AtomicRepositoryCAASeRzSERzrlE4loadyyKF","kind":"org.swift.docc.kind.instanceMethod","language":"swift","availableLanguages":["swift"],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"load","kind":"identifier"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/load()","title":"load()","path":"\/documentation\/forked\/atomicrepository\/load()"},{"kind":"org.swift.docc.kind.instanceMethod","language":"swift","taskGroups":[],"availableLanguages":["swift"],"usr":"s:6Forked14FileRepositoryC8versions8storedInShyAA7VersionVGAA4ForkV_tKF","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"versions","kind":"identifier"},{"text":"(","kind":"text"},{"text":"storedIn","kind":"externalParam"},{"kind":"text","text":" "},{"text":"fork","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Fork","preciseIdentifier":"s:6Forked4ForkV","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"text":"<","kind":"text"},{"text":"Version","kind":"typeIdentifier","preciseIdentifier":"s:6Forked7VersionV"},{"text":">","kind":"text"}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/FileRepository\/versions(storedIn:)","title":"versions(storedIn:)","path":"\/documentation\/forked\/filerepository\/versions(storedin:)"},{"kind":"org.swift.docc.kind.instanceMethod","title":"create(_:withInitialCommit:)","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Repository\/create(_:withInitialCommit:)","abstract":[{"text":"Creates a fork providing an initial commit to populate it with.","type":"text"},{"type":"text","text":" "},{"text":"Throws if the fork is already present.","type":"text"}],"language":"swift","path":"\/documentation\/forked\/repository\/create(_:withinitialcommit:)","taskGroups":[],"usr":"s:6Forked10RepositoryP6create_17withInitialCommityAA4ForkV_AA0F0Vy8ResourceQzGtKF","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"create"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"fork","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Fork","kind":"typeIdentifier","preciseIdentifier":"s:6Forked4ForkV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"withInitialCommit"},{"kind":"text","text":" "},{"text":"commit","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6Forked6CommitV","kind":"typeIdentifier","text":"Commit"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Resource","kind":"typeIdentifier","preciseIdentifier":"s:6Forked10RepositoryP8ResourceQa"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"}],"availableLanguages":["swift"]},{"language":"swift","kind":"org.swift.docc.kind.operator","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Commit\/!=(_:_:)","title":"!=(_:_:)","availableLanguages":["swift"],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"internalParam","text":"lhs"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"path":"\/documentation\/forked\/commit\/!=(_:_:)","abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"taskGroups":[],"usr":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:6Forked6CommitV"},{"kind":"org.swift.docc.kind.operator","language":"swift","abstract":[{"text":"Returns a closed range that contains both of its bounds.","type":"text"}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Version\/...(_:_:)","taskGroups":[],"availableLanguages":["swift"],"usr":"s:SLsE3zzzoiySNyxGx_xtFZ::SYNTHESIZED::s:6Forked7VersionV","path":"\/documentation\/forked\/version\/'...(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"..."},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"minimum","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"maximum","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SN","kind":"typeIdentifier","text":"ClosedRange"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":"...(_:_:)"},{"language":"swift","kind":"org.swift.docc.kind.operator","availableLanguages":["swift"],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Version\/_=(_:_:)-9tu3k","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the value of the first argument"},{"type":"text","text":" "},{"type":"text","text":"is greater than or equal to that of the second argument."}],"taskGroups":[],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":">=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"internalParam","text":"lhs"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"title":">=(_:_:)","usr":"s:SLsE2geoiySbx_xtFZ::SYNTHESIZED::s:6Forked7VersionV","path":"\/documentation\/forked\/version\/_=(_:_:)-9tu3k"},{"kind":"org.swift.docc.kind.instanceMethod","title":"delete(_:)","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Repository\/delete(_:)","usr":"s:6Forked10RepositoryP6deleteyyAA4ForkVKF","language":"swift","availableLanguages":["swift"],"taskGroups":[],"path":"\/documentation\/forked\/repository\/delete(_:)","abstract":[{"type":"text","text":"Delete an existing fork. Throws if it isn’t present."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"delete","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"fork"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6Forked4ForkV","text":"Fork","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}]},{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"initialVersion"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6Forked7VersionV","kind":"typeIdentifier","text":"Version"}],"language":"swift","taskGroups":[],"abstract":[{"text":"Big bang version of every ForkedResource. Effectively, it is ancient history.","type":"text"},{"type":"text","text":" "},{"text":"Also used as the initial value of any newly created branch","type":"text"}],"title":"initialVersion","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Version\/initialVersion","kind":"org.swift.docc.kind.typeProperty","path":"\/documentation\/forked\/version\/initialversion","availableLanguages":["swift"],"usr":"s:6Forked7VersionV07initialB0ACvpZ"},{"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Version\/...(_:)-1nziq","path":"\/documentation\/forked\/version\/'...(_:)-1nziq","availableLanguages":["swift"],"usr":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ::SYNTHESIZED::s:6Forked7VersionV","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"..."},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"internalParam","text":"maximum"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"PartialRangeThrough","kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"abstract":[{"text":"Returns a partial range up to, and including, its upper bound.","type":"text"}],"kind":"org.swift.docc.kind.operator","language":"swift","title":"...(_:)","taskGroups":[]},{"language":"swift","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/update(_:with:)","taskGroups":[],"fragments":[{"kind":"attribute","text":"@discardableResult"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"update"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"fork"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Forked4ForkV","text":"Fork"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"with"},{"text":" ","kind":"text"},{"text":"resource","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6Forked0A8ResourceC","text":"ForkedResource","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"RepositoryType","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"ResourceType","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:6Forked7VersionV","kind":"typeIdentifier","text":"Version"}],"kind":"org.swift.docc.kind.instanceMethod","title":"update(_:with:)","availableLanguages":["swift"],"usr":"s:6Forked0A8ResourceC6update_4withAA7VersionVAA4ForkV_0B0QztKF","path":"\/documentation\/forked\/forkedresource\/update(_:with:)","abstract":[{"type":"text","text":"Update the contents of a fork with a new resource value. Will create a commit, and return the "},{"type":"codeVoice","code":"Version"},{"type":"text","text":"."}]},{"language":"swift","usr":"s:6Forked0A8ResourceC13mergeAllForks4intoyAA4ForkV_tKF","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"mergeAllForks"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"toFork"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Fork","preciseIdentifier":"s:6Forked4ForkV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"path":"\/documentation\/forked\/forkedresource\/mergeallforks(into:)-30zos","kind":"org.swift.docc.kind.instanceMethod","title":"mergeAllForks(into:)","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/mergeAllForks(into:)-30zos","abstract":[{"text":"Merges other forks into main, and then main into the target fork, so it has up-to-date data from all other forks.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"You can pass in "},{"type":"codeVoice","code":".main"},{"type":"text","text":" if you want to merge all other forks into "},{"code":".main","type":"codeVoice"},{"type":"text","text":"."}],"availableLanguages":["swift"],"taskGroups":[]},{"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Version\/_(_:_:)","language":"swift","availableLanguages":["swift"],"title":"<(_:_:)","taskGroups":[],"usr":"s:6Forked7VersionV1loiySbAC_ACtFZ","path":"\/documentation\/forked\/version\/_(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"<"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Version","preciseIdentifier":"s:6Forked7VersionV"},{"kind":"text","text":", "},{"text":"rhs","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6Forked7VersionV","text":"Version","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"org.swift.docc.kind.operator"},{"path":"\/documentation\/forked\/atomicrepository\/create(_:withinitialcommit:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"create"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"fork"},{"kind":"text","text":": "},{"text":"Fork","preciseIdentifier":"s:6Forked4ForkV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"withInitialCommit"},{"text":" ","kind":"text"},{"text":"commit","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6Forked6CommitV","text":"Commit","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Resource","kind":"typeIdentifier"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"}],"taskGroups":[],"usr":"s:6Forked16AtomicRepositoryC6create_17withInitialCommityAA4ForkV_AA0G0VyxGtKF","title":"create(_:withInitialCommit:)","kind":"org.swift.docc.kind.instanceMethod","availableLanguages":["swift"],"language":"swift","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/create(_:withInitialCommit:)"},{"availableLanguages":["swift"],"taskGroups":[{"title":"Initializers","identifiers":["doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/init(initialValue:forkNames:)","doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/init(initialValue:forks:)","doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/init(repository:)"]},{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/changeStream","doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/forkedVersion","doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/forks","doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/repository"],"title":"Instance Properties"},{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/commonAncestor(of:)","doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/content(of:)","doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/create(_:)","doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/delete(_:)","doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/has(_:)","doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/hasUnmergedCommitsForMain(in:)","doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/hasUnmergedCommitsInMain(for:)","doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/mainVersion(differsFromVersionIn:)","doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/mainVersion(isSameAsVersionIn:)","doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/mergeAllForks(into:)-30zos","doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/mergeAllForks(into:)-3bh6r","doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/mergeFromMain(into:)-5tynb","doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/mergeFromMain(into:)-6o9f","doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/mergeIntoMain(from:)-352k5","doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/mergeIntoMain(from:)-9wpr4","doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/mostRecentCommit(of:)","doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/mostRecentVersion(of:)","doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/mostRecentVersionOfMain()","doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/performAtomically(_:)","doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/removeAllContent()","doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/removeContent(from:)","doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/resource(of:)","doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/restart(_:with:)","doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/syncAllForks()-88teh","doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/syncAllForks()-9xz2c","doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/syncMain(with:)-18a6t","doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/syncMain(with:)-uing","doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/update(_:with:)","doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/value(in:)"],"title":"Instance Methods"},{"title":"Type Aliases","identifiers":["doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/ResourceType"]}],"fragments":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ForkedResource"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"RepositoryType"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RepositoryType","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:6Forked10RepositoryP","text":"Repository","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"RepositoryType","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Resource","preciseIdentifier":"s:6Forked10RepositoryP8ResourceQa"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}],"usr":"s:6Forked0A8ResourceC","path":"\/documentation\/forked\/forkedresource","kind":"org.swift.docc.kind.class","title":"ForkedResource","language":"swift","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource","abstract":[{"type":"text","text":"This manages forks of a resource. It facilitiates concurrent changes to a single resource, and"},{"type":"text","text":" "},{"type":"text","text":"provides a systematic approach for merging changes, with support for 3-way merging."}]},{"title":"Equatable Implementations","kind":"org.swift.docc.kind.collectionGroup","availableLanguages":["swift"],"language":"swift","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/MergeAction\/Equatable-Implementations","path":"\/documentation\/forked\/mergeaction\/equatable-implementations","taskGroups":[{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/MergeAction\/!=(_:_:)"],"title":"Operators"}]},{"abstract":[{"type":"text","text":"If needed, the repo can store data persistently at this point (or do nothing)"},{"type":"text","text":" "},{"type":"text","text":"Do not call this unless you are using a type that is persistable, otherwise you"},{"text":" ","type":"text"},{"text":"will get a fatalError.","type":"text"}],"kind":"org.swift.docc.kind.instanceMethod","title":"persist()","usr":"s:6Forked10PersistentP7persistyyKF","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Persistent\/persist()","taskGroups":[],"availableLanguages":["swift"],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"persist"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"language":"swift","path":"\/documentation\/forked\/persistent\/persist()"},{"taskGroups":[],"availableLanguages":["swift"],"title":"CommitContent.none","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"none"}],"abstract":[{"type":"text","text":"The content is not present. Perhaps it has not been added yet,"},{"type":"text","text":" "},{"type":"text","text":"or it may have been removed."}],"kind":"org.swift.docc.kind.enumerationCase","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/CommitContent\/none","usr":"s:6Forked13CommitContentO4noneyACyxGAEmSQRzlF","path":"\/documentation\/forked\/commitcontent\/none","language":"swift"},{"availableLanguages":["swift"],"kind":"org.swift.docc.kind.protocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"Persistent","kind":"identifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:6Forked10RepositoryP","text":"Repository"}],"title":"Persistent","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Persistent","language":"swift","usr":"s:6Forked10PersistentP","taskGroups":[{"title":"Instance Methods","identifiers":["doc:\/\/Forked\/documentation\/Forked\/Persistent\/load()","doc:\/\/Forked\/documentation\/Forked\/Persistent\/persist()"]}],"path":"\/documentation\/forked\/persistent"},{"language":"swift","taskGroups":[],"usr":"s:6Forked0A8ResourceC17performAtomicallyyqd__qd__yKXEKlF","abstract":[{"text":"If you want to perform a series of calls as a single transaction,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"preventing other threads from changing anything between calls,"},{"text":" ","type":"text"},{"type":"text","text":"use this to group the transaction of calls. Note that reentrance of this"},{"text":" ","type":"text"},{"text":"method from the same thread will lead to deadlock. It is best not to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"execute long running code in the block, because all other interactions"},{"text":" ","type":"text"},{"type":"text","text":"with the "},{"type":"codeVoice","code":"ForkedResource"},{"type":"text","text":" will block waiting."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"performAtomically","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ReturnType"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"block"},{"text":": () ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"ReturnType","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ReturnType","kind":"typeIdentifier"}],"path":"\/documentation\/forked\/forkedresource\/performatomically(_:)","title":"performAtomically(_:)","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/performAtomically(_:)","availableLanguages":["swift"],"kind":"org.swift.docc.kind.instanceMethod"},{"usr":"s:6Forked0A8ResourceC12syncAllForksyyKF","title":"syncAllForks()","availableLanguages":["swift"],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/syncAllForks()-88teh","path":"\/documentation\/forked\/forkedresource\/syncallforks()-88teh","taskGroups":[],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"syncAllForks","kind":"identifier"},{"kind":"text","text":"() "},{"text":"throws","kind":"keyword"}],"abstract":[{"text":"Merges all forks so they are all at the same version. This involves merging all forks into the main fork","type":"text"},{"type":"text","text":" "},{"type":"text","text":"first, and then merging the main fork into all other forks."}],"language":"swift","kind":"org.swift.docc.kind.instanceMethod"},{"path":"\/documentation\/forked\/forkedresource\/mainversion(issameasversionin:)","usr":"s:6Forked0A8ResourceC11mainVersion08isSameAsD2InSbAA4ForkV_tKF","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"mainVersion"},{"kind":"text","text":"("},{"text":"isSameAsVersionIn","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"fork","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Fork","preciseIdentifier":"s:6Forked4ForkV"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"mainVersion(isSameAsVersionIn:)","kind":"org.swift.docc.kind.instanceMethod","taskGroups":[],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/mainVersion(isSameAsVersionIn:)","language":"swift","availableLanguages":["swift"]},{"taskGroups":[{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/Fork\/init(from:)","doc:\/\/Forked\/documentation\/Forked\/Fork\/init(name:)"],"title":"Initializers"},{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/Fork\/isProtected","doc:\/\/Forked\/documentation\/Forked\/Fork\/name"],"title":"Instance Properties"},{"title":"Type Properties","identifiers":["doc:\/\/Forked\/documentation\/Forked\/Fork\/main"]},{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/Fork\/Equatable-Implementations"],"title":"Default Implementations"}],"language":"swift","path":"\/documentation\/forked\/fork","kind":"org.swift.docc.kind.structure","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Fork","kind":"identifier"}],"availableLanguages":["swift"],"abstract":[{"text":"A type representing a named fork.","type":"text"}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Fork","title":"Fork","usr":"s:6Forked4ForkV"},{"availableLanguages":["swift"],"language":"swift","title":"merged(withSubordinate:commonAncestor:)","taskGroups":[],"usr":"s:6Forked9MergeableP6merged15withSubordinate14commonAncestorxx_xtKF","kind":"org.swift.docc.kind.instanceMethod","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Mergeable\/merged(withSubordinate:commonAncestor:)","path":"\/documentation\/forked\/mergeable\/merged(withsubordinate:commonancestor:)","abstract":[{"type":"text","text":"Performs a 3-way merge, where "},{"type":"codeVoice","code":"self"},{"type":"text","text":" and "},{"type":"codeVoice","code":"other"},{"text":" are the most recent versions,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":"commonAncestor"},{"type":"text","text":" is from a point in the past at which time the histories diverged."},{"text":" ","type":"text"},{"type":"text","text":"By comparing the recent values to the ancestor, you can determine what changed in each fork,"},{"text":" ","type":"text"},{"text":"and decide how to merge. Where it is not possible to merge changes from each, ","type":"text"},{"code":"self","type":"codeVoice"},{"text":" should","type":"text"},{"text":" ","type":"text"},{"text":"be considered the ","type":"text"},{"code":"dominant","type":"codeVoice"},{"type":"text","text":" fork, and "},{"type":"codeVoice","code":"other"},{"text":" subordinate. If you must choose, choose ","type":"text"},{"type":"codeVoice","code":"self"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"merged","kind":"identifier"},{"text":"(","kind":"text"},{"text":"withSubordinate","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"other","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"externalParam","text":"commonAncestor"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}]},{"language":"swift","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeCommit"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"version"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:6Forked7VersionV","text":"Version"},{"text":", ","kind":"text"},{"text":"from","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"fork"},{"text":": ","kind":"text"},{"text":"Fork","kind":"typeIdentifier","preciseIdentifier":"s:6Forked4ForkV"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"usr":"s:6Forked14FileRepositoryC12removeCommit2at4fromyAA7VersionV_AA4ForkVtKF","kind":"org.swift.docc.kind.instanceMethod","taskGroups":[],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/FileRepository\/removeCommit(at:from:)","path":"\/documentation\/forked\/filerepository\/removecommit(at:from:)","availableLanguages":["swift"],"title":"removeCommit(at:from:)"},{"taskGroups":[],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/init(repository:)","abstract":[{"text":"Initialize the ","type":"text"},{"type":"codeVoice","code":"ForkedResource"},{"text":" with a repository. If the repository is new,","type":"text"},{"type":"text","text":" "},{"text":"and has no main fork, one will be added with an initial commit.","type":"text"}],"path":"\/documentation\/forked\/forkedresource\/init(repository:)","availableLanguages":["swift"],"kind":"org.swift.docc.kind.initializer","title":"init(repository:)","usr":"s:6Forked0A8ResourceC10repositoryACyxGx_tKcfc","fragments":[{"text":"init","kind":"keyword"},{"kind":"text","text":"("},{"kind":"externalParam","text":"repository"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"RepositoryType"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"language":"swift"},{"language":"swift","taskGroups":[],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":">","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"internalParam","text":"lhs"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Version\/_(_:_:)-2167f","title":">(_:_:)","usr":"s:SLsE1goiySbx_xtFZ::SYNTHESIZED::s:6Forked7VersionV","kind":"org.swift.docc.kind.operator","path":"\/documentation\/forked\/version\/_(_:_:)-2167f","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the value of the first argument"},{"type":"text","text":" "},{"text":"is greater than that of the second argument.","type":"text"}],"availableLanguages":["swift"]},{"taskGroups":[],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/hasUnmergedCommitsInMain(for:)","language":"swift","title":"hasUnmergedCommitsInMain(for:)","path":"\/documentation\/forked\/forkedresource\/hasunmergedcommitsinmain(for:)","kind":"org.swift.docc.kind.instanceMethod","abstract":[{"text":"Returns whether main has commits that haven’t been merged into the fork yet.","type":"text"}],"availableLanguages":["swift"],"usr":"s:6Forked0A8ResourceC24hasUnmergedCommitsInMain3forSbAA4ForkV_tKF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hasUnmergedCommitsInMain","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"kind":"text","text":" "},{"kind":"internalParam","text":"fork"},{"kind":"text","text":": "},{"text":"Fork","kind":"typeIdentifier","preciseIdentifier":"s:6Forked4ForkV"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},{"path":"\/documentation\/forked\/error\/attempttocreateexistingfork(_:)","kind":"org.swift.docc.kind.enumerationCase","availableLanguages":["swift"],"title":"Error.attemptToCreateExistingFork(_:)","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Error\/attemptToCreateExistingFork(_:)","taskGroups":[],"usr":"s:6Forked5ErrorO27attemptToCreateExistingForkyAcA0G0VcACmF","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"attemptToCreateExistingFork","kind":"identifier"},{"kind":"text","text":"("},{"text":"Fork","preciseIdentifier":"s:6Forked4ForkV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"language":"swift"},{"taskGroups":[{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/init(from:)"],"title":"Initializers"}],"path":"\/documentation\/forked\/atomicrepository\/decodable-implementations","language":"swift","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/Decodable-Implementations","availableLanguages":["swift"],"title":"Decodable Implementations","kind":"org.swift.docc.kind.collectionGroup"},{"language":"swift","title":"name","abstract":[{"type":"text","text":"The name of the fork"}],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"name","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"availableLanguages":["swift"],"usr":"s:6Forked4ForkV4nameSSvp","taskGroups":[],"kind":"org.swift.docc.kind.instanceProperty","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Fork\/name","path":"\/documentation\/forked\/fork\/name"},{"language":"swift","kind":"org.swift.docc.kind.protocol","path":"\/documentation\/forked\/repository","usr":"s:6Forked10RepositoryP","availableLanguages":["swift"],"taskGroups":[{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/Repository\/Resource"],"title":"Associated Types"},{"title":"Instance Properties","identifiers":["doc:\/\/Forked\/documentation\/Forked\/Repository\/forks"]},{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/Repository\/content(of:at:)","doc:\/\/Forked\/documentation\/Forked\/Repository\/create(_:withInitialCommit:)","doc:\/\/Forked\/documentation\/Forked\/Repository\/delete(_:)","doc:\/\/Forked\/documentation\/Forked\/Repository\/removeCommit(at:from:)","doc:\/\/Forked\/documentation\/Forked\/Repository\/store(_:in:)","doc:\/\/Forked\/documentation\/Forked\/Repository\/versions(storedIn:)"],"title":"Instance Methods"}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Repository","abstract":[{"type":"text","text":"This is storage for the "},{"type":"codeVoice","code":"ForkedResource"},{"text":". It could","type":"text"},{"text":" ","type":"text"},{"text":"be persisted on disk, or just kept in memory.","type":"text"},{"type":"text","text":" "},{"text":"This type does not understand any of the mechanisms of forking","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and merging. That is all handled by the "},{"code":"ForkedResource","type":"codeVoice"},{"text":", which also","type":"text"},{"type":"text","text":" "},{"text":"ensures correct multi-threading behavior.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Classes conforming to this type simply have to setup a storage"},{"type":"text","text":" "},{"type":"text","text":"mechanism, and handle the requests, keeping commits assigned to forks."}],"title":"Repository","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Repository","kind":"identifier"},{"text":" : AnyObject","kind":"text"}]},{"availableLanguages":["swift"],"path":"\/documentation\/forked\/mergeaction\/none","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"none"}],"title":"MergeAction.none","abstract":[{"type":"text","text":"No action was taken. The two forks were already at the same version."}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/MergeAction\/none","kind":"org.swift.docc.kind.enumerationCase","usr":"s:6Forked11MergeActionO4noneyA2CmF","taskGroups":[],"language":"swift"},{"path":"\/documentation\/forked\/atomicrepository\/versions(storedin:)","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/versions(storedIn:)","kind":"org.swift.docc.kind.instanceMethod","language":"swift","title":"versions(storedIn:)","usr":"s:6Forked16AtomicRepositoryC8versions8storedInShyAA7VersionVGAA4ForkV_tKF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"versions","kind":"identifier"},{"text":"(","kind":"text"},{"text":"storedIn","kind":"externalParam"},{"kind":"text","text":" "},{"text":"fork","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Fork","kind":"typeIdentifier","preciseIdentifier":"s:6Forked4ForkV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sh","text":"Set","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:6Forked7VersionV","text":"Version","kind":"typeIdentifier"},{"kind":"text","text":">"}],"availableLanguages":["swift"],"taskGroups":[]},{"kind":"org.swift.docc.kind.enumerationCase","path":"\/documentation\/forked\/error\/attempttodeleteprotectedfork(_:)","taskGroups":[],"usr":"s:6Forked5ErrorO28attemptToDeleteProtectedForkyAcA0G0VcACmF","availableLanguages":["swift"],"title":"Error.attemptToDeleteProtectedFork(_:)","language":"swift","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Error\/attemptToDeleteProtectedFork(_:)","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"attemptToDeleteProtectedFork","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:6Forked4ForkV","text":"Fork"},{"kind":"text","text":")"}]},{"path":"\/documentation\/forked\/forkchange\/equatable-implementations","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkChange\/Equatable-Implementations","title":"Equatable Implementations","kind":"org.swift.docc.kind.collectionGroup","language":"swift","availableLanguages":["swift"],"taskGroups":[{"title":"Operators","identifiers":["doc:\/\/Forked\/documentation\/Forked\/ForkChange\/!=(_:_:)"]}]},{"availableLanguages":["swift"],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Error\/Error-Implementations","path":"\/documentation\/forked\/error\/error-implementations","kind":"org.swift.docc.kind.collectionGroup","language":"swift","taskGroups":[{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/Error\/localizedDescription"],"title":"Instance Properties"}],"title":"Error Implementations"},{"availableLanguages":["swift"],"path":"\/documentation\/forked\/forkedresource\/syncmain(with:)-uing","kind":"org.swift.docc.kind.instanceMethod","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/syncMain(with:)-uing","abstract":[{"text":"Brings main and the other fork to the same version by first merging from","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the other fork into main, and then merging from main into the other fork (fast forward)."},{"type":"text","text":" "},{"text":"This particular overload handles merges of  ","type":"text"},{"code":"Mergeable","type":"codeVoice"},{"type":"text","text":" resources."},{"text":" ","type":"text"},{"text":"To sync up all forks, just pass all forks to this func, including .main. The main fork is ignored","type":"text"},{"text":" ","type":"text"},{"text":"when merging.","type":"text"}],"language":"swift","title":"syncMain(with:)","taskGroups":[],"usr":"s:6Forked0A8ResourceC8syncMain4withySayAA4ForkVG_tKF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"syncMain"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"with"},{"kind":"text","text":" "},{"kind":"internalParam","text":"forks"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:6Forked4ForkV","text":"Fork"},{"text":"]) ","kind":"text"},{"text":"throws","kind":"keyword"}]},{"language":"swift","availableLanguages":["swift"],"taskGroups":[],"usr":"s:6Forked16AtomicRepositoryC5forksSayAA4ForkVGvp","path":"\/documentation\/forked\/atomicrepository\/forks","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"forks","kind":"identifier"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:6Forked4ForkV","kind":"typeIdentifier","text":"Fork"},{"kind":"text","text":"] { "},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"title":"forks","kind":"org.swift.docc.kind.instanceProperty","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/forks"},{"availableLanguages":["swift"],"taskGroups":[],"path":"\/documentation\/forked\/atomicrepository\/init(from:)","fragments":[{"kind":"keyword","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":" "},{"text":"decoder","kind":"internalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7DecoderP","text":"Decoder","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/init(from:)","kind":"org.swift.docc.kind.initializer","language":"swift","usr":"s:6Forked16AtomicRepositoryCAASeRzSERzrlE4fromACyxGs7Decoder_p_tKcfc","title":"init(from:)"},{"path":"\/documentation\/forked\/error\/attempttodeletealldatafrommainfork","availableLanguages":["swift"],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Error\/attemptToDeleteAllDataFromMainFork","taskGroups":[],"usr":"s:6Forked5ErrorO34attemptToDeleteAllDataFromMainForkyA2CmF","language":"swift","kind":"org.swift.docc.kind.enumerationCase","title":"Error.attemptToDeleteAllDataFromMainFork","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"attemptToDeleteAllDataFromMainFork","kind":"identifier"}]},{"usr":"s:6Forked5ErrorO24attemptToRestartMainForkyA2CmF","path":"\/documentation\/forked\/error\/attempttorestartmainfork","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Error\/attemptToRestartMainFork","language":"swift","taskGroups":[],"fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"attemptToRestartMainFork","kind":"identifier"}],"availableLanguages":["swift"],"title":"Error.attemptToRestartMainFork","kind":"org.swift.docc.kind.enumerationCase"},{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"resource"},{"kind":"text","text":": "},{"text":"Resource","kind":"typeIdentifier"},{"kind":"text","text":"? { "},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/CommitContent\/resource","language":"swift","usr":"s:6Forked13CommitContentO8resourcexSgvp","kind":"org.swift.docc.kind.instanceProperty","path":"\/documentation\/forked\/commitcontent\/resource","title":"resource","availableLanguages":["swift"],"taskGroups":[]},{"kind":"org.swift.docc.kind.extendedEnumeration","path":"\/documentation\/forked\/swift\/optional","availableLanguages":["swift"],"language":"swift","title":"Optional","usr":"s:e:s:Sq6ForkedAA9MergeableRzlE6merged15withSubordinate14commonAncestorxSgAF_AFtKF","fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Sq","text":"Optional","kind":"typeIdentifier"}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Swift\/Optional","taskGroups":[{"title":"Default Implementations","identifiers":["doc:\/\/Forked\/documentation\/Forked\/Swift\/Optional\/Identifiable-Implementations","doc:\/\/Forked\/documentation\/Forked\/Swift\/Optional\/Mergeable-Implementations"]}]},{"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Version\/==(_:_:)","path":"\/documentation\/forked\/version\/==(_:_:)","availableLanguages":["swift"],"title":"==(_:_:)","usr":"s:6Forked7VersionV2eeoiySbAC_ACtFZ","taskGroups":[],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6Forked7VersionV","text":"Version","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Forked7VersionV","text":"Version"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"org.swift.docc.kind.operator","language":"swift"},{"availableLanguages":["swift"],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Commit\/==(_:_:)","title":"==(_:_:)","usr":"s:6Forked6CommitV2eeoiySbACyxG_AEtFZ","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"==","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6Forked6CommitV","kind":"typeIdentifier","text":"Commit"},{"kind":"text","text":"<"},{"text":"Resource","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"text":"Commit","preciseIdentifier":"s:6Forked6CommitV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Resource"},{"kind":"text","text":">) -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"taskGroups":[],"kind":"org.swift.docc.kind.operator","path":"\/documentation\/forked\/commit\/==(_:_:)","language":"swift"},{"language":"swift","availableLanguages":["swift"],"abstract":[{"type":"text","text":"Delete an existing fork. If the fork does not exist, it will throw."}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/delete(_:)","title":"delete(_:)","taskGroups":[],"usr":"s:6Forked0A8ResourceC6deleteyyAA4ForkVKF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"delete"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"fork"},{"kind":"text","text":": "},{"text":"Fork","kind":"typeIdentifier","preciseIdentifier":"s:6Forked4ForkV"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"kind":"org.swift.docc.kind.instanceMethod","path":"\/documentation\/forked\/forkedresource\/delete(_:)"},{"kind":"org.swift.docc.kind.instanceMethod","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"load"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"throws"}],"language":"swift","availableLanguages":["swift"],"taskGroups":[],"title":"load()","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Persistent\/load()-343pg","usr":"s:6Forked10PersistentPAAE4loadyyKF","path":"\/documentation\/forked\/persistent\/load()-343pg"},{"kind":"org.swift.docc.kind.enumerationCase","path":"\/documentation\/forked\/error\/attempttoaccessnonexistentcommitinfork(_:)","availableLanguages":["swift"],"title":"Error.attemptToAccessNonExistentCommitInFork(_:)","language":"swift","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"attemptToAccessNonExistentCommitInFork"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Fork","preciseIdentifier":"s:6Forked4ForkV"},{"kind":"text","text":")"}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Error\/attemptToAccessNonExistentCommitInFork(_:)","taskGroups":[],"usr":"s:6Forked5ErrorO38attemptToAccessNonExistentCommitInForkyAcA0J0VcACmF"},{"path":"\/documentation\/forked\/fork\/main","abstract":[{"text":"The only fork created by default. All other forks","type":"text"},{"text":" ","type":"text"},{"text":"can be merged with the main, but not directly with","type":"text"},{"text":" ","type":"text"},{"text":"each other. It acts as the central hub of the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"wheel of forks."}],"kind":"org.swift.docc.kind.typeProperty","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Fork\/main","title":"main","usr":"s:6Forked4ForkV4mainACvpZ","language":"swift","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"main","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Forked4ForkV","text":"Fork"}],"availableLanguages":["swift"],"taskGroups":[]},{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"create","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"fork"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Forked4ForkV","text":"Fork"},{"kind":"text","text":", "},{"text":"withInitialCommit","kind":"externalParam"},{"kind":"text","text":" "},{"text":"commit","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Commit","preciseIdentifier":"s:6Forked6CommitV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"}],"taskGroups":[],"language":"swift","path":"\/documentation\/forked\/filerepository\/create(_:withinitialcommit:)","title":"create(_:withInitialCommit:)","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/FileRepository\/create(_:withInitialCommit:)","availableLanguages":["swift"],"usr":"s:6Forked14FileRepositoryC6create_17withInitialCommityAA4ForkV_AA0G0Vy10Foundation4DataVGtKF","kind":"org.swift.docc.kind.instanceMethod"},{"kind":"org.swift.docc.kind.initializer","title":"init(from:)","usr":"s:6Forked7VersionV4fromACs7Decoder_p_tKcfc","path":"\/documentation\/forked\/version\/init(from:)","language":"swift","availableLanguages":["swift"],"taskGroups":[],"fragments":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":" "},{"text":"decoder","kind":"internalParam"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Version\/init(from:)"},{"availableLanguages":["swift"],"taskGroups":[],"abstract":[{"text":"Merges from one fork into the main fork. May perform a 3-way merge.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"A "},{"type":"codeVoice","code":"MergeAction"},{"text":" is returned to indicate the type of merge that took place.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"After this operation, the main fork may be updated. The version of the other fork will be unchanged."},{"type":"text","text":" "},{"text":"Note that this may change the commits stored in unrelated forks, in order to preserve common ancestors.","type":"text"},{"type":"text","text":" "},{"text":"This particular overload handles merges of non-","type":"text"},{"type":"codeVoice","code":"Mergeable"},{"type":"text","text":" resources."}],"usr":"s:6Forked0A8ResourceC13mergeIntoMain4fromAA11MergeActionOAA4ForkV_tKF","path":"\/documentation\/forked\/forkedresource\/mergeintomain(from:)-9wpr4","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/mergeIntoMain(from:)-9wpr4","kind":"org.swift.docc.kind.instanceMethod","fragments":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"mergeIntoMain","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":" "},{"text":"fromFork","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Forked4ForkV","text":"Fork"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:6Forked11MergeActionO","text":"MergeAction","kind":"typeIdentifier"}],"title":"mergeIntoMain(from:)","language":"swift"},{"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/CommitContent\/==(_:_:)","abstract":[{"type":"text","text":"The resource is Equatable, so test explicitly for equality."}],"availableLanguages":["swift"],"language":"swift","taskGroups":[],"usr":"s:6Forked13CommitContentO2eeoiySbACyxG_AEtFZ","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"=="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6Forked13CommitContentO","text":"CommitContent","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Resource"},{"text":">, ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6Forked13CommitContentO","kind":"typeIdentifier","text":"CommitContent"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Resource"},{"kind":"text","text":">) -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"path":"\/documentation\/forked\/commitcontent\/==(_:_:)","kind":"org.swift.docc.kind.operator","title":"==(_:_:)"},{"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/delete(_:)","kind":"org.swift.docc.kind.instanceMethod","usr":"s:6Forked16AtomicRepositoryC6deleteyyAA4ForkVKF","title":"delete(_:)","language":"swift","path":"\/documentation\/forked\/atomicrepository\/delete(_:)","taskGroups":[],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"delete","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"fork"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6Forked4ForkV","kind":"typeIdentifier","text":"Fork"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"availableLanguages":["swift"]},{"usr":"s:6Forked14FileRepositoryC6deleteyyAA4ForkVKF","title":"delete(_:)","taskGroups":[],"language":"swift","path":"\/documentation\/forked\/filerepository\/delete(_:)","kind":"org.swift.docc.kind.instanceMethod","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/FileRepository\/delete(_:)","availableLanguages":["swift"],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"delete"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"fork","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Fork","kind":"typeIdentifier","preciseIdentifier":"s:6Forked4ForkV"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}]},{"kind":"org.swift.docc.kind.article","taskGroups":[],"title":"Forked Innards: Understanding the Architecture","language":"swift","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedInnards","path":"\/documentation\/forked\/forkedinnards","availableLanguages":["swift"],"abstract":[{"text":"Forked is built around a simple yet powerful concept: data conflicts should be treated as a natural part of software systems rather than an exceptional state.","type":"text"}]},{"availableLanguages":["swift"],"path":"\/documentation\/forked\/atomicrepository\/init()","abstract":[{"text":"Initialize with no persistence","type":"text"}],"title":"init()","taskGroups":[],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/init()","usr":"s:6Forked16AtomicRepositoryCACyxGycfc","fragments":[{"text":"init","kind":"keyword"},{"text":"()","kind":"text"}],"kind":"org.swift.docc.kind.initializer","language":"swift"},{"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Repository\/Resource","usr":"s:6Forked10RepositoryP8ResourceQa","kind":"org.swift.docc.kind.associatedType","title":"Resource","taskGroups":[],"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"Resource","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Equatable","kind":"typeIdentifier","preciseIdentifier":"s:SQ"}],"availableLanguages":["swift"],"language":"swift","path":"\/documentation\/forked\/repository\/resource"},{"availableLanguages":["swift"],"language":"swift","title":"..<(_:)","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Version\/.._(_:)","usr":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ::SYNTHESIZED::s:6Forked7VersionV","kind":"org.swift.docc.kind.operator","abstract":[{"type":"text","text":"Returns a partial range up to, but not including, its upper bound."}],"taskGroups":[],"path":"\/documentation\/forked\/version\/'.._(_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"..<"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"internalParam","text":"maximum"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"PartialRangeUpTo","preciseIdentifier":"s:s16PartialRangeUpToV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}]},{"path":"\/documentation\/forked\/fork\/equatable-implementations","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Fork\/Equatable-Implementations","language":"swift","kind":"org.swift.docc.kind.collectionGroup","availableLanguages":["swift"],"title":"Equatable Implementations","taskGroups":[{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/Fork\/!=(_:_:)"],"title":"Operators"}]},{"language":"swift","kind":"org.swift.docc.kind.instanceMethod","title":"salvaging(from:)","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Swift\/Optional\/salvaging(from:)","path":"\/documentation\/forked\/swift\/optional\/salvaging(from:)","taskGroups":[],"availableLanguages":["swift"],"usr":"s:6Forked9MergeablePAAE9salvaging4fromxx_tKF::SYNTHESIZED::s:Sq","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"salvaging"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"other"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"}]},{"usr":"s:6Forked0A8ResourceC0B4Typea","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResourceType"},{"text":" = ","kind":"text"},{"kind":"typeIdentifier","text":"RepositoryType"},{"text":".","kind":"text"},{"preciseIdentifier":"s:6Forked10RepositoryP8ResourceQa","text":"Resource","kind":"typeIdentifier"}],"taskGroups":[],"language":"swift","title":"ForkedResource.ResourceType","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/ResourceType","availableLanguages":["swift"],"kind":"org.swift.docc.kind.typeAlias","path":"\/documentation\/forked\/forkedresource\/resourcetype"},{"language":"swift","title":"mergeAllForks(into:)","taskGroups":[],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/mergeAllForks(into:)-3bh6r","availableLanguages":["swift"],"usr":"s:6Forked0A8ResourceCA2A9Mergeable0B0RpzrlE13mergeAllForks4intoyAA4ForkV_tKF","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"mergeAllForks"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"toFork"},{"text":": ","kind":"text"},{"text":"Fork","kind":"typeIdentifier","preciseIdentifier":"s:6Forked4ForkV"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"abstract":[{"text":"Merges other forks into main, and then main into the target fork, so it has up-to-date data from all other forks.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"You can pass in "},{"type":"codeVoice","code":".main"},{"type":"text","text":" if you want to merge all other forks into "},{"type":"codeVoice","code":".main"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"This particular overload handles merges of  ","type":"text"},{"type":"codeVoice","code":"Mergeable"},{"type":"text","text":" resources."}],"kind":"org.swift.docc.kind.instanceMethod","path":"\/documentation\/forked\/forkedresource\/mergeallforks(into:)-3bh6r"},{"kind":"org.swift.docc.kind.collectionGroup","path":"\/documentation\/forked\/version\/equatable-implementations","availableLanguages":["swift"],"title":"Equatable Implementations","language":"swift","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Version\/Equatable-Implementations","taskGroups":[{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/Version\/!=(_:_:)"],"title":"Operators"}]},{"title":"...(_:)","kind":"org.swift.docc.kind.operator","path":"\/documentation\/forked\/version\/'...(_:)-3z0z5","abstract":[{"type":"text","text":"Returns a partial range extending upward from a lower bound."}],"language":"swift","availableLanguages":["swift"],"taskGroups":[],"usr":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ::SYNTHESIZED::s:6Forked7VersionV","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"...","kind":"identifier"},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"text":"minimum","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s16PartialRangeFromV","text":"PartialRangeFrom","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Version\/...(_:)-3z0z5"},{"availableLanguages":["swift"],"taskGroups":[],"title":"mostRecentCommit(of:)","kind":"org.swift.docc.kind.instanceMethod","abstract":[{"text":"Returns the most recent (current) commit of the ","type":"text"},{"code":"Fork","type":"codeVoice"},{"text":".","type":"text"}],"path":"\/documentation\/forked\/forkedresource\/mostrecentcommit(of:)","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/mostRecentCommit(of:)","language":"swift","usr":"s:6Forked0A8ResourceC16mostRecentCommit2ofAA0E0Vy0B0QzGAA4ForkV_tKF","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"mostRecentCommit"},{"text":"(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"fork","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Fork","kind":"typeIdentifier","preciseIdentifier":"s:6Forked4ForkV"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:6Forked6CommitV","text":"Commit","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"ForkedResource","preciseIdentifier":"s:6Forked0A8ResourceC"},{"text":"<","kind":"text"},{"text":"RepositoryType","kind":"typeIdentifier"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"ResourceType"},{"kind":"text","text":">"}]},{"kind":"org.swift.docc.kind.collectionGroup","path":"\/documentation\/forked\/swift\/optional\/identifiable-implementations","taskGroups":[{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/Swift\/Optional\/id"],"title":"Instance Properties"}],"availableLanguages":["swift"],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Swift\/Optional\/Identifiable-Implementations","language":"swift","title":"Identifiable Implementations"},{"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Repository\/versions(storedIn:)","kind":"org.swift.docc.kind.instanceMethod","title":"versions(storedIn:)","path":"\/documentation\/forked\/repository\/versions(storedin:)","availableLanguages":["swift"],"abstract":[{"text":"All versions stored in a given fork. There will usually be 0, 1 or 2,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"though there may be temporaily more."},{"type":"text","text":" "},{"type":"text","text":"Note that this is just the versions stored for the fork. The interpretation"},{"text":" ","type":"text"},{"text":"of the stored versions is handled by the ","type":"text"},{"type":"codeVoice","code":"ForkedResource"},{"type":"text","text":". For example,"},{"type":"text","text":" "},{"text":"if there are no versions in the fork of the repo, the ","type":"text"},{"code":"ForkedResource","type":"codeVoice"},{"text":" ","type":"text"},{"text":"will assume it is at the same version as stored in the main fork.","type":"text"}],"language":"swift","taskGroups":[],"usr":"s:6Forked10RepositoryP8versions8storedInShyAA7VersionVGAA4ForkV_tKF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"versions","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"storedIn"},{"text":" ","kind":"text"},{"text":"fork","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6Forked4ForkV","text":"Fork","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"text":"<","kind":"text"},{"text":"Version","kind":"typeIdentifier","preciseIdentifier":"s:6Forked7VersionV"},{"kind":"text","text":">"}]},{"usr":"s:6Forked13CommitContentOAASeRzSERzrlE4fromACyxGs7Decoder_p_tKcfc","kind":"org.swift.docc.kind.initializer","title":"init(from:)","language":"swift","availableLanguages":["swift"],"fragments":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"decoder"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7DecoderP","text":"Decoder","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"path":"\/documentation\/forked\/commitcontent\/init(from:)","taskGroups":[],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/CommitContent\/init(from:)"},{"abstract":[{"type":"text","text":"The action taken when two forks are merged."}],"availableLanguages":["swift"],"title":"MergeAction","kind":"org.swift.docc.kind.enumeration","usr":"s:6Forked11MergeActionO","path":"\/documentation\/forked\/mergeaction","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"MergeAction"}],"taskGroups":[{"title":"Enumeration Cases","identifiers":["doc:\/\/Forked\/documentation\/Forked\/MergeAction\/fastForward","doc:\/\/Forked\/documentation\/Forked\/MergeAction\/none","doc:\/\/Forked\/documentation\/Forked\/MergeAction\/resolveConflict"]},{"title":"Default Implementations","identifiers":["doc:\/\/Forked\/documentation\/Forked\/MergeAction\/Equatable-Implementations"]}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/MergeAction","language":"swift"},{"path":"\/documentation\/forked\/commit\/hash(into:)","kind":"org.swift.docc.kind.instanceMethod","title":"hash(into:)","usr":"s:6Forked6CommitV4hash4intoys6HasherVz_tF","taskGroups":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"into"},{"kind":"text","text":" "},{"text":"hasher","kind":"internalParam"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s6HasherV","text":"Hasher","kind":"typeIdentifier"},{"text":")","kind":"text"}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Commit\/hash(into:)","language":"swift","availableLanguages":["swift"]},{"language":"swift","usr":"s:6Forked14FileRepositoryC","kind":"org.swift.docc.kind.class","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/FileRepository","taskGroups":[{"title":"Initializers","identifiers":["doc:\/\/Forked\/documentation\/Forked\/FileRepository\/init(rootDirectory:)"]},{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/FileRepository\/forks"],"title":"Instance Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/Forked\/documentation\/Forked\/FileRepository\/content(of:at:)","doc:\/\/Forked\/documentation\/Forked\/FileRepository\/create(_:withInitialCommit:)","doc:\/\/Forked\/documentation\/Forked\/FileRepository\/delete(_:)","doc:\/\/Forked\/documentation\/Forked\/FileRepository\/removeCommit(at:from:)","doc:\/\/Forked\/documentation\/Forked\/FileRepository\/store(_:in:)","doc:\/\/Forked\/documentation\/Forked\/FileRepository\/versions(storedIn:)"]}],"abstract":[{"type":"text","text":"A FileRepository stores its contents in a directory structure on disk."},{"type":"text","text":" "},{"type":"text","text":"Each fork corresponds to a subdirectory, and files are stored within those subdirectories."}],"path":"\/documentation\/forked\/filerepository","title":"FileRepository","availableLanguages":["swift"],"fragments":[{"kind":"keyword","text":"final"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"FileRepository","kind":"identifier"}]},{"language":"swift","taskGroups":[],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/persist()-91lo2","path":"\/documentation\/forked\/atomicrepository\/persist()-91lo2","kind":"org.swift.docc.kind.instanceMethod","title":"persist()","usr":"s:6Forked10PersistentPAAE7persistyyKF::SYNTHESIZED::s:6Forked16AtomicRepositoryC","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"persist"},{"kind":"text","text":"() "},{"text":"throws","kind":"keyword"}],"availableLanguages":["swift"]},{"kind":"org.swift.docc.kind.operator","title":"<=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"<=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"internalParam","text":"lhs"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"usr":"s:SLsE2leoiySbx_xtFZ::SYNTHESIZED::s:6Forked7VersionV","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Version\/_=(_:_:)-8ckx5","path":"\/documentation\/forked\/version\/_=(_:_:)-8ckx5","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether the value of the first argument"},{"type":"text","text":" "},{"type":"text","text":"is less than or equal to that of the second argument."}],"language":"swift","availableLanguages":["swift"],"taskGroups":[]},{"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/forks","language":"swift","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"forks"},{"text":": [","kind":"text"},{"text":"Fork","kind":"typeIdentifier","preciseIdentifier":"s:6Forked4ForkV"},{"kind":"text","text":"] { "},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"path":"\/documentation\/forked\/forkedresource\/forks","kind":"org.swift.docc.kind.instanceProperty","title":"forks","availableLanguages":["swift"],"taskGroups":[],"usr":"s:6Forked0A8ResourceC5forksSayAA4ForkVGvp","abstract":[{"type":"text","text":"All forks in the resource, including the main fork, in no particular order"}]},{"language":"swift","usr":"s:6Forked5ErrorO31attemptToReplaceExistingVersionyAcA0G0V_AA4ForkVtcACmF","kind":"org.swift.docc.kind.enumerationCase","taskGroups":[],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Error\/attemptToReplaceExistingVersion(_:_:)","availableLanguages":["swift"],"title":"Error.attemptToReplaceExistingVersion(_:_:)","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"attemptToReplaceExistingVersion","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:6Forked7VersionV","text":"Version","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Fork","preciseIdentifier":"s:6Forked4ForkV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"path":"\/documentation\/forked\/error\/attempttoreplaceexistingversion(_:_:)"},{"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkChange\/fork","usr":"s:6Forked10ForkChangeV4forkAA0B0Vvp","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"fork"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6Forked4ForkV","kind":"typeIdentifier","text":"Fork"}],"availableLanguages":["swift"],"path":"\/documentation\/forked\/forkchange\/fork","kind":"org.swift.docc.kind.instanceProperty","taskGroups":[],"language":"swift","title":"fork"},{"usr":"s:6Forked7VersionV5counts6UInt64Vvp","path":"\/documentation\/forked\/version\/count","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"count","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt64V","text":"UInt64"}],"title":"count","availableLanguages":["swift"],"language":"swift","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Version\/count","taskGroups":[],"kind":"org.swift.docc.kind.instanceProperty"},{"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Error\/unexpectedError(_:)","title":"Error.unexpectedError(_:)","kind":"org.swift.docc.kind.enumerationCase","availableLanguages":["swift"],"taskGroups":[],"usr":"s:6Forked5ErrorO010unexpectedB0yACsAB_pcACmF","path":"\/documentation\/forked\/error\/unexpectederror(_:)","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"unexpectedError","kind":"identifier"},{"kind":"text","text":"(any "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"text":")","kind":"text"}],"language":"swift"},{"availableLanguages":["swift"],"language":"swift","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isProtected"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}],"title":"isProtected","taskGroups":[],"abstract":[{"type":"text","text":"Whether the fork is protected from deletion. Only"},{"type":"text","text":" "},{"text":"the main fork has this protection for now.","type":"text"}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Fork\/isProtected","usr":"s:6Forked4ForkV11isProtectedSbvp","kind":"org.swift.docc.kind.instanceProperty","path":"\/documentation\/forked\/fork\/isprotected"},{"language":"swift","availableLanguages":["swift"],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Commit","path":"\/documentation\/forked\/commit","kind":"org.swift.docc.kind.structure","title":"Commit","taskGroups":[{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/Commit\/==(_:_:)"],"title":"Operators"},{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/Commit\/content","doc:\/\/Forked\/documentation\/Forked\/Commit\/version"],"title":"Instance Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/Forked\/documentation\/Forked\/Commit\/hash(into:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/Forked\/documentation\/Forked\/Commit\/Decodable-Implementations","doc:\/\/Forked\/documentation\/Forked\/Commit\/Equatable-Implementations"]}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Commit","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Resource"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Resource"},{"text":" : ","kind":"text"},{"text":"Equatable","preciseIdentifier":"s:SQ","kind":"typeIdentifier"}],"usr":"s:6Forked6CommitV","abstract":[{"type":"text","text":"A commit comprises of content, which is usually a value of the stored resource,"},{"text":" ","type":"text"},{"text":"together with a ","type":"text"},{"type":"codeVoice","code":"Version"},{"type":"text","text":"."}]},{"title":"salvaging(from:)","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Mergeable\/salvaging(from:)-3p5f","usr":"s:6Forked9MergeablePAAE9salvaging4fromxx_tKF","availableLanguages":["swift"],"kind":"org.swift.docc.kind.instanceMethod","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"salvaging","kind":"identifier"},{"kind":"text","text":"("},{"text":"from","kind":"externalParam"},{"kind":"text","text":" "},{"text":"other","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Self","kind":"typeIdentifier"}],"language":"swift","taskGroups":[],"path":"\/documentation\/forked\/mergeable\/salvaging(from:)-3p5f"},{"title":"load()","availableLanguages":["swift"],"kind":"org.swift.docc.kind.instanceMethod","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Persistent\/load()","language":"swift","path":"\/documentation\/forked\/persistent\/load()","usr":"s:6Forked10PersistentP4loadyyKF","abstract":[{"text":"Loads repo from storage if this is a persistable repo.","type":"text"},{"text":" ","type":"text"},{"text":"Do not call this unless you are using a type that is persistable, otherwise you","type":"text"},{"type":"text","text":" "},{"type":"text","text":"will get a fatalError."}],"taskGroups":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"load","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}]},{"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/CommitContent\/!=(_:_:)","path":"\/documentation\/forked\/commitcontent\/!=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"org.swift.docc.kind.operator","title":"!=(_:_:)","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"language":"swift","availableLanguages":["swift"],"taskGroups":[],"usr":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:6Forked13CommitContentO"},{"usr":"s:Sq6Forkeds12IdentifiableRzlE2id2IDQzSgvp","availableLanguages":["swift"],"title":"id","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"id"},{"kind":"text","text":": "},{"text":"Wrapped","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12IdentifiableP2IDQa","text":"ID"},{"text":"? { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"taskGroups":[],"kind":"org.swift.docc.kind.instanceProperty","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Swift\/Optional\/id","language":"swift","path":"\/documentation\/forked\/swift\/optional\/id"},{"title":"store(_:in:)","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/FileRepository\/store(_:in:)","taskGroups":[],"usr":"s:6Forked14FileRepositoryC5store_2inyAA6CommitVy10Foundation4DataVG_AA4ForkVtKF","path":"\/documentation\/forked\/filerepository\/store(_:in:)","availableLanguages":["swift"],"language":"swift","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"store","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"commit","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Commit","kind":"typeIdentifier","preciseIdentifier":"s:6Forked6CommitV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"in"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"fork"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6Forked4ForkV","text":"Fork","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"kind":"org.swift.docc.kind.instanceMethod"},{"usr":"s:6Forked10RepositoryP5forksSayAA4ForkVGvp","path":"\/documentation\/forked\/repository\/forks","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"forks"},{"text":": [","kind":"text"},{"text":"Fork","preciseIdentifier":"s:6Forked4ForkV","kind":"typeIdentifier"},{"text":"] { ","kind":"text"},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Repository\/forks","kind":"org.swift.docc.kind.instanceProperty","abstract":[{"text":"The forks in the repository, including .main, in no particular order.","type":"text"}],"taskGroups":[],"language":"swift","title":"forks","availableLanguages":["swift"]},{"title":"currentModelVersion","usr":"s:6Forked14VersionedModelP07currentC7VersionSivpZ","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"currentModelVersion"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"availableLanguages":["swift"],"abstract":[{"text":"The current version of the model for this resource (struct).","type":"text"},{"type":"text","text":" "},{"type":"text","text":"It is generally best to start the current version at 0, and increase it by"},{"text":" ","type":"text"},{"type":"text","text":"one whenever a change is made to the properties of a struct."},{"type":"text","text":" "},{"text":"If you have not being using ","type":"text"},{"type":"codeVoice","code":"VersionedModel"},{"text":", and add","type":"text"},{"type":"text","text":" "},{"type":"text","text":"sync, you would use "},{"code":"0","type":"codeVoice"},{"text":" if your model is unchanged, and ","type":"text"},{"code":"1","type":"codeVoice"},{"text":" if","type":"text"},{"text":" ","type":"text"},{"text":"it changed from the un-synced version. The old un-synced model","type":"text"},{"type":"text","text":" "},{"text":"will get a ","type":"text"},{"type":"codeVoice","code":"modelVersion"},{"text":" of ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":", which is treated as ","type":"text"},{"code":"0","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"Using ","type":"text"},{"type":"codeVoice","code":"1"},{"type":"text","text":" will cause "},{"code":"Forked","type":"codeVoice"},{"type":"text","text":" to avoid merging the newer model"},{"text":" ","type":"text"},{"type":"text","text":"into the old one."}],"taskGroups":[],"path":"\/documentation\/forked\/versionedmodel\/currentmodelversion","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/VersionedModel\/currentModelVersion","language":"swift","kind":"org.swift.docc.kind.typeProperty"},{"path":"\/documentation\/forked\/commitcontent","language":"swift","kind":"org.swift.docc.kind.enumeration","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/CommitContent","abstract":[{"type":"text","text":"A wrapper to hold the resource. This allows for the resource to be"},{"type":"text","text":" "},{"type":"text","text":"absent in a fork, similar to using "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}],"title":"CommitContent","availableLanguages":["swift"],"taskGroups":[{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/CommitContent\/none","doc:\/\/Forked\/documentation\/Forked\/CommitContent\/resource(_:)"],"title":"Enumeration Cases"},{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/CommitContent\/resource"],"title":"Instance Properties"},{"title":"Default Implementations","identifiers":["doc:\/\/Forked\/documentation\/Forked\/CommitContent\/Decodable-Implementations","doc:\/\/Forked\/documentation\/Forked\/CommitContent\/Equatable-Implementations"]}],"usr":"s:6Forked13CommitContentO","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"CommitContent","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Resource","kind":"genericParameter"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Resource"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Equatable","preciseIdentifier":"s:SQ"}]},{"title":"content(of:at:)","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/FileRepository\/content(of:at:)","language":"swift","kind":"org.swift.docc.kind.instanceMethod","availableLanguages":["swift"],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"content","kind":"identifier"},{"text":"(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"fork"},{"kind":"text","text":": "},{"text":"Fork","kind":"typeIdentifier","preciseIdentifier":"s:6Forked4ForkV"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"kind":"text","text":" "},{"text":"version","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Version","kind":"typeIdentifier","preciseIdentifier":"s:6Forked7VersionV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"CommitContent","kind":"typeIdentifier","preciseIdentifier":"s:6Forked13CommitContentO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"},{"text":">","kind":"text"}],"path":"\/documentation\/forked\/filerepository\/content(of:at:)","taskGroups":[],"usr":"s:6Forked14FileRepositoryC7content2of2atAA13CommitContentOy10Foundation4DataVGAA4ForkV_AA7VersionVtKF"},{"usr":"s:6Forked14VersionedModelP","language":"swift","kind":"org.swift.docc.kind.protocol","availableLanguages":["swift"],"path":"\/documentation\/forked\/versionedmodel","abstract":[{"type":"text","text":"Protocol to track the model version of a "},{"type":"codeVoice","code":"ForkedResource"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"This isn’t very important on a single device, but if syncing between"},{"text":" ","type":"text"},{"type":"text","text":"devices, it is important that a device that doesn’t yet have the"},{"text":" ","type":"text"},{"text":"latest version does not try to import data from that version.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"If it does, it won’t know how to handle it, and may lose data."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"VersionedModel","kind":"identifier"}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/VersionedModel","taskGroups":[{"title":"Instance Properties","identifiers":["doc:\/\/Forked\/documentation\/Forked\/VersionedModel\/canLoadModelVersion","doc:\/\/Forked\/documentation\/Forked\/VersionedModel\/modelVersion"]},{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/VersionedModel\/currentModelVersion"],"title":"Type Properties"}],"title":"VersionedModel"},{"kind":"org.swift.docc.kind.instanceProperty","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Commit\/version","language":"swift","abstract":[{"type":"text","text":"The version when the copy of the resource was committed."}],"path":"\/documentation\/forked\/commit\/version","availableLanguages":["swift"],"taskGroups":[],"usr":"s:6Forked6CommitV7versionAA7VersionVvp","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"version"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6Forked7VersionV","text":"Version","kind":"typeIdentifier"}],"title":"version"},{"availableLanguages":["swift"],"kind":"org.swift.docc.kind.initializer","taskGroups":[],"abstract":[{"text":"Convenience for creating simple forked resource for in-memory use.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Create an in-memory ForkedResource with the given forks, and initial value."},{"text":" ","type":"text"},{"type":"text","text":"The initial value is optional. If not provided, the main fork will be empty."},{"type":"text","text":" "},{"type":"text","text":"The setup ensures that all forks are synced up with the initial value, which is different to"},{"type":"text","text":" "},{"type":"text","text":"the default behavior when you first create a ForkedResource. (In a forked resource,"},{"type":"text","text":" "},{"type":"text","text":"a new fork is initially empty, and may not be in sync with the main fork until merged.)"}],"language":"swift","title":"init(initialValue:forks:)","usr":"s:6Forked0A8ResourceC12initialValue5forksACyAA16AtomicRepositoryCyqd__GGqd__Sg_SayAA4ForkVGtcAHRszSQRd__s8SendableRd__lufc","fragments":[{"kind":"keyword","text":"convenience"},{"text":" ","kind":"text"},{"kind":"keyword","text":"init"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"initialValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"forks"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Forked4ForkV","text":"Fork"},{"kind":"text","text":"]) "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RepositoryType","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"AtomicRepository","kind":"typeIdentifier","preciseIdentifier":"s:6Forked16AtomicRepositoryC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"R"},{"text":" : ","kind":"text"},{"text":"Equatable","preciseIdentifier":"s:SQ","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/init(initialValue:forks:)","path":"\/documentation\/forked\/forkedresource\/init(initialvalue:forks:)"},{"path":"\/documentation\/forked\/forkedresource\/content(of:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"content","kind":"identifier"},{"kind":"text","text":"("},{"text":"of","kind":"externalParam"},{"kind":"text","text":" "},{"text":"fork","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Fork","kind":"typeIdentifier","preciseIdentifier":"s:6Forked4ForkV"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"CommitContent","kind":"typeIdentifier","preciseIdentifier":"s:6Forked13CommitContentO"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:6Forked0A8ResourceC","text":"ForkedResource","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"RepositoryType","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"ResourceType","kind":"typeIdentifier"},{"text":">","kind":"text"}],"language":"swift","availableLanguages":["swift"],"usr":"s:6Forked0A8ResourceC7content2ofAA13CommitContentOy0B0QzGAA4ForkV_tKF","abstract":[{"type":"text","text":"Returns the current content of the fork"}],"title":"content(of:)","taskGroups":[],"kind":"org.swift.docc.kind.instanceMethod","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/content(of:)"},{"path":"\/documentation\/forked\/forkedresource\/mergefrommain(into:)-5tynb","title":"mergeFromMain(into:)","language":"swift","availableLanguages":["swift"],"abstract":[{"type":"text","text":"Merges from the main fork into another fork. May perform a 3-way merge."},{"type":"text","text":" "},{"type":"text","text":"A "},{"type":"codeVoice","code":"MergeAction"},{"text":" is returned to indicate the type of merge that took place.","type":"text"},{"type":"text","text":" "},{"text":"After this operation, the fork may be updated, with the version of the main fork unchanged.","type":"text"},{"type":"text","text":" "},{"text":"This particular overload handles merges of non-","type":"text"},{"code":"Mergeable","type":"codeVoice"},{"type":"text","text":" resources."}],"usr":"s:6Forked0A8ResourceC13mergeFromMain4intoAA11MergeActionOAA4ForkV_tKF","fragments":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"mergeFromMain"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"toFork"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Fork","preciseIdentifier":"s:6Forked4ForkV"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"MergeAction","preciseIdentifier":"s:6Forked11MergeActionO"}],"taskGroups":[],"kind":"org.swift.docc.kind.instanceMethod","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/mergeFromMain(into:)-5tynb"},{"kind":"org.swift.docc.kind.instanceMethod","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/load()-520e","usr":"s:6Forked10PersistentPAAE4loadyyKF::SYNTHESIZED::s:6Forked16AtomicRepositoryC","title":"load()","language":"swift","path":"\/documentation\/forked\/atomicrepository\/load()-520e","taskGroups":[],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"load"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"availableLanguages":["swift"]},{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"mostRecentVersion"},{"kind":"text","text":"("},{"text":"of","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"fork","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6Forked4ForkV","text":"Fork","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Version","preciseIdentifier":"s:6Forked7VersionV","kind":"typeIdentifier"}],"taskGroups":[],"usr":"s:6Forked0A8ResourceC17mostRecentVersion2ofAA0E0VAA4ForkV_tKF","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/mostRecentVersion(of:)","title":"mostRecentVersion(of:)","path":"\/documentation\/forked\/forkedresource\/mostrecentversion(of:)","abstract":[{"type":"text","text":"Returns the most recent (current) version of the "},{"type":"codeVoice","code":"Fork"},{"type":"text","text":"."}],"availableLanguages":["swift"],"kind":"org.swift.docc.kind.instanceMethod","language":"swift"},{"availableLanguages":["swift"],"path":"\/documentation\/forked\/forkedapiversion","language":"swift","taskGroups":[],"title":"forkedAPIVersion","usr":"s:6Forked16forkedAPIVersionSivp","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/forkedAPIVersion","fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"forkedAPIVersion"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"text":"The version of the Forked API. Older versions are incapable or understanding or","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"merging with the newer versions. (Newer versions should be capable of importing"},{"text":" ","type":"text"},{"type":"text","text":"the older ones.)"}],"kind":"org.swift.docc.kind.globalVariable"},{"title":"Comparable Implementations","language":"swift","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Version\/Comparable-Implementations","kind":"org.swift.docc.kind.collectionGroup","path":"\/documentation\/forked\/version\/comparable-implementations","taskGroups":[{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/Version\/...(_:)-1nziq","doc:\/\/Forked\/documentation\/Forked\/Version\/...(_:)-3z0z5","doc:\/\/Forked\/documentation\/Forked\/Version\/...(_:_:)","doc:\/\/Forked\/documentation\/Forked\/Version\/.._(_:)","doc:\/\/Forked\/documentation\/Forked\/Version\/.._(_:_:)","doc:\/\/Forked\/documentation\/Forked\/Version\/_(_:_:)-2167f","doc:\/\/Forked\/documentation\/Forked\/Version\/_=(_:_:)-8ckx5","doc:\/\/Forked\/documentation\/Forked\/Version\/_=(_:_:)-9tu3k"],"title":"Operators"}],"availableLanguages":["swift"]},{"path":"\/documentation\/forked\/mergeaction\/resolveconflict","title":"MergeAction.resolveConflict","usr":"s:6Forked11MergeActionO15resolveConflictyA2CmF","kind":"org.swift.docc.kind.enumerationCase","language":"swift","taskGroups":[],"fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"resolveConflict","kind":"identifier"}],"abstract":[{"type":"text","text":"The two forks had both changed since the common ancestor version."},{"text":" ","type":"text"},{"type":"text","text":"They were merged to produce a new value for the destination fork."}],"availableLanguages":["swift"],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/MergeAction\/resolveConflict"},{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"removeCommit","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"at"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"version"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6Forked7VersionV","text":"Version","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"from"},{"kind":"text","text":" "},{"text":"fork","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Fork","kind":"typeIdentifier","preciseIdentifier":"s:6Forked4ForkV"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"language":"swift","availableLanguages":["swift"],"usr":"s:6Forked16AtomicRepositoryC12removeCommit2at4fromyAA7VersionV_AA4ForkVtKF","title":"removeCommit(at:from:)","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/removeCommit(at:from:)","path":"\/documentation\/forked\/atomicrepository\/removecommit(at:from:)","kind":"org.swift.docc.kind.instanceMethod","taskGroups":[]},{"kind":"org.swift.docc.kind.collectionGroup","language":"swift","availableLanguages":["swift"],"path":"\/documentation\/forked\/commit\/decodable-implementations","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Commit\/Decodable-Implementations","title":"Decodable Implementations","taskGroups":[{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/Commit\/init(from:)"],"title":"Initializers"}]},{"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Error\/localizedDescription","usr":"s:s5ErrorP10FoundationE20localizedDescriptionSSvp::SYNTHESIZED::s:6Forked5ErrorO","kind":"org.swift.docc.kind.instanceProperty","availableLanguages":["swift"],"path":"\/documentation\/forked\/error\/localizeddescription","language":"swift","platforms":[{"name":"iOS","introducedAt":"8.0","unavailable":false,"beta":false,"deprecated":false},{"introducedAt":"10.10","deprecated":false,"beta":false,"name":"macOS","unavailable":false},{"introducedAt":"9.0","name":"tvOS","unavailable":false,"beta":false,"deprecated":false},{"beta":false,"deprecated":false,"name":"watchOS","unavailable":false,"introducedAt":"2.0"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"localizedDescription","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"abstract":[{"text":"Retrieve the localized description for this error.","type":"text"}],"taskGroups":[],"title":"localizedDescription"},{"usr":"s:6Forked5ErrorO33attemptToAccessNonExistentVersionyAcA0H0V_AA4ForkVtcACmF","kind":"org.swift.docc.kind.enumerationCase","path":"\/documentation\/forked\/error\/attempttoaccessnonexistentversion(_:_:)","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Error\/attemptToAccessNonExistentVersion(_:_:)","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"attemptToAccessNonExistentVersion"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Version","preciseIdentifier":"s:6Forked7VersionV"},{"kind":"text","text":", "},{"preciseIdentifier":"s:6Forked4ForkV","kind":"typeIdentifier","text":"Fork"},{"kind":"text","text":")"}],"title":"Error.attemptToAccessNonExistentVersion(_:_:)","availableLanguages":["swift"],"taskGroups":[],"language":"swift"},{"title":"persist()","taskGroups":[],"path":"\/documentation\/forked\/persistent\/persist()-7xbbi","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Persistent\/persist()-7xbbi","usr":"s:6Forked10PersistentPAAE7persistyyKF","language":"swift","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"persist","kind":"identifier"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"throws"}],"kind":"org.swift.docc.kind.instanceMethod","availableLanguages":["swift"]},{"usr":"s:6Forked16AtomicRepositoryC14managedFileURLACyxG10Foundation0F0V_tKcSeRzSERzrlufc","path":"\/documentation\/forked\/atomicrepository\/init(managedfileurl:)","kind":"org.swift.docc.kind.initializer","availableLanguages":["swift"],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/init(managedFileURL:)","language":"swift","fragments":[{"kind":"keyword","text":"init"},{"text":"(","kind":"text"},{"text":"managedFileURL","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Resource","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Decodable","preciseIdentifier":"s:Se"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Resource"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SE","text":"Encodable","kind":"typeIdentifier"}],"title":"init(managedFileURL:)","taskGroups":[],"abstract":[{"text":"Persist using Codable","type":"text"}]},{"usr":"s:6Forked16AtomicRepositoryC7content2of2atAA13CommitContentOyxGAA4ForkV_AA7VersionVtKF","path":"\/documentation\/forked\/atomicrepository\/content(of:at:)","availableLanguages":["swift"],"taskGroups":[],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/content(of:at:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"content","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"of"},{"kind":"text","text":" "},{"text":"fork","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Fork","kind":"typeIdentifier","preciseIdentifier":"s:6Forked4ForkV"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"kind":"text","text":" "},{"text":"version","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Version","preciseIdentifier":"s:6Forked7VersionV"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"CommitContent","kind":"typeIdentifier","preciseIdentifier":"s:6Forked13CommitContentO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Resource"},{"text":">","kind":"text"}],"language":"swift","title":"content(of:at:)","kind":"org.swift.docc.kind.instanceMethod"},{"usr":"Forked","taskGroups":[{"title":"Essentials","identifiers":["doc:\/\/Forked\/documentation\/Forked\/GettingStarted","doc:\/\/Forked\/documentation\/Forked\/ForkedResource","doc:\/\/Forked\/documentation\/Forked\/Mergeable","doc:\/\/Forked\/documentation\/Forked\/Repository"]},{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/QuickFork","doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/update(_:with:)","doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/value(in:)"],"title":"Working with Resources"},{"title":"Merging and Conflict Resolution","identifiers":["doc:\/\/Forked\/documentation\/Forked\/Mergeable"]},{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/GettingStarted","doc:\/\/Forked\/documentation\/Forked\/CloudKitIntegration","doc:\/\/Forked\/documentation\/Forked\/ForkedInnards"],"title":"Articles"},{"title":"Classes","identifiers":["doc:\/\/Forked\/documentation\/Forked\/AtomicRepository","doc:\/\/Forked\/documentation\/Forked\/FileRepository"]},{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/Persistent","doc:\/\/Forked\/documentation\/Forked\/VersionedModel"],"title":"Protocols"},{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/Commit","doc:\/\/Forked\/documentation\/Forked\/Fork","doc:\/\/Forked\/documentation\/Forked\/ForkChange","doc:\/\/Forked\/documentation\/Forked\/Version"],"title":"Structures"},{"title":"Variables","identifiers":["doc:\/\/Forked\/documentation\/Forked\/forkedAPIVersion"]},{"title":"Type Aliases","identifiers":["doc:\/\/Forked\/documentation\/Forked\/ChangeStream"]},{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/CommitContent","doc:\/\/Forked\/documentation\/Forked\/Error","doc:\/\/Forked\/documentation\/Forked\/MergeAction"],"title":"Enumerations"},{"title":"Extended Modules","identifiers":["doc:\/\/Forked\/documentation\/Forked\/Swift"]}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked","title":"Forked","language":"swift","kind":"org.swift.docc.kind.module","path":"\/documentation\/forked","abstract":[{"text":"A framework for handling shared data with confidence in Swift.","type":"text"}],"availableLanguages":["swift"]},{"abstract":[{"type":"text","text":"Whether a fork exists in the "},{"type":"codeVoice","code":"ForkedResource"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"has","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"fork","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6Forked4ForkV","text":"Fork","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/has(_:)","path":"\/documentation\/forked\/forkedresource\/has(_:)","title":"has(_:)","kind":"org.swift.docc.kind.instanceMethod","availableLanguages":["swift"],"usr":"s:6Forked0A8ResourceC3hasySbAA4ForkVF","language":"swift","taskGroups":[]},{"language":"swift","kind":"org.swift.docc.kind.instanceProperty","title":"version","path":"\/documentation\/forked\/forkchange\/version","fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"version","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:6Forked7VersionV","text":"Version"}],"taskGroups":[],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkChange\/version","availableLanguages":["swift"],"usr":"s:6Forked10ForkChangeV7versionAA7VersionVvp"},{"title":"Mergeable Implementations","availableLanguages":["swift"],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Swift\/Optional\/Mergeable-Implementations","path":"\/documentation\/forked\/swift\/optional\/mergeable-implementations","language":"swift","taskGroups":[{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/Swift\/Optional\/merged(withSubordinate:commonAncestor:)","doc:\/\/Forked\/documentation\/Forked\/Swift\/Optional\/salvaging(from:)"],"title":"Instance Methods"}],"kind":"org.swift.docc.kind.collectionGroup"},{"usr":"s:6Forked13CommitContentO8resourceyACyxGxcAEmSQRzlF","availableLanguages":["swift"],"language":"swift","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/CommitContent\/resource(_:)","title":"CommitContent.resource(_:)","path":"\/documentation\/forked\/commitcontent\/resource(_:)","kind":"org.swift.docc.kind.enumerationCase","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"resource","kind":"identifier"},{"kind":"text","text":"("},{"text":"Resource","kind":"typeIdentifier"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"The content contains a value of the resource."}],"taskGroups":[]},{"kind":"org.swift.docc.kind.instanceMethod","language":"swift","abstract":[{"type":"text","text":"Brings main and the other fork to the same version by first merging from"},{"text":" ","type":"text"},{"type":"text","text":"the other fork into main, and then merging from main into the other fork (fast forward)."},{"type":"text","text":" "},{"type":"text","text":"This particular overload handles merges of  "},{"code":"Mergeable","type":"codeVoice"},{"text":" resources.","type":"text"},{"type":"text","text":" "},{"text":"To sync up all forks, just pass all forks to this func, including .main. The main fork is ignored","type":"text"},{"type":"text","text":" "},{"type":"text","text":"when merging."}],"availableLanguages":["swift"],"title":"syncMain(with:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"syncMain","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"forks","kind":"internalParam"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Forked4ForkV","text":"Fork"},{"kind":"text","text":"]) "},{"kind":"keyword","text":"throws"}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/syncMain(with:)-18a6t","taskGroups":[],"path":"\/documentation\/forked\/forkedresource\/syncmain(with:)-18a6t","usr":"s:6Forked0A8ResourceCA2A9Mergeable0B0RpzrlE8syncMain4withySayAA4ForkVG_tKF"},{"path":"\/documentation\/forked\/version\/!=(_:_:)","language":"swift","title":"!=(_:_:)","kind":"org.swift.docc.kind.operator","abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"availableLanguages":["swift"],"taskGroups":[],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Version\/!=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"!=","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"rhs","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"usr":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:6Forked7VersionV"},{"usr":"s:6Forked10RepositoryP7content2of2atAA13CommitContentOy8ResourceQzGAA4ForkV_AA7VersionVtKF","path":"\/documentation\/forked\/repository\/content(of:at:)","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Repository\/content(of:at:)","language":"swift","kind":"org.swift.docc.kind.instanceMethod","title":"content(of:at:)","availableLanguages":["swift"],"taskGroups":[],"abstract":[{"text":"Get the content from the repo with the version passed. If not found,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"it will throw an error."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"content","kind":"identifier"},{"kind":"text","text":"("},{"text":"of","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"fork","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Fork","kind":"typeIdentifier","preciseIdentifier":"s:6Forked4ForkV"},{"kind":"text","text":", "},{"text":"at","kind":"externalParam"},{"kind":"text","text":" "},{"text":"version","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Version","kind":"typeIdentifier","preciseIdentifier":"s:6Forked7VersionV"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:6Forked13CommitContentO","text":"CommitContent","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Resource","preciseIdentifier":"s:6Forked10RepositoryP8ResourceQa"},{"text":">","kind":"text"}]},{"taskGroups":[{"title":"Initializers","identifiers":["doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/init()","doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/init(managedFileURL:)"]},{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/forks"],"title":"Instance Properties"},{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/content(of:at:)","doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/create(_:withInitialCommit:)","doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/delete(_:)","doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/removeCommit(at:from:)","doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/store(_:in:)","doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/versions(storedIn:)"],"title":"Instance Methods"},{"title":"Default Implementations","identifiers":["doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/Decodable-Implementations","doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/Persistent-Implementations"]}],"availableLanguages":["swift"],"language":"swift","kind":"org.swift.docc.kind.class","fragments":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicRepository","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Resource","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Resource"},{"kind":"text","text":" : "},{"text":"Equatable","preciseIdentifier":"s:SQ","kind":"typeIdentifier"}],"path":"\/documentation\/forked\/atomicrepository","abstract":[{"type":"text","text":"An atomic repository is one that gets loaded completely into memory."},{"type":"text","text":" "},{"text":"If the ","type":"text"},{"type":"codeVoice","code":"Resource"},{"text":" it contains conforms to ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":", the ","type":"text"},{"code":"AtomicRepository","type":"codeVoice"},{"text":" is","type":"text"},{"type":"text","text":" "},{"text":"also ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":", and can be converted to a serialized form and saved as a file."},{"type":"text","text":" "},{"type":"text","text":"Saving and loading are atomic, that is, the whole repository is loaded from file, and the whole"},{"text":" ","type":"text"},{"text":"file is written to disk.","type":"text"}],"title":"AtomicRepository","usr":"s:6Forked16AtomicRepositoryC","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository"},{"taskGroups":[],"language":"swift","availableLanguages":["swift"],"kind":"org.swift.docc.kind.instanceMethod","title":"mostRecentVersionOfMain()","path":"\/documentation\/forked\/forkedresource\/mostrecentversionofmain()","abstract":[{"type":"text","text":"The most recent (current) version of the main fork."}],"usr":"s:6Forked0A8ResourceC23mostRecentVersionOfMainAA0E0VyKF","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/mostRecentVersionOfMain()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"mostRecentVersionOfMain","kind":"identifier"},{"kind":"text","text":"() "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Version","preciseIdentifier":"s:6Forked7VersionV"}]},{"path":"\/documentation\/forked\/forkchange\/!=(_:_:)","language":"swift","availableLanguages":["swift"],"kind":"org.swift.docc.kind.operator","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkChange\/!=(_:_:)","title":"!=(_:_:)","taskGroups":[],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"!="},{"text":" ","kind":"text"},{"kind":"text","text":"("},{"kind":"internalParam","text":"lhs"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"rhs","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are not equal."}],"usr":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:6Forked10ForkChangeV"},{"kind":"org.swift.docc.kind.instanceMethod","usr":"s:6Forked0A8ResourceCA2A9Mergeable0B0RpzrlE13mergeFromMain4intoAA11MergeActionOAA4ForkV_tKF","path":"\/documentation\/forked\/forkedresource\/mergefrommain(into:)-6o9f","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/mergeFromMain(into:)-6o9f","abstract":[{"text":"Merges from the main fork into another fork. May perform a 3-way merge.","type":"text"},{"type":"text","text":" "},{"text":"A ","type":"text"},{"type":"codeVoice","code":"MergeAction"},{"text":" is returned to indicate the type of merge that took place.","type":"text"},{"type":"text","text":" "},{"text":"After this operation, the fork may be updated, with the version of the main fork unchanged.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This particular overload handles merges of "},{"code":"Mergeable","type":"codeVoice"},{"text":" resources.","type":"text"}],"taskGroups":[],"title":"mergeFromMain(into:)","availableLanguages":["swift"],"language":"swift","fragments":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"mergeFromMain"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"toFork"},{"kind":"text","text":": "},{"text":"Fork","preciseIdentifier":"s:6Forked4ForkV","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:6Forked11MergeActionO","text":"MergeAction","kind":"typeIdentifier"}]},{"language":"swift","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Version","path":"\/documentation\/forked\/version","availableLanguages":["swift"],"usr":"s:6Forked7VersionV","abstract":[{"text":"Used to chronologically order file versions. It is a standard lamport count.","type":"text"}],"taskGroups":[{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/Version\/==(_:_:)","doc:\/\/Forked\/documentation\/Forked\/Version\/_(_:_:)"],"title":"Operators"},{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/Version\/init(from:)"],"title":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/Forked\/documentation\/Forked\/Version\/count","doc:\/\/Forked\/documentation\/Forked\/Version\/timestamp"]},{"title":"Instance Methods","identifiers":["doc:\/\/Forked\/documentation\/Forked\/Version\/hash(into:)","doc:\/\/Forked\/documentation\/Forked\/Version\/next()"]},{"title":"Type Properties","identifiers":["doc:\/\/Forked\/documentation\/Forked\/Version\/initialVersion"]},{"title":"Default Implementations","identifiers":["doc:\/\/Forked\/documentation\/Forked\/Version\/Comparable-Implementations","doc:\/\/Forked\/documentation\/Forked\/Version\/Equatable-Implementations"]}],"title":"Version","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Version"}],"kind":"org.swift.docc.kind.structure"},{"language":"swift","title":"restart(_:with:)","availableLanguages":["swift"],"path":"\/documentation\/forked\/forkedresource\/restart(_:with:)","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/restart(_:with:)","abstract":[{"type":"text","text":"Update the contents of a fork with a new resource value. Will create a commit, and return the "},{"type":"codeVoice","code":"Version"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"The difference between a restart and an update, is that the resource passed is assumed to be the common","type":"text"},{"text":" ","type":"text"},{"text":"ancestor of the fork with .main. Sometimes you can’t achieve something through merging, and this gives","type":"text"},{"type":"text","text":" "},{"type":"text","text":"an override. In general, it should not be needed much, but is handy when in some instances."},{"text":" ","type":"text"},{"type":"text","text":"Only use this if you know that the value of the resource precedes the value in .main, such that it"},{"type":"text","text":" "},{"text":"is eligble to be a common ancestor. If the value in .main is actually older, doing this will undo any changes in .main.","type":"text"},{"type":"text","text":" "},{"text":"You can’t restart the .main fork.","type":"text"}],"kind":"org.swift.docc.kind.instanceMethod","taskGroups":[],"usr":"s:6Forked0A8ResourceC7restart_4withAA7VersionVAA4ForkV_0B0QztKF","fragments":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"restart"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"fork","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Forked4ForkV","text":"Fork"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"with"},{"text":" ","kind":"text"},{"text":"resource","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6Forked0A8ResourceC","text":"ForkedResource","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"RepositoryType"},{"text":">.","kind":"text"},{"text":"ResourceType","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:6Forked7VersionV","text":"Version","kind":"typeIdentifier"}]},{"usr":"s:Sq6ForkedAA9MergeableRzlE6merged15withSubordinate14commonAncestorxSgAF_AFtKF","availableLanguages":["swift"],"taskGroups":[],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Swift\/Optional\/merged(withSubordinate:commonAncestor:)","kind":"org.swift.docc.kind.instanceMethod","language":"swift","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"merged","kind":"identifier"},{"text":"(","kind":"text"},{"text":"withSubordinate","kind":"externalParam"},{"kind":"text","text":" "},{"text":"other","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Optional","preciseIdentifier":"s:Sq"},{"text":"<","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"commonAncestor","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Optional","kind":"typeIdentifier","preciseIdentifier":"s:Sq"},{"text":"<","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sq","text":"Optional","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Wrapped","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":"merged(withSubordinate:commonAncestor:)","path":"\/documentation\/forked\/swift\/optional\/merged(withsubordinate:commonancestor:)"},{"taskGroups":[],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/removeContent(from:)","kind":"org.swift.docc.kind.instanceMethod","fragments":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"removeContent"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":" "},{"text":"fork","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Fork","kind":"typeIdentifier","preciseIdentifier":"s:6Forked4ForkV"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Version","kind":"typeIdentifier","preciseIdentifier":"s:6Forked7VersionV"}],"usr":"s:6Forked0A8ResourceC13removeContent4fromAA7VersionVAA4ForkV_tKF","title":"removeContent(from:)","language":"swift","abstract":[{"type":"text","text":"Adds a new commit with content "},{"code":".none","type":"codeVoice"},{"text":". This is like setting the content to ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this does not remove the fork, and the fork does still have commits. However, the value of the"},{"type":"text","text":" "},{"text":"most recent commit will be ","type":"text"},{"code":".none","type":"codeVoice"},{"text":", to indicate the absence of a resource.","type":"text"},{"text":" ","type":"text"},{"text":"(This construction is sometimes referred to as a “tombstone”. It is a commit that indicates","type":"text"},{"type":"text","text":" "},{"text":"that something has been removed.)","type":"text"}],"path":"\/documentation\/forked\/forkedresource\/removecontent(from:)","availableLanguages":["swift"]},{"taskGroups":[{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/Mergeable\/merged(withSubordinate:commonAncestor:)","doc:\/\/Forked\/documentation\/Forked\/Mergeable\/salvaging(from:)"],"title":"Instance Methods"}],"title":"Mergeable","usr":"s:6Forked9MergeableP","language":"swift","path":"\/documentation\/forked\/mergeable","kind":"org.swift.docc.kind.protocol","abstract":[{"type":"text","text":"Any type conforming to this can be used in a 3-way merge"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Mergeable"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:SQ","text":"Equatable","kind":"typeIdentifier"}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Mergeable","availableLanguages":["swift"]},{"usr":"s:6Forked9QuickForka","path":"\/documentation\/forked\/quickfork","language":"swift","taskGroups":[],"kind":"org.swift.docc.kind.typeAlias","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"QuickFork","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":"> = ","kind":"text"},{"text":"ForkedResource","kind":"typeIdentifier","preciseIdentifier":"s:6Forked0A8ResourceC"},{"text":"<","kind":"text"},{"text":"AtomicRepository","kind":"typeIdentifier","preciseIdentifier":"s:6Forked16AtomicRepositoryC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Equatable","preciseIdentifier":"s:SQ","kind":"typeIdentifier"}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/QuickFork","availableLanguages":["swift"],"title":"QuickFork"},{"kind":"org.swift.docc.kind.instanceMethod","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"persist"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/persist()","path":"\/documentation\/forked\/atomicrepository\/persist()","availableLanguages":["swift"],"taskGroups":[],"language":"swift","title":"persist()","usr":"s:6Forked16AtomicRepositoryCAASeRzSERzrlE7persistyyKF"},{"path":"\/documentation\/forked\/cloudkitintegration","title":"CloudKit Integration Guide","kind":"org.swift.docc.kind.article","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/CloudKitIntegration","abstract":[{"type":"text","text":"Learn how to use ForkedCloudKit to sync your data across devices."}],"availableLanguages":["swift"],"taskGroups":[],"language":"swift"},{"kind":"org.swift.docc.kind.instanceProperty","language":"swift","path":"\/documentation\/forked\/forkchange\/mergingfork","title":"mergingFork","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"mergingFork"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Fork","preciseIdentifier":"s:6Forked4ForkV"},{"kind":"text","text":"?"}],"availableLanguages":["swift"],"taskGroups":[],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkChange\/mergingFork","usr":"s:6Forked10ForkChangeV07mergingB0AA0B0VSgvp"},{"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/store(_:in:)","path":"\/documentation\/forked\/atomicrepository\/store(_:in:)","taskGroups":[],"usr":"s:6Forked16AtomicRepositoryC5store_2inyAA6CommitVyxG_AA4ForkVtKF","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"store"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"commit","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6Forked6CommitV","text":"Commit","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Resource"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"in"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"fork"},{"kind":"text","text":": "},{"text":"Fork","preciseIdentifier":"s:6Forked4ForkV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"language":"swift","title":"store(_:in:)","kind":"org.swift.docc.kind.instanceMethod","availableLanguages":["swift"]},{"availableLanguages":["swift"],"abstract":[{"text":"Removes all content from all branches, resetting to the initial state.","type":"text"},{"text":" ","type":"text"},{"text":"It does not remove the existing branches, but removes their content.","type":"text"}],"kind":"org.swift.docc.kind.instanceMethod","path":"\/documentation\/forked\/forkedresource\/removeallcontent()","language":"swift","title":"removeAllContent()","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/removeAllContent()","taskGroups":[],"usr":"s:6Forked0A8ResourceC16removeAllContentyyKF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"removeAllContent"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"throws"}]},{"usr":"s:6Forked0A8ResourceC13forkedVersionSivp","fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"forkedVersion"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/forkedVersion","abstract":[{"text":"The version of the Forked API used to create this resource.","type":"text"}],"availableLanguages":["swift"],"taskGroups":[],"title":"forkedVersion","path":"\/documentation\/forked\/forkedresource\/forkedversion","language":"swift","kind":"org.swift.docc.kind.instanceProperty"},{"availableLanguages":["swift"],"kind":"org.swift.docc.kind.instanceMethod","taskGroups":[],"title":"create(_:)","usr":"s:6Forked0A8ResourceC6createyyAA4ForkVKF","path":"\/documentation\/forked\/forkedresource\/create(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"create","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"fork","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6Forked4ForkV","kind":"typeIdentifier","text":"Fork"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"language":"swift","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/create(_:)","abstract":[{"text":"Create a new fork. Will throw if a fork with the same name already exists.","type":"text"}]},{"abstract":[{"type":"text","text":"Learn how to use Forked to manage shared data in your Swift applications."}],"availableLanguages":["swift"],"path":"\/documentation\/forked\/gettingstarted","taskGroups":[],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/GettingStarted","title":"Getting Started with Forked","language":"swift","kind":"org.swift.docc.kind.article"},{"title":"syncAllForks()","abstract":[{"type":"text","text":"Merges all forks so they are all at the same version. This involves merging all forks into the main fork"},{"text":" ","type":"text"},{"text":"first, and then merging the main fork into all other forks.","type":"text"},{"text":" ","type":"text"},{"text":"This particular overload handles merges of  ","type":"text"},{"code":"Mergeable","type":"codeVoice"},{"text":" resources.","type":"text"}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/syncAllForks()-9xz2c","availableLanguages":["swift"],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"syncAllForks"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"throws"}],"kind":"org.swift.docc.kind.instanceMethod","language":"swift","taskGroups":[],"usr":"s:6Forked0A8ResourceCA2A9Mergeable0B0RpzrlE12syncAllForksyyKF","path":"\/documentation\/forked\/forkedresource\/syncallforks()-9xz2c"},{"path":"\/documentation\/forked\/changestream","title":"ChangeStream","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChangeStream","kind":"identifier"},{"text":" = ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncStream","preciseIdentifier":"s:ScS"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ForkChange","preciseIdentifier":"s:6Forked10ForkChangeV"},{"kind":"text","text":">"}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ChangeStream","language":"swift","kind":"org.swift.docc.kind.typeAlias","availableLanguages":["swift"],"taskGroups":[],"usr":"s:6Forked12ChangeStreama"},{"path":"\/documentation\/forked\/forkedresource\/changestream","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/changeStream","taskGroups":[],"usr":"s:6Forked0A8ResourceC12changeStreamScSyAA10ForkChangeVGvp","kind":"org.swift.docc.kind.instanceProperty","availableLanguages":["swift"],"language":"swift","abstract":[{"text":"Creates and returns an AsyncStream which provides notifications of all changes to any fork","type":"text"},{"type":"text","text":" "},{"text":"in the repository. The stream will continue until cancelled or until the ForkedResource","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"is deallocated."}],"title":"changeStream","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"changeStream","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Forked12ChangeStreama","text":"ChangeStream"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}]},{"availableLanguages":["swift"],"abstract":[{"type":"text","text":"When an object is created for the first time, or saved,"},{"text":" ","type":"text"},{"type":"text","text":"this version is set to the most recent version ("},{"code":"currentModelVersion","type":"codeVoice"},{"type":"text","text":")."},{"type":"text","text":" "},{"text":"When loading data from disk (eg with ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":") or over a network, this"},{"type":"text","text":" "},{"text":"can be compared with ","type":"text"},{"type":"codeVoice","code":"currentModelVersion"},{"type":"text","text":" to see if"},{"type":"text","text":" "},{"text":"the model saved is a known version. If not, we should not","type":"text"},{"type":"text","text":" "},{"text":"try to merge with it.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This is optional so that it is possible to add it to an existing"},{"type":"text","text":" "},{"type":"text","text":"model that was not versioned, and still use "},{"code":"Codable","type":"codeVoice"},{"text":" migration.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"A value of "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" is treated the same as "},{"type":"codeVoice","code":"0"},{"type":"text","text":"."}],"title":"modelVersion","path":"\/documentation\/forked\/versionedmodel\/modelversion","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/VersionedModel\/modelVersion","taskGroups":[],"usr":"s:6Forked14VersionedModelP12modelVersionSiSgvp","kind":"org.swift.docc.kind.instanceProperty","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"modelVersion","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":"? { ","kind":"text"},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"language":"swift"},{"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkChange","path":"\/documentation\/forked\/forkchange","availableLanguages":["swift"],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ForkChange","kind":"identifier"}],"language":"swift","usr":"s:6Forked10ForkChangeV","title":"ForkChange","taskGroups":[{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/ForkChange\/fork","doc:\/\/Forked\/documentation\/Forked\/ForkChange\/mergingFork","doc:\/\/Forked\/documentation\/Forked\/ForkChange\/version"],"title":"Instance Properties"},{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/ForkChange\/Equatable-Implementations"],"title":"Default Implementations"}],"kind":"org.swift.docc.kind.structure"},{"abstract":[{"type":"text","text":"Convenience for creating simple forked resource for in-memory use."},{"type":"text","text":" "},{"text":"Create an in-memory ForkedResource with the given fork names, and initial value.","type":"text"},{"text":" ","type":"text"},{"text":"The setup ensures that all forks are synced up with the initial value — if there is one —","type":"text"},{"type":"text","text":" "},{"text":"which is different to the default behavior when you first create a ForkedResource. (In a forked resource,","type":"text"},{"type":"text","text":" "},{"text":"a new fork is initially empty, and may not be in sync with the main fork until merged.)","type":"text"}],"taskGroups":[],"path":"\/documentation\/forked\/forkedresource\/init(initialvalue:forknames:)","language":"swift","availableLanguages":["swift"],"fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"text":"initialValue","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":"? = nil, ","kind":"text"},{"text":"forkNames","kind":"externalParam"},{"kind":"text","text":": ["},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"] = []) ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"RepositoryType"},{"text":" == ","kind":"text"},{"preciseIdentifier":"s:6Forked16AtomicRepositoryC","kind":"typeIdentifier","text":"AtomicRepository"},{"text":"<","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Equatable","kind":"typeIdentifier","preciseIdentifier":"s:SQ"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"R"},{"text":" : ","kind":"text"},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/init(initialValue:forkNames:)","kind":"org.swift.docc.kind.initializer","usr":"s:6Forked0A8ResourceC12initialValue9forkNamesACyAA16AtomicRepositoryCyqd__GGqd__Sg_SaySSGtcAHRszSQRd__s8SendableRd__lufc","title":"init(initialValue:forkNames:)"},{"taskGroups":[],"abstract":[{"type":"text","text":"Returns the common ancestor commit for a given fork with the main fork."}],"usr":"s:6Forked0A8ResourceC14commonAncestor2ofAA6CommitVy0B0QzGAA4ForkV_tKF","title":"commonAncestor(of:)","kind":"org.swift.docc.kind.instanceMethod","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/commonAncestor(of:)","availableLanguages":["swift"],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"commonAncestor","kind":"identifier"},{"kind":"text","text":"("},{"text":"of","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"fork","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6Forked4ForkV","kind":"typeIdentifier","text":"Fork"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Forked6CommitV","text":"Commit"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:6Forked0A8ResourceC","kind":"typeIdentifier","text":"ForkedResource"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"RepositoryType"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"ResourceType"},{"text":">","kind":"text"}],"language":"swift","path":"\/documentation\/forked\/forkedresource\/commonancestor(of:)"},{"kind":"org.swift.docc.kind.instanceProperty","usr":"s:6Forked0A8ResourceC10repositoryxvp","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"repository"},{"kind":"text","text":": "},{"text":"RepositoryType","kind":"typeIdentifier"}],"availableLanguages":["swift"],"abstract":[{"text":"The repository used to store data for the forked resource.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The forked resource takes complete ownership of this. You should not"},{"text":" ","type":"text"},{"text":"use the repository from outside the ","type":"text"},{"type":"codeVoice","code":"ForkedResource"},{"type":"text","text":" object. Doing so"},{"text":" ","type":"text"},{"text":"may lead to threading errors or logic bugs.","type":"text"}],"taskGroups":[],"title":"repository","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/repository","language":"swift","path":"\/documentation\/forked\/forkedresource\/repository"},{"taskGroups":[],"path":"\/documentation\/forked\/forkedresource\/value(in:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"value","kind":"identifier"},{"text":"(","kind":"text"},{"text":"in","kind":"externalParam"},{"kind":"text","text":" "},{"text":"fork","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6Forked4ForkV","kind":"typeIdentifier","text":"Fork"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:6Forked0A8ResourceC","kind":"typeIdentifier","text":"ForkedResource"},{"text":"<","kind":"text"},{"text":"RepositoryType","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"kind":"typeIdentifier","text":"ResourceType"},{"text":"?","kind":"text"}],"availableLanguages":["swift"],"title":"value(in:)","language":"swift","abstract":[{"type":"text","text":"Same as calling "},{"code":"resource(of:)","type":"codeVoice"},{"type":"text","text":"."}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/value(in:)","kind":"org.swift.docc.kind.instanceMethod","usr":"s:6Forked0A8ResourceC5value2in0B0QzSgAA4ForkV_tKF"},{"usr":"s:6Forked4ForkV4fromACs7Decoder_p_tKcfc","fragments":[{"kind":"keyword","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":" "},{"kind":"internalParam","text":"decoder"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"taskGroups":[],"language":"swift","path":"\/documentation\/forked\/fork\/init(from:)","kind":"org.swift.docc.kind.initializer","title":"init(from:)","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Fork\/init(from:)","availableLanguages":["swift"]},{"kind":"org.swift.docc.kind.collectionGroup","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Commit\/Equatable-Implementations","title":"Equatable Implementations","availableLanguages":["swift"],"taskGroups":[{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/Commit\/!=(_:_:)"],"title":"Operators"}],"language":"swift","path":"\/documentation\/forked\/commit\/equatable-implementations"},{"kind":"org.swift.docc.kind.instanceMethod","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/resource(of:)","path":"\/documentation\/forked\/forkedresource\/resource(of:)","abstract":[{"text":"Will return the resource, if there is one available, and ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" otherwise.","type":"text"}],"taskGroups":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"resource","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"of"},{"text":" ","kind":"text"},{"text":"fork","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6Forked4ForkV","kind":"typeIdentifier","text":"Fork"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ForkedResource","preciseIdentifier":"s:6Forked0A8ResourceC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"RepositoryType"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"ResourceType"},{"text":"?","kind":"text"}],"title":"resource(of:)","usr":"s:6Forked0A8ResourceC8resource2of0B0QzSgAA4ForkV_tKF","availableLanguages":["swift"],"language":"swift"},{"availableLanguages":["swift"],"taskGroups":[{"title":"Enumeration Cases","identifiers":["doc:\/\/Forked\/documentation\/Forked\/Error\/attemptToAccessNonExistentCommitInFork(_:)","doc:\/\/Forked\/documentation\/Forked\/Error\/attemptToAccessNonExistentFork(_:)","doc:\/\/Forked\/documentation\/Forked\/Error\/attemptToAccessNonExistentVersion(_:_:)","doc:\/\/Forked\/documentation\/Forked\/Error\/attemptToCreateExistingFork(_:)","doc:\/\/Forked\/documentation\/Forked\/Error\/attemptToDeleteAllDataFromMainFork","doc:\/\/Forked\/documentation\/Forked\/Error\/attemptToDeleteProtectedFork(_:)","doc:\/\/Forked\/documentation\/Forked\/Error\/attemptToReplaceExistingVersion(_:_:)","doc:\/\/Forked\/documentation\/Forked\/Error\/attemptToRestartMainFork","doc:\/\/Forked\/documentation\/Forked\/Error\/unexpectedError(_:)"]},{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/Error\/Error-Implementations"],"title":"Default Implementations"}],"abstract":[{"type":"text","text":"Errors that can arise when  using "},{"code":"ForkedResource","type":"codeVoice"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Error"}],"kind":"org.swift.docc.kind.enumeration","language":"swift","title":"Error","path":"\/documentation\/forked\/error","usr":"s:6Forked5ErrorO","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Error"},{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"store"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"commit","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Commit","preciseIdentifier":"s:6Forked6CommitV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Resource","preciseIdentifier":"s:6Forked10RepositoryP8ResourceQa","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"in","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"fork"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6Forked4ForkV","text":"Fork","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"title":"store(_:in:)","kind":"org.swift.docc.kind.instanceMethod","usr":"s:6Forked10RepositoryP5store_2inyAA6CommitVy8ResourceQzG_AA4ForkVtKF","language":"swift","abstract":[{"type":"text","text":"Store a version of the resource in a fork. The fork must exist, and the"},{"type":"text","text":" "},{"type":"text","text":"version must not already be in the fork, otherwise an error is thrown."}],"taskGroups":[],"availableLanguages":["swift"],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Repository\/store(_:in:)","path":"\/documentation\/forked\/repository\/store(_:in:)"},{"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Error\/attemptToAccessNonExistentFork(_:)","path":"\/documentation\/forked\/error\/attempttoaccessnonexistentfork(_:)","availableLanguages":["swift"],"title":"Error.attemptToAccessNonExistentFork(_:)","usr":"s:6Forked5ErrorO30attemptToAccessNonExistentForkyAcA0H0VcACmF","language":"swift","taskGroups":[],"fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"attemptToAccessNonExistentFork","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Fork","preciseIdentifier":"s:6Forked4ForkV"},{"kind":"text","text":")"}],"kind":"org.swift.docc.kind.enumerationCase"},{"title":"mainVersion(differsFromVersionIn:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"mainVersion"},{"kind":"text","text":"("},{"text":"differsFromVersionIn","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"fork"},{"kind":"text","text":": "},{"text":"Fork","kind":"typeIdentifier","preciseIdentifier":"s:6Forked4ForkV"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"language":"swift","taskGroups":[],"kind":"org.swift.docc.kind.instanceMethod","abstract":[{"text":"Whether the fork and main fork are at the same version or not.","type":"text"}],"usr":"s:6Forked0A8ResourceC11mainVersion011differsFromD2InSbAA4ForkV_tKF","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/mainVersion(differsFromVersionIn:)","path":"\/documentation\/forked\/forkedresource\/mainversion(differsfromversionin:)","availableLanguages":["swift"]},{"taskGroups":[],"abstract":[{"type":"text","text":"Initialize the FileRepository with a root directory. Creates the directory if it doesn’t exist."}],"usr":"s:6Forked14FileRepositoryC13rootDirectoryAC10Foundation3URLV_tKcfc","language":"swift","kind":"org.swift.docc.kind.initializer","fragments":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"rootDirectory"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV","text":"URL"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/FileRepository\/init(rootDirectory:)","title":"init(rootDirectory:)","availableLanguages":["swift"],"path":"\/documentation\/forked\/filerepository\/init(rootdirectory:)"},{"kind":"org.swift.docc.kind.instanceProperty","availableLanguages":["swift"],"taskGroups":[],"language":"swift","title":"timestamp","path":"\/documentation\/forked\/version\/timestamp","usr":"s:6Forked7VersionV9timestamp10Foundation4DateVvp","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"timestamp"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV","text":"Date"}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Version\/timestamp"},{"availableLanguages":["swift"],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Version\/.._(_:_:)","usr":"s:SLsE3zzloiySnyxGx_xtFZ::SYNTHESIZED::s:6Forked7VersionV","path":"\/documentation\/forked\/version\/'.._(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"..<","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"internalParam","text":"minimum"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"maximum","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Range","kind":"typeIdentifier","preciseIdentifier":"s:Sn"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"title":"..<(_:_:)","kind":"org.swift.docc.kind.operator","abstract":[{"text":"Returns a half-open range that contains its lower bound but not its upper","type":"text"},{"type":"text","text":" "},{"type":"text","text":"bound."}],"taskGroups":[],"language":"swift"},{"kind":"org.swift.docc.kind.collectionGroup","path":"\/documentation\/forked\/atomicrepository\/persistent-implementations","taskGroups":[{"identifiers":["doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/load()","doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/load()-520e","doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/persist()","doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/persist()-91lo2"],"title":"Instance Methods"}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/AtomicRepository\/Persistent-Implementations","language":"swift","availableLanguages":["swift"],"title":"Persistent Implementations"},{"taskGroups":[{"title":"Extended Enumerations","identifiers":["doc:\/\/Forked\/documentation\/Forked\/Swift\/Optional"]}],"path":"\/documentation\/forked\/swift","language":"swift","availableLanguages":["swift"],"usr":"s:m:s:e:s:Sq6ForkedAA9MergeableRzlE6merged15withSubordinate14commonAncestorxSgAF_AFtKF","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Swift","title":"Swift","kind":"org.swift.docc.kind.extendedModule"},{"language":"swift","path":"\/documentation\/forked\/filerepository\/forks","usr":"s:6Forked14FileRepositoryC5forksSayAA4ForkVGvp","kind":"org.swift.docc.kind.instanceProperty","taskGroups":[],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"forks","kind":"identifier"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:6Forked4ForkV","text":"Fork","kind":"typeIdentifier"},{"kind":"text","text":"] { "},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/FileRepository\/forks","availableLanguages":["swift"],"title":"forks"},{"usr":"s:6Forked0A8ResourceCA2A9Mergeable0B0RpzrlE13mergeIntoMain4fromAA11MergeActionOAA4ForkV_tKF","abstract":[{"type":"text","text":"Merges from one fork into the main fork. May perform a 3-way merge."},{"text":" ","type":"text"},{"type":"text","text":"A "},{"type":"codeVoice","code":"MergeAction"},{"type":"text","text":" is returned to indicate the type of merge that took place."},{"text":" ","type":"text"},{"type":"text","text":"After this operation, the main fork may be updated. The version of the other fork will be unchanged."},{"type":"text","text":" "},{"type":"text","text":"Note that this may change the commits stored in unrelated forks, in order to preserve common ancestors."},{"type":"text","text":" "},{"type":"text","text":"This particular overload handles merges of "},{"code":"Mergeable","type":"codeVoice"},{"type":"text","text":" resources."}],"availableLanguages":["swift"],"language":"swift","path":"\/documentation\/forked\/forkedresource\/mergeintomain(from:)-352k5","kind":"org.swift.docc.kind.instanceMethod","taskGroups":[],"fragments":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"mergeIntoMain"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"fromFork"},{"text":": ","kind":"text"},{"text":"Fork","kind":"typeIdentifier","preciseIdentifier":"s:6Forked4ForkV"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6Forked11MergeActionO","text":"MergeAction"}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/mergeIntoMain(from:)-352k5","title":"mergeIntoMain(from:)"},{"usr":"s:6Forked6CommitV7contentAA0B7ContentOyxGvp","language":"swift","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"content","kind":"identifier"},{"kind":"text","text":": "},{"text":"CommitContent","kind":"typeIdentifier","preciseIdentifier":"s:6Forked13CommitContentO"},{"kind":"text","text":"<"},{"text":"Resource","kind":"typeIdentifier"},{"text":">","kind":"text"}],"availableLanguages":["swift"],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Commit\/content","title":"content","kind":"org.swift.docc.kind.instanceProperty","abstract":[{"text":"The content stored in the commit, usually a copy of the resource.","type":"text"}],"path":"\/documentation\/forked\/commit\/content","taskGroups":[]},{"language":"swift","kind":"org.swift.docc.kind.collectionGroup","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/CommitContent\/Equatable-Implementations","title":"Equatable Implementations","availableLanguages":["swift"],"taskGroups":[{"title":"Operators","identifiers":["doc:\/\/Forked\/documentation\/Forked\/CommitContent\/!=(_:_:)","doc:\/\/Forked\/documentation\/Forked\/CommitContent\/==(_:_:)"]}],"path":"\/documentation\/forked\/commitcontent\/equatable-implementations"},{"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Commit\/init(from:)","language":"swift","title":"init(from:)","usr":"s:6Forked6CommitVAASeRzSERzrlE4fromACyxGs7Decoder_p_tKcfc","fragments":[{"kind":"keyword","text":"init"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"decoder"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier","text":"Decoder"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"kind":"org.swift.docc.kind.initializer","path":"\/documentation\/forked\/commit\/init(from:)","availableLanguages":["swift"],"taskGroups":[]},{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"kind":"text","text":" "},{"text":"hasher","kind":"internalParam"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Hasher","preciseIdentifier":"s:s6HasherV"},{"text":")","kind":"text"}],"language":"swift","path":"\/documentation\/forked\/version\/hash(into:)","availableLanguages":["swift"],"usr":"s:6Forked7VersionV4hash4intoys6HasherVz_tF","title":"hash(into:)","taskGroups":[],"kind":"org.swift.docc.kind.instanceMethod","referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Version\/hash(into:)"},{"path":"\/documentation\/forked\/forkedresource\/hasunmergedcommitsformain(in:)","taskGroups":[],"language":"swift","title":"hasUnmergedCommitsForMain(in:)","kind":"org.swift.docc.kind.instanceMethod","abstract":[{"type":"text","text":"Whether fork has commits not yet merged into main."}],"usr":"s:6Forked0A8ResourceC25hasUnmergedCommitsForMain2inSbAA4ForkV_tKF","availableLanguages":["swift"],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hasUnmergedCommitsForMain"},{"kind":"text","text":"("},{"text":"in","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"fork","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6Forked4ForkV","text":"Fork","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/ForkedResource\/hasUnmergedCommitsForMain(in:)"},{"availableLanguages":["swift"],"usr":"s:6Forked10RepositoryP12removeCommit2at4fromyAA7VersionV_AA4ForkVtKF","title":"removeCommit(at:from:)","language":"swift","abstract":[{"text":"Remove a commit for a given version from the fork. If the version is","type":"text"},{"type":"text","text":" "},{"text":"not found, an error is thrown.","type":"text"}],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Repository\/removeCommit(at:from:)","taskGroups":[],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"removeCommit"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"at"},{"text":" ","kind":"text"},{"text":"version","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Version","kind":"typeIdentifier","preciseIdentifier":"s:6Forked7VersionV"},{"text":", ","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"fork"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Fork","preciseIdentifier":"s:6Forked4ForkV"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"path":"\/documentation\/forked\/repository\/removecommit(at:from:)","kind":"org.swift.docc.kind.instanceMethod"},{"path":"\/documentation\/forked\/fork\/!=(_:_:)","kind":"org.swift.docc.kind.operator","abstract":[{"text":"Returns a Boolean value indicating whether two values are not equal.","type":"text"}],"availableLanguages":["swift"],"usr":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:6Forked4ForkV","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"language":"swift","title":"!=(_:_:)","taskGroups":[],"referenceURL":"doc:\/\/Forked\/documentation\/Forked\/Fork\/!=(_:_:)"}]